{"ast":null,"code":"import _defineProperty from\"F:/React code/diagnostic/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";var _createReducer;import produce from\"immer\";import{createReducer}from\"@reduxjs/toolkit\";import*as actions from\"../actions/auth.action\";var initialState={isAuthenticated:false,token:null,loadingStatus:false,responseMessage:'',isValidCred:false,getOtpResponse:{},decryptUserDetails:null};export var authReducer=createReducer(initialState,(_createReducer={},_defineProperty(_createReducer,actions.requestStatus.toString(),function(state,action){return produce(state,function(draft){draft.loadingStatus=action.payload;});}),_defineProperty(_createReducer,actions.checkAuthCredResponse.toString(),function(state,action){return produce(state,function(draft){draft.isValidCred=action.payload.valid;draft.responseMessage=action.payload.valid?\"\":\"Username or Password is not correct\";});}),_defineProperty(_createReducer,actions.checkAuthOTPResponse.toString(),function(state,action){return produce(state,function(draft){console.log(action.payload);if(action.payload.access_token){draft.getOtpResponse.valid=true;draft.getOtpResponse.access_token=action.payload.access_token;draft.getOtpResponse.expires_in=action.payload.expires_in;draft.getOtpResponse['.issued']=action.payload['.issued'];draft.getOtpResponse['.expires']=action.payload['.expires'];draft.getOtpResponse.userId=action.payload.userId;draft.getOtpResponse.userName=action.payload.userName;draft.getOtpResponse.code=action.payload.code;draft.getOtpResponse.encrypt_userId=action.payload.encrypt_userId;}else{draft.getOtpResponse.valid=false;draft.getOtpResponse.message=\"OTP is incorrect\";}});}),_defineProperty(_createReducer,actions.getDecryptUserId.toString(),function(state,action){return produce(state,function(draft){});}),_defineProperty(_createReducer,actions.getDecryptUserIdResponse.toString(),function(state,action){return produce(state,function(draft){draft.decryptUserDetails=action.payload;});}),_createReducer));","map":{"version":3,"sources":["F:/React code/diagnostic/src/_redux/reducers/auth.reducer.js"],"names":["produce","createReducer","actions","initialState","isAuthenticated","token","loadingStatus","responseMessage","isValidCred","getOtpResponse","decryptUserDetails","authReducer","requestStatus","toString","state","action","draft","payload","checkAuthCredResponse","valid","checkAuthOTPResponse","console","log","access_token","expires_in","userId","userName","code","encrypt_userId","message","getDecryptUserId","getDecryptUserIdResponse"],"mappings":"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","sourcesContent":["import produce from \"immer\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport * as actions from \"../actions/auth.action\";\r\n\r\nconst initialState = {\r\n    isAuthenticated:false,\r\n    token:null,\r\n    loadingStatus:false,\r\n    responseMessage:'',\r\n    isValidCred:false,\r\n    getOtpResponse:{},\r\n    decryptUserDetails:null\r\n}\r\n\r\n\r\nexport const authReducer = createReducer(initialState, {\r\n    [actions.requestStatus.toString()]: (state, action) =>\r\n        produce (state, (draft) => {\r\n            draft.loadingStatus = action.payload;\r\n    }),\r\n\r\n    [actions.checkAuthCredResponse.toString()]: (state, action) =>\r\n        produce (state, (draft) => {\r\n            draft.isValidCred = action.payload.valid;\r\n            draft.responseMessage = action.payload.valid ? \"\" : \"Username or Password is not correct\"\r\n    }),\r\n    [actions.checkAuthOTPResponse.toString()]: (state, action) =>\r\n        produce (state, (draft) => {\r\n            console.log(action.payload)\r\n             if(action.payload.access_token){\r\n                 draft.getOtpResponse.valid = true;\r\n                 draft.getOtpResponse.access_token = action.payload.access_token;\r\n                 draft.getOtpResponse.expires_in = action.payload.expires_in;\r\n                 draft.getOtpResponse['.issued'] = action.payload['.issued'];\r\n                 draft.getOtpResponse['.expires'] = action.payload['.expires'];\r\n                 draft.getOtpResponse.userId = action.payload.userId;\r\n                 draft.getOtpResponse.userName = action.payload.userName;\r\n                 draft.getOtpResponse.code = action.payload.code;\r\n                 draft.getOtpResponse.encrypt_userId = action.payload.encrypt_userId;\r\n             }\r\n             else{\r\n                draft.getOtpResponse.valid = false;\r\n                draft.getOtpResponse.message = \"OTP is incorrect\";\r\n             }\r\n    }),\r\n    [actions.getDecryptUserId.toString()]: (state, action) =>\r\n    produce (state, (draft) => {}),\r\n    [actions.getDecryptUserIdResponse.toString()]: (state, action) =>\r\n    produce (state, (draft) => {\r\n        draft.decryptUserDetails = action.payload;\r\n    }),\r\n});"]},"metadata":{},"sourceType":"module"}