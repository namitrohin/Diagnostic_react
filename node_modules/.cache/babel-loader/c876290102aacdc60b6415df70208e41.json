{"ast":null,"code":"var _jsxFileName = \"F:\\\\React code\\\\diagnostic\\\\src\\\\pages\\\\Master\\\\employee\\\\browse.js\",\n    _s = $RefreshSig$();\n\nimport { Checkbox, TextField } from \"@material-ui/core\";\nimport { DataGrid } from \"@mui/x-data-grid\";\nimport React, { useEffect, useState } from \"react\";\nimport { showErrorToast, showSuccessToast } from \"../../../components/common\";\nimport CustomPagination from \"../../../components/CustomPagination\";\nimport CustomNoRowsOverlay from \"../../../components/customRowComponent\";\nimport { Loader } from \"../../../components/loader\";\nimport { CommonController } from \"../../../_redux/controller/common.controller\";\nimport ActionButtons from \"../../../components/action-buttons\";\nimport { useDispatch } from \"react-redux\";\nimport { selectedEmployeeId } from \"../../../_redux/actions/masters/all.action\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst user_id = {\n  user_id: localStorage.getItem(\"userId\")\n};\nconst label = {\n  inputProps: {\n    \"aria-label\": \"Checkbox\"\n  }\n};\n\nconst EmployeeBrowse = ({\n  onEdit\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [browseListData, setBrowseListData] = useState([]);\n  const [totalRecord, setTotalRecords] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [params, setParams] = useState({\n    pageNo: 1,\n    pageSize: 10,\n    filter_value: \"\",\n    sort_column: \"\",\n    sort_order: \"\"\n  });\n\n  const handleParams = event => {\n    setTimeout(() => {\n      setParams({ ...params,\n        [event.target.name]: event.target.value\n      });\n    }, 800);\n  };\n\n  const getBrowseListData = async () => {\n    setLoading(true);\n    await CommonController.commonApiCall(\"Employee/EmpMasterBrowse\", params, user_id).then(data => {\n      setBrowseListData(data.data);\n      setTotalRecords(data.recordsFiltered);\n    }).catch(err => {\n      showErrorToast(err);\n    });\n    setLoading(false);\n  };\n\n  const handlePageSizeChange = param => {\n    setParams({ ...params,\n      pageSize: param.pageSize\n    });\n  };\n\n  const handlePageChange = param => {\n    setParams({ ...params,\n      pageNo: param.page\n    });\n  };\n\n  useEffect(() => {\n    getBrowseListData();\n  }, []);\n  useEffect(() => {\n    getBrowseListData();\n  }, [params]);\n\n  const handleEdit = id => {\n    dispatch(selectedEmployeeId(id));\n    onEdit();\n  };\n\n  const handleDeleteRow = id => {\n    CommonController.commonApiCallFilter(\"Employee/EmployeeMasterDelete\", {\n      employee_id: id\n    }).then(data => {\n      if (data.valid) {\n        showSuccessToast(\"Record Deleted Successfully\");\n        getBrowseListData();\n      } else {\n        showErrorToast(\"Something went wrong\");\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [loading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter_box mb-5\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-1 d-flex align-items-center\",\n          children: /*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"mb-0\",\n            children: \"Filters\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-2\",\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            id: \"outlined-basic\",\n            size: \"small\",\n            onKeyUp: handleParams,\n            name: \"filter_value\",\n            label: \"Search\",\n            variant: \"outlined\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: 400,\n        width: \"100%\"\n      },\n      children: /*#__PURE__*/_jsxDEV(DataGrid, {\n        columns: [{\n          field: \"srno\",\n          headerName: \"Sr. no\",\n          flex: 0\n        }, {\n          field: \"code\",\n          headerName: \"Code\",\n          flex: 0.1\n        }, {\n          field: \"empname\",\n          headerName: \"Emp. Name\",\n          flex: 0.1\n        }, {\n          field: \"address\",\n          headerName: \"Address\",\n          flex: 0.1\n        }, {\n          field: \"mobile\",\n          headerName: \"Mobile\",\n          flex: 0.1\n        }, {\n          field: \"email\",\n          headerName: \"Email\",\n          flex: 0.1\n        }, {\n          field: \"department\",\n          headerName: \"Department\",\n          flex: 0.1\n        }, {\n          field: \"designation\",\n          headerName: \"Designation\",\n          flex: 0.1\n        }, {\n          field: \"manager\",\n          headerName: \"Manager\",\n          flex: 0.1\n        }, {\n          field: \"disable\",\n          headerName: \"Disable\",\n          flex: 0.1,\n          renderCell: params => {\n            return /*#__PURE__*/_jsxDEV(Checkbox, { ...label,\n              color: \"primary\",\n              checked: params.row.disable === \"True\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 19\n            }, this);\n          }\n        }, {\n          field: \"\",\n          headerName: \"Actions\",\n          renderCell: params => /*#__PURE__*/_jsxDEV(ActionButtons, {\n            onEdit: () => handleEdit(params.row.id),\n            onDelete: () => handleDeleteRow(params.row.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 17\n          }, this),\n          flex: 0.1\n        }],\n        pagination: true,\n        disableColumnFilter: true,\n        pageSize: params.pageSize,\n        page: params.pageNo,\n        rowsPerPageOptions: [10, 15, 25, 100],\n        rowCount: totalRecord,\n        paginationMode: \"server\",\n        onPageSizeChange: handlePageSizeChange,\n        onPageChange: handlePageChange,\n        loading: loading,\n        rowHeight: 30,\n        components: {\n          Pagination: CustomPagination,\n          NoRowsOverlay: CustomNoRowsOverlay\n        },\n        onSortModelChange: sort => {\n          if (sort.length > 0) {\n            setParams({ ...params,\n              sort_column: sort[0].field,\n              sort_order: sort[0].sort\n            });\n          }\n        },\n        rows: browseListData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(EmployeeBrowse, \"q0o4Xm/ZDwPaKsGq3ify7cQ7BfQ=\", false, function () {\n  return [useDispatch];\n});\n\n_c = EmployeeBrowse;\nexport default EmployeeBrowse;\n\nvar _c;\n\n$RefreshReg$(_c, \"EmployeeBrowse\");","map":{"version":3,"sources":["F:/React code/diagnostic/src/pages/Master/employee/browse.js"],"names":["Checkbox","TextField","DataGrid","React","useEffect","useState","showErrorToast","showSuccessToast","CustomPagination","CustomNoRowsOverlay","Loader","CommonController","ActionButtons","useDispatch","selectedEmployeeId","user_id","localStorage","getItem","label","inputProps","EmployeeBrowse","onEdit","dispatch","browseListData","setBrowseListData","totalRecord","setTotalRecords","loading","setLoading","params","setParams","pageNo","pageSize","filter_value","sort_column","sort_order","handleParams","event","setTimeout","target","name","value","getBrowseListData","commonApiCall","then","data","recordsFiltered","catch","err","handlePageSizeChange","param","handlePageChange","page","handleEdit","id","handleDeleteRow","commonApiCallFilter","employee_id","valid","height","width","field","headerName","flex","renderCell","row","disable","Pagination","NoRowsOverlay","sort","length"],"mappings":"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","sourcesContent":["import { Checkbox, TextField } from \"@material-ui/core\";\nimport { DataGrid } from \"@mui/x-data-grid\";\nimport React, { useEffect, useState } from \"react\";\nimport { showErrorToast, showSuccessToast } from \"../../../components/common\";\nimport CustomPagination from \"../../../components/CustomPagination\";\nimport CustomNoRowsOverlay from \"../../../components/customRowComponent\";\nimport { Loader } from \"../../../components/loader\";\nimport { CommonController } from \"../../../_redux/controller/common.controller\";\nimport ActionButtons from \"../../../components/action-buttons\";\nimport { useDispatch } from \"react-redux\";\nimport { selectedEmployeeId } from \"../../../_redux/actions/masters/all.action\";\n\nconst user_id = {\n  user_id: localStorage.getItem(\"userId\"),\n};\n\nconst label = { inputProps: { \"aria-label\": \"Checkbox\" } };\nconst EmployeeBrowse = ({ onEdit }) => {\n  const dispatch = useDispatch();\n  const [browseListData, setBrowseListData] = useState([]);\n  const [totalRecord, setTotalRecords] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [params, setParams] = useState({\n    pageNo: 1,\n    pageSize: 10,\n    filter_value: \"\",\n    sort_column: \"\",\n    sort_order: \"\",\n  });\n\n  const handleParams = (event) => {\n    setTimeout(() => {\n      setParams({ ...params, [event.target.name]: event.target.value });\n    }, 800);\n  };\n\n  const getBrowseListData = async () => {\n    setLoading(true);\n    await CommonController.commonApiCall(\n      \"Employee/EmpMasterBrowse\",\n      params,\n      user_id\n    )\n      .then((data) => {\n        setBrowseListData(data.data);\n        setTotalRecords(data.recordsFiltered);\n      })\n      .catch((err) => {\n        showErrorToast(err);\n      });\n    setLoading(false);\n  };\n\n  const handlePageSizeChange = (param) => {\n    setParams({ ...params, pageSize: param.pageSize });\n  };\n  const handlePageChange = (param) => {\n    setParams({ ...params, pageNo: param.page });\n  };\n\n  useEffect(() => {\n    getBrowseListData();\n  }, []);\n\n  useEffect(() => {\n    getBrowseListData();\n  }, [params]);\n\n  const handleEdit = (id) => {\n    dispatch(selectedEmployeeId(id));\n    onEdit();\n  };\n\n  const handleDeleteRow = (id) => {\n    CommonController.commonApiCallFilter(\"Employee/EmployeeMasterDelete\", {\n      employee_id: id,\n    }).then((data) => {\n      if (data.valid) {\n        showSuccessToast(\"Record Deleted Successfully\");\n        getBrowseListData();\n      } else {\n        showErrorToast(\"Something went wrong\");\n      }\n    });\n  };\n\n  return (\n    <>\n      {loading && <Loader />}\n      <div className=\"filter_box mb-5\">\n        <div className=\"row\">\n          <div className=\"col-md-1 d-flex align-items-center\">\n            <h4 className=\"mb-0\">Filters</h4>\n          </div>\n\n          <div className=\"col-md-2\">\n            <TextField\n              fullWidth\n              id=\"outlined-basic\"\n              size=\"small\"\n              onKeyUp={handleParams}\n              name=\"filter_value\"\n              label=\"Search\"\n              variant=\"outlined\"\n            />\n          </div>\n        </div>\n      </div>\n      <div style={{ height: 400, width: \"100%\" }}>\n        <DataGrid\n          columns={[\n            {\n              field: \"srno\",\n              headerName: \"Sr. no\",\n              flex: 0,\n            },\n            {\n              field: \"code\",\n              headerName: \"Code\",\n              flex: 0.1,\n            },\n            {\n              field: \"empname\",\n              headerName: \"Emp. Name\",\n              flex: 0.1,\n            },\n            {\n              field: \"address\",\n              headerName: \"Address\",\n              flex: 0.1,\n            },\n            {\n              field: \"mobile\",\n              headerName: \"Mobile\",\n              flex: 0.1,\n            },\n            {\n              field: \"email\",\n              headerName: \"Email\",\n              flex: 0.1,\n            },\n            {\n              field: \"department\",\n              headerName: \"Department\",\n              flex: 0.1,\n            },\n            {\n              field: \"designation\",\n              headerName: \"Designation\",\n              flex: 0.1,\n            },\n            {\n              field: \"manager\",\n              headerName: \"Manager\",\n              flex: 0.1,\n            },\n            {\n              field: \"disable\",\n              headerName: \"Disable\",\n              flex: 0.1,\n              renderCell: (params) => {\n                return (\n                  <Checkbox\n                    {...label}\n                    color=\"primary\"\n                    checked={params.row.disable === \"True\"}\n                  />\n                );\n              },\n            },\n            {\n              field: \"\",\n              headerName: \"Actions\",\n              renderCell: (params) => (\n                <ActionButtons\n                  onEdit={() => handleEdit(params.row.id)}\n                  onDelete={() => handleDeleteRow(params.row.id)}\n                />\n              ),\n              flex: 0.1,\n            },\n          ]}\n          pagination\n          disableColumnFilter\n          pageSize={params.pageSize}\n          page={params.pageNo}\n          rowsPerPageOptions={[10, 15, 25, 100]}\n          rowCount={totalRecord}\n          paginationMode=\"server\"\n          onPageSizeChange={handlePageSizeChange}\n          onPageChange={handlePageChange}\n          loading={loading}\n          rowHeight={30}\n          components={{\n            Pagination: CustomPagination,\n            NoRowsOverlay: CustomNoRowsOverlay,\n          }}\n          onSortModelChange={(sort) => {\n            if (sort.length > 0) {\n              setParams({\n                ...params,\n                sort_column: sort[0].field,\n                sort_order: sort[0].sort,\n              });\n            }\n          }}\n          rows={browseListData}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default EmployeeBrowse;\n"]},"metadata":{},"sourceType":"module"}