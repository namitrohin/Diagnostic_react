{"ast":null,"code":"import { put, takeLatest } from \"redux-saga/effects\";\nimport { AccountMasterController } from \"../../controller/Masters/account.controller\";\nimport { getAccountMasterFiltersList, getAccountMasterFiltersListSuccess, previewSelectedAccount, previewSelectedAccountSuccess, searchAccountMasterData, searchAccountMasterDataSuccess, setAccountHide, setAccountVerified } from '../../actions/masters/account.action';\n\nfunction* searchAccountMasterSaga(action) {\n  try {\n    const browseAccountMaster = yield AccountMasterController.browseAccountData(action.payload.filters, action.payload.params);\n    yield put(searchAccountMasterDataSuccess(browseAccountMaster));\n  } catch (error) {\n    yield null;\n    yield put(searchAccountMasterDataSuccess(error));\n  }\n}\n\nfunction* getAccountFilterSaga(action) {\n  try {\n    const filterList = yield AccountMasterController.getAccountMasterFilters();\n    yield put(getAccountMasterFiltersListSuccess(filterList));\n  } catch (error) {\n    yield null;\n    yield put(getAccountMasterFiltersListSuccess(error));\n  }\n}\n\nfunction* previewSelectedAccountSaga(action) {\n  try {\n    const accountDetails = yield AccountMasterController.getSelectedAccountDetails(action.payload);\n    yield put(previewSelectedAccountSuccess(accountDetails));\n  } catch (error) {\n    yield null;\n    yield put(previewSelectedAccountSuccess(error));\n  }\n}\n\nfunction* setAccountHideSaga(action) {\n  try {\n    const accountEdit = yield AccountMasterController.accountHideUpdate(action.payload);\n  } catch (error) {\n    yield null;\n    yield put(previewSelectedAccountSuccess(error));\n  }\n}\n\nfunction* setAccountVerifiedSaga(action) {\n  try {\n    const accountEdit = yield AccountMasterController.updateAccountVerified(action.payload);\n\n    if (!accountEdit.valid) {\n      alert(\"something went wrong\");\n    }\n  } catch (error) {\n    yield null;\n    yield put(previewSelectedAccountSuccess(error));\n  }\n}\n\nexport default function* AccountMasterSaga() {\n  try {\n    yield takeLatest(searchAccountMasterData, searchAccountMasterSaga);\n    yield takeLatest(getAccountMasterFiltersList, getAccountFilterSaga);\n    yield takeLatest(previewSelectedAccount, previewSelectedAccountSaga);\n    yield takeLatest(setAccountHide, setAccountHideSaga);\n    yield takeLatest(setAccountVerified, setAccountVerifiedSaga);\n  } catch (e) {\n    yield null;\n  }\n}\n_c = AccountMasterSaga;\n\nvar _c;\n\n$RefreshReg$(_c, \"AccountMasterSaga\");","map":{"version":3,"sources":["F:/React code/diagnostic/src/_redux/middleware/Masters/account.saga.js"],"names":["put","takeLatest","AccountMasterController","getAccountMasterFiltersList","getAccountMasterFiltersListSuccess","previewSelectedAccount","previewSelectedAccountSuccess","searchAccountMasterData","searchAccountMasterDataSuccess","setAccountHide","setAccountVerified","searchAccountMasterSaga","action","browseAccountMaster","browseAccountData","payload","filters","params","error","getAccountFilterSaga","filterList","getAccountMasterFilters","previewSelectedAccountSaga","accountDetails","getSelectedAccountDetails","setAccountHideSaga","accountEdit","accountHideUpdate","setAccountVerifiedSaga","updateAccountVerified","valid","alert","AccountMasterSaga","e"],"mappings":"AAAA,SAASA,GAAT,EAAcC,UAAd,QAAgC,oBAAhC;AACA,SAASC,uBAAT,QAAwC,6CAAxC;AACA,SAASC,2BAAT,EAAsCC,kCAAtC,EAA0EC,sBAA1E,EAAkGC,6BAAlG,EAAiIC,uBAAjI,EAA0JC,8BAA1J,EAA0LC,cAA1L,EAA0MC,kBAA1M,QAAoO,sCAApO;;AAGA,UAAUC,uBAAV,CAAmCC,MAAnC,EAA2C;AACvC,MAAI;AACA,UAAMC,mBAAmB,GAAG,MAAMX,uBAAuB,CAACY,iBAAxB,CAA0CF,MAAM,CAACG,OAAP,CAAeC,OAAzD,EAAkEJ,MAAM,CAACG,OAAP,CAAeE,MAAjF,CAAlC;AACA,UAAMjB,GAAG,CAACQ,8BAA8B,CAACK,mBAAD,CAA/B,CAAT;AACH,GAHD,CAGE,OAAOK,KAAP,EAAc;AACZ,UAAM,IAAN;AACA,UAAMlB,GAAG,CAACQ,8BAA8B,CAACU,KAAD,CAA/B,CAAT;AACH;AACJ;;AAGD,UAAUC,oBAAV,CAAgCP,MAAhC,EAAwC;AACpC,MAAI;AACA,UAAMQ,UAAU,GAAG,MAAMlB,uBAAuB,CAACmB,uBAAxB,EAAzB;AACA,UAAMrB,GAAG,CAACI,kCAAkC,CAACgB,UAAD,CAAnC,CAAT;AACH,GAHD,CAGE,OAAOF,KAAP,EAAc;AACZ,UAAM,IAAN;AACA,UAAMlB,GAAG,CAACI,kCAAkC,CAACc,KAAD,CAAnC,CAAT;AACH;AACJ;;AAGD,UAAUI,0BAAV,CAAsCV,MAAtC,EAA8C;AAC1C,MAAI;AACA,UAAMW,cAAc,GAAG,MAAMrB,uBAAuB,CAACsB,yBAAxB,CAAkDZ,MAAM,CAACG,OAAzD,CAA7B;AACA,UAAMf,GAAG,CAACM,6BAA6B,CAACiB,cAAD,CAA9B,CAAT;AACH,GAHD,CAGE,OAAOL,KAAP,EAAc;AACZ,UAAM,IAAN;AACA,UAAMlB,GAAG,CAACM,6BAA6B,CAACY,KAAD,CAA9B,CAAT;AACH;AACJ;;AAED,UAAUO,kBAAV,CAA8Bb,MAA9B,EAAsC;AAClC,MAAI;AACA,UAAMc,WAAW,GAAG,MAAMxB,uBAAuB,CAACyB,iBAAxB,CAA0Cf,MAAM,CAACG,OAAjD,CAA1B;AACH,GAFD,CAEE,OAAOG,KAAP,EAAc;AACZ,UAAM,IAAN;AACA,UAAMlB,GAAG,CAACM,6BAA6B,CAACY,KAAD,CAA9B,CAAT;AACH;AACJ;;AAED,UAAUU,sBAAV,CAAkChB,MAAlC,EAA0C;AACtC,MAAI;AACA,UAAMc,WAAW,GAAG,MAAMxB,uBAAuB,CAAC2B,qBAAxB,CAA8CjB,MAAM,CAACG,OAArD,CAA1B;;AACA,QAAG,CAACW,WAAW,CAACI,KAAhB,EAAsB;AAClBC,MAAAA,KAAK,CAAC,sBAAD,CAAL;AACH;AACJ,GALD,CAKE,OAAOb,KAAP,EAAc;AACZ,UAAM,IAAN;AACA,UAAMlB,GAAG,CAACM,6BAA6B,CAACY,KAAD,CAA9B,CAAT;AACH;AACJ;;AAKD,eAAe,UAAUc,iBAAV,GAA+B;AAC1C,MAAI;AACA,UAAM/B,UAAU,CAACM,uBAAD,EAA0BI,uBAA1B,CAAhB;AACA,UAAMV,UAAU,CAACE,2BAAD,EAA8BgB,oBAA9B,CAAhB;AACA,UAAMlB,UAAU,CAACI,sBAAD,EAAyBiB,0BAAzB,CAAhB;AACA,UAAMrB,UAAU,CAACQ,cAAD,EAAiBgB,kBAAjB,CAAhB;AACA,UAAMxB,UAAU,CAACS,kBAAD,EAAqBkB,sBAArB,CAAhB;AACH,GAND,CAOA,OAAMK,CAAN,EAAQ;AACJ,UAAM,IAAN;AACH;AACJ;KAXwBD,iB","sourcesContent":["import { put, takeLatest } from \"redux-saga/effects\";\r\nimport { AccountMasterController } from \"../../controller/Masters/account.controller\";\r\nimport { getAccountMasterFiltersList, getAccountMasterFiltersListSuccess, previewSelectedAccount, previewSelectedAccountSuccess, searchAccountMasterData, searchAccountMasterDataSuccess, setAccountHide, setAccountVerified } from '../../actions/masters/account.action';\r\n \r\n\r\nfunction* searchAccountMasterSaga (action) {\r\n    try {   \r\n        const browseAccountMaster = yield AccountMasterController.browseAccountData(action.payload.filters, action.payload.params);\r\n        yield put(searchAccountMasterDataSuccess(browseAccountMaster));\r\n    } catch (error) {\r\n        yield null;\r\n        yield put(searchAccountMasterDataSuccess(error));\r\n    }\r\n}\r\n\r\n\r\nfunction* getAccountFilterSaga (action) {\r\n    try {   \r\n        const filterList = yield AccountMasterController.getAccountMasterFilters();\r\n        yield put(getAccountMasterFiltersListSuccess(filterList));\r\n    } catch (error) {\r\n        yield null;\r\n        yield put(getAccountMasterFiltersListSuccess(error));\r\n    }\r\n}\r\n\r\n\r\nfunction* previewSelectedAccountSaga (action) {\r\n    try {   \r\n        const accountDetails = yield AccountMasterController.getSelectedAccountDetails(action.payload);\r\n        yield put(previewSelectedAccountSuccess(accountDetails));\r\n    } catch (error) {\r\n        yield null;\r\n        yield put(previewSelectedAccountSuccess(error));\r\n    }\r\n}\r\n\r\nfunction* setAccountHideSaga (action) {\r\n    try {   \r\n        const accountEdit = yield AccountMasterController.accountHideUpdate(action.payload);\r\n    } catch (error) {\r\n        yield null;\r\n        yield put(previewSelectedAccountSuccess(error));\r\n    }\r\n}\r\n\r\nfunction* setAccountVerifiedSaga (action) {\r\n    try {   \r\n        const accountEdit = yield AccountMasterController.updateAccountVerified(action.payload);\r\n        if(!accountEdit.valid){\r\n            alert(\"something went wrong\");\r\n        }\r\n    } catch (error) {\r\n        yield null;\r\n        yield put(previewSelectedAccountSuccess(error));\r\n    }\r\n}\r\n\r\n \r\n\r\n\r\nexport default function* AccountMasterSaga () {\r\n    try {\r\n        yield takeLatest(searchAccountMasterData, searchAccountMasterSaga);\r\n        yield takeLatest(getAccountMasterFiltersList, getAccountFilterSaga);\r\n        yield takeLatest(previewSelectedAccount, previewSelectedAccountSaga);\r\n        yield takeLatest(setAccountHide, setAccountHideSaga);\r\n        yield takeLatest(setAccountVerified, setAccountVerifiedSaga);\r\n    }\r\n    catch(e){\r\n        yield null;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}