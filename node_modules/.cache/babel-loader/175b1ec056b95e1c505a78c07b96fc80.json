{"ast":null,"code":"var _jsxFileName = \"F:\\\\React code\\\\diagnostic\\\\src\\\\pages\\\\Master\\\\Configuration\\\\Account\\\\pincode\\\\browse.js\",\n    _s = $RefreshSig$();\n\nimport { DataGrid } from '@material-ui/data-grid';\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { clearPincodeInfoResponse, deleteSelectedPincode, getPincodeBrowseList, selectedPincodeInfo } from '../../../../../_redux/actions/masters/configuration.action';\nimport CustomPagination from '../../../../../components/CustomPagination';\nimport CustomNoRowsOverlay from '../../../../../components/customRowComponent';\nimport { Alert } from '@material-ui/lab';\nimport { TextField } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BrowsePincode = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [isLoading, setIsLoading] = useState(false);\n  const configurationLoading = useSelector(state => state.ConfigurationMaster.isLoading);\n  const getPincodeListResponse = useSelector(state => state.ConfigurationMaster.pincodeList);\n  const deletePincodeResponse = useSelector(state => state.ConfigurationMaster.pincodeResponse);\n  const [pincodeList, setPincodeList] = useState(null);\n  const [showMessage, setMessage] = useState({\n    type: \"\",\n    msg: \"\"\n  });\n  const [params, setParams] = useState({\n    pageNo: 1,\n    pageSize: 10,\n    filter_value: '',\n    sort_column: '',\n    sort_order: ''\n  });\n\n  const handlePageSizeChange = param => {\n    setParams({ ...params,\n      pageSize: parseInt(param.pageSize)\n    });\n  };\n\n  const handlePageChange = param => {\n    setParams({ ...params,\n      pageNo: param.page\n    });\n  };\n\n  useEffect(() => {\n    dispatch(getPincodeBrowseList(params));\n  }, []);\n  useEffect(() => {\n    dispatch(getPincodeBrowseList(params));\n  }, [params]);\n  useEffect(() => {\n    setIsLoading(configurationLoading);\n  }, [configurationLoading]);\n  useEffect(() => {\n    if (getPincodeListResponse) {\n      setPincodeList(getPincodeListResponse);\n    }\n  }, [getPincodeListResponse]);\n  useEffect(() => {\n    if (deletePincodeResponse) {\n      setMessage({ ...showMessage,\n        type: deletePincodeResponse.valid ? \"success\" : \"error\",\n        msg: deletePincodeResponse.valid ? \"Pincode deleted successfully\" : \"Something went wrong\"\n      });\n      setTimeout(() => {\n        setMessage({\n          type: \"\",\n          msg: \"\"\n        });\n      }, 2000);\n      dispatch(clearPincodeInfoResponse());\n      dispatch(getPincodeBrowseList(params));\n    }\n  }, [deletePincodeResponse]);\n\n  const onPreviewOrEdit = row => {\n    dispatch(selectedPincodeInfo(row));\n    props.onActionClick(1);\n  };\n\n  const deletePincode = row => {\n    var param = {\n      pin_code_id: row.pin_code_id\n    };\n    dispatch(deleteSelectedPincode(param));\n  };\n\n  const handleParams = event => {\n    setTimeout(() => {\n      setParams({ ...params,\n        [event.target.name]: event.target.value\n      });\n    }, 800);\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter_box mb-5\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-1 d-flex align-items-center\",\n          children: /*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"mb-0\",\n            children: \"Filters\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 73\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-2\",\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            id: \"outlined-basic\",\n            size: \"small\",\n            onKeyUp: handleParams,\n            name: \"filter_value\",\n            label: \"Search\",\n            variant: \"outlined\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: 350,\n        width: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(DataGrid, {\n        pagination: true,\n        disableColumnFilter: true,\n        pageSize: params.pageSize,\n        page: 1,\n        rowsPerPageOptions: [10, 20, 50, 100],\n        rowCount: pincodeList ? pincodeList.recordsFiltered : 0,\n        paginationMode: \"server\",\n        onPageSizeChange: handlePageSizeChange,\n        onPageChange: handlePageChange,\n        loading: isLoading,\n        rowHeight: 30,\n        components: {\n          Pagination: CustomPagination,\n          NoRowsOverlay: CustomNoRowsOverlay\n        },\n        columns: [{\n          field: 'id',\n          headerName: \"Sr No.\",\n          width: 120\n        }, {\n          field: 'pin_code_id',\n          headerName: \"Pincode ID\",\n          width: 120\n        }, {\n          field: 'pin_code_no',\n          headerName: \"Pincode\",\n          width: 200\n        }, {\n          field: 'city',\n          headerName: \"City\",\n          width: 200\n        }, {\n          field: 'state',\n          headerName: \"State\",\n          width: 200\n        }, {\n          field: 'district',\n          headerName: \"District\",\n          width: 200\n        }, {\n          field: '',\n          headerName: \"Actions\",\n          renderCell: params => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"action_btns\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              class: \"fas fa-search mr-2\",\n              onClick: () => onPreviewOrEdit(params.row)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n              class: \"far fa-edit mr-2\",\n              onClick: () => onPreviewOrEdit(params.row)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n              class: \"far fa-trash-alt mr-2\",\n              onClick: () => deletePincode(params.row)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 29\n          }, this),\n          width: 150\n        }],\n        rows: pincodeList ? pincodeList.data : []\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }, this), showMessage.type != \"\" ? /*#__PURE__*/_jsxDEV(Alert, {\n        severity: showMessage.type,\n        children: showMessage.msg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 39\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 12\n  }, this);\n};\n\n_s(BrowsePincode, \"VwJvsT9MbK/N8HK/vkcvOFKI29s=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = BrowsePincode;\nexport default BrowsePincode;\n\nvar _c;\n\n$RefreshReg$(_c, \"BrowsePincode\");","map":{"version":3,"sources":["F:/React code/diagnostic/src/pages/Master/Configuration/Account/pincode/browse.js"],"names":["DataGrid","React","useEffect","useState","useDispatch","useSelector","clearPincodeInfoResponse","deleteSelectedPincode","getPincodeBrowseList","selectedPincodeInfo","CustomPagination","CustomNoRowsOverlay","Alert","TextField","BrowsePincode","props","dispatch","isLoading","setIsLoading","configurationLoading","state","ConfigurationMaster","getPincodeListResponse","pincodeList","deletePincodeResponse","pincodeResponse","setPincodeList","showMessage","setMessage","type","msg","params","setParams","pageNo","pageSize","filter_value","sort_column","sort_order","handlePageSizeChange","param","parseInt","handlePageChange","page","valid","setTimeout","onPreviewOrEdit","row","onActionClick","deletePincode","pin_code_id","handleParams","event","target","name","value","height","width","recordsFiltered","Pagination","NoRowsOverlay","field","headerName","renderCell","data"],"mappings":"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","sourcesContent":["import { DataGrid } from '@material-ui/data-grid';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { clearPincodeInfoResponse, deleteSelectedPincode, getPincodeBrowseList, selectedPincodeInfo } from '../../../../../_redux/actions/masters/configuration.action';\r\nimport CustomPagination from '../../../../../components/CustomPagination';\r\nimport CustomNoRowsOverlay from '../../../../../components/customRowComponent';\r\nimport { Alert } from '@material-ui/lab';\r\nimport { TextField } from '@material-ui/core';\r\n\r\nconst BrowsePincode = (props) => {\r\n    const dispatch = useDispatch();\r\n    const [isLoading , setIsLoading] = useState(false);\r\n\r\n    const configurationLoading = useSelector((state) => state.ConfigurationMaster.isLoading);\r\n    const getPincodeListResponse = useSelector((state) => state.ConfigurationMaster.pincodeList);\r\n    const deletePincodeResponse = useSelector((state) => state.ConfigurationMaster.pincodeResponse);\r\n\r\n    const [pincodeList , setPincodeList] = useState(null);\r\n    const [showMessage , setMessage] = useState({\r\n        type:\"\",\r\n        msg:\"\"\r\n    })\r\n\r\n    const [params , setParams] = useState({\r\n        pageNo:1,\r\n        pageSize:10,\r\n        filter_value:'',\r\n        sort_column:'',\r\n        sort_order:''\r\n    });\r\n\r\n    const handlePageSizeChange = (param) => {\r\n        setParams({...params,\r\n            pageSize:parseInt(param.pageSize)\r\n        });\r\n    }\r\n    const handlePageChange = (param) => {\r\n        setParams({...params,\r\n            pageNo:param.page\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(getPincodeBrowseList(params));\r\n    },[]);\r\n\r\n    useEffect(() => {\r\n        dispatch(getPincodeBrowseList(params));\r\n    },[params]);\r\n\r\n    useEffect(() => {\r\n        setIsLoading(configurationLoading);\r\n    },[configurationLoading])\r\n\r\n    useEffect(() => {\r\n        if(getPincodeListResponse){\r\n            setPincodeList(getPincodeListResponse)\r\n        }\r\n    },[getPincodeListResponse]);\r\n\r\n    \r\n\r\n    useEffect(() => {\r\n        if(deletePincodeResponse){\r\n            setMessage({...showMessage,\r\n                type:deletePincodeResponse.valid ? \"success\" : \"error\",\r\n                msg:deletePincodeResponse.valid ? \"Pincode deleted successfully\" : \"Something went wrong\"\r\n            });\r\n            setTimeout(() => {\r\n                setMessage({\r\n                    type:\"\",\r\n                    msg:\"\"\r\n                });\r\n            }, 2000);\r\n            dispatch(clearPincodeInfoResponse());\r\n            dispatch(getPincodeBrowseList(params));\r\n        }\r\n    },[deletePincodeResponse]);\r\n\r\n    const onPreviewOrEdit = (row) => {\r\n        dispatch(selectedPincodeInfo(row));\r\n        props.onActionClick(1);\r\n    }\r\n\r\n    const deletePincode = (row) => {\r\n        var param = {\r\n            pin_code_id:row.pin_code_id\r\n        }\r\n        dispatch(deleteSelectedPincode(param))\r\n    }\r\n\r\n    const handleParams = (event) => {\r\n        setTimeout(() => {\r\n            setParams({...params,\r\n                [event.target.name]:event.target.value\r\n            });\r\n        }, 800);\r\n    }\r\n\r\n\r\n    return <React.Fragment>\r\n         <div className=\"filter_box mb-5\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-1 d-flex align-items-center\"><h4 className=\"mb-0\">Filters</h4></div>\r\n                    <div className=\"col-md-2\">\r\n                        <TextField fullWidth id=\"outlined-basic\" size=\"small\" onKeyUp={handleParams} name=\"filter_value\" label=\"Search\" variant=\"outlined\" />\r\n                    </div>\r\n                     \r\n                </div>\r\n            </div>\r\n    <div style={{ height: 350, width: '100%' }}>\r\n            <DataGrid\r\n               pagination\r\n               disableColumnFilter\r\n               pageSize={params.pageSize}   \r\n               page={1}\r\n               rowsPerPageOptions={[10,20,50,100]}\r\n               rowCount={pincodeList ? pincodeList.recordsFiltered : 0}\r\n               paginationMode=\"server\"\r\n               onPageSizeChange={handlePageSizeChange}\r\n               onPageChange={handlePageChange}\r\n               loading={isLoading}                   \r\n               rowHeight={30}\r\n               components={{\r\n                   Pagination:CustomPagination,\r\n                   NoRowsOverlay: CustomNoRowsOverlay,\r\n               }}\r\n                columns={[\r\n                    {\r\n                        field: 'id',\r\n                        headerName:\"Sr No.\",\r\n                        width:120\r\n                    },\r\n                    {\r\n                        field: 'pin_code_id',\r\n                        headerName:\"Pincode ID\",\r\n                        width:120\r\n                    },\r\n                    {\r\n                        field: 'pin_code_no',\r\n                        headerName:\"Pincode\",\r\n                        width:200\r\n                    },\r\n                    {\r\n                        field: 'city',\r\n                        headerName:\"City\",\r\n                        width:200\r\n                    },\r\n                    {\r\n                        field: 'state',\r\n                        headerName:\"State\",\r\n                        width:200\r\n                    },\r\n                    {\r\n                        field: 'district',\r\n                        headerName:\"District\",\r\n                        width:200\r\n                    },\r\n                    {\r\n                        field: '',\r\n                        headerName:\"Actions\",\r\n                        renderCell:(params) => (\r\n                            <div className=\"action_btns\">\r\n                                <i class=\"fas fa-search mr-2\" onClick={() => onPreviewOrEdit(params.row)}></i>\r\n                                <i class=\"far fa-edit mr-2\" onClick={() => onPreviewOrEdit(params.row)}></i>\r\n                                <i class=\"far fa-trash-alt mr-2\" onClick={() => deletePincode(params.row)}></i>\r\n                            </div>\r\n                        ),\r\n                        width:150\r\n                    } \r\n                    \r\n                ]}\r\n                rows={pincodeList ? pincodeList.data : []}\r\n            />\r\n            {showMessage.type != \"\" ? <Alert severity={showMessage.type}>{showMessage.msg}</Alert> : null}\r\n        </div>\r\n</React.Fragment>\r\n}\r\n\r\nexport default BrowsePincode;"]},"metadata":{},"sourceType":"module"}