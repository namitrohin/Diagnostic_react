{"ast":null,"code":"import produce from \"immer\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport * as actions from \"../../actions/masters/product.action\";\nconst initialState = {\n  isLoading: false,\n  productList: null,\n  categoryList: null,\n  lpRefList: null,\n  ggNameList: null\n};\nexport const ProductMasterReducer = createReducer(initialState, {\n  [actions.getProductListBrowse.toString()]: (state, action) => produce(state, draft => {\n    draft.isLoading = true;\n  }),\n  [actions.getProductListBrowseSuccess.toString()]: (state, action) => produce(state, draft => {\n    draft.productList = action.payload;\n    draft.isLoading = false;\n  }),\n  [actions.getCategoryList.toString()]: (state, action) => produce(state, draft => {\n    draft.isLoading = true;\n  }),\n  [actions.getCategoryListSuccess.toString()]: (state, action) => produce(state, draft => {\n    draft.categoryList = action.payload;\n    draft.isLoading = false;\n  }),\n  [actions.getLPRefList.toString()]: (state, action) => produce(state, draft => {\n    draft.isLoading = true;\n  }),\n  [actions.getLPRefListSuccess.toString()]: (state, action) => produce(state, draft => {\n    draft.isLoading = false;\n    draft.lpRefList = action.payload;\n  }),\n  [actions.getGGNameList.toString()]: (state, action) => produce(state, draft => {\n    draft.isLoading = true;\n  }),\n  [actions.getGGNameListSuccess.toString()]: (state, action) => produce(state, draft => {\n    draft.isLoading = false;\n    draft.ggNameList = action.payload;\n  }),\n  [actions.updateProductVerifiedStatus.toString()]: (state, action) => produce(state, draft => {\n    draft.isLoading = true;\n  }),\n  [actions.updateProductVerifiedStatusSuccess.toString()]: (state, action) => produce(state, draft => {\n    draft.ggNameList = action.payload;\n    draft.isLoading = false;\n  }),\n  [actions.updateProductListPrice.toString()]: (state, action) => produce(state, draft => {// draft.isLoading = true;\n  }),\n  [actions.updateProductLPRef.toString()]: (state, action) => produce(state, draft => {// draft.isLoading = true;\n  }),\n  [actions.updateProductMovingNonMoving.toString()]: (state, action) => produce(state, draft => {// draft.isLoading = true;\n  })\n});","map":{"version":3,"sources":["F:/React code/diagnostic/src/_redux/reducers/Masters/product.reducer.js"],"names":["produce","createReducer","actions","initialState","isLoading","productList","categoryList","lpRefList","ggNameList","ProductMasterReducer","getProductListBrowse","toString","state","action","draft","getProductListBrowseSuccess","payload","getCategoryList","getCategoryListSuccess","getLPRefList","getLPRefListSuccess","getGGNameList","getGGNameListSuccess","updateProductVerifiedStatus","updateProductVerifiedStatusSuccess","updateProductListPrice","updateProductLPRef","updateProductMovingNonMoving"],"mappings":"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","sourcesContent":["import produce from \"immer\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport * as actions from \"../../actions/masters/product.action\";\r\n\r\nconst initialState = {\r\n    isLoading:false,\r\n    productList:null,\r\n    categoryList:null,\r\n    lpRefList:null,\r\n    ggNameList:null\r\n}\r\n\r\n\r\nexport const ProductMasterReducer = createReducer(initialState, {\r\n    [actions.getProductListBrowse.toString()]: (state, action) =>\r\n        produce (state, (draft) => {\r\n            draft.isLoading = true;\r\n    }),\r\n    [actions.getProductListBrowseSuccess.toString()]: (state, action) =>\r\n        produce (state, (draft) => {\r\n            draft.productList = action.payload;\r\n            draft.isLoading = false;\r\n    }),\r\n    [actions.getCategoryList.toString()]: (state, action) =>\r\n        produce (state, (draft) => {\r\n            draft.isLoading = true;\r\n    }),\r\n    [actions.getCategoryListSuccess.toString()]: (state, action) =>\r\n        produce (state, (draft) => {\r\n            draft.categoryList = action.payload;\r\n            draft.isLoading = false;\r\n    }),\r\n    [actions.getLPRefList.toString()]: (state, action) =>\r\n        produce (state, (draft) => {\r\n            draft.isLoading = true;\r\n    }),\r\n    [actions.getLPRefListSuccess.toString()]: (state, action) =>\r\n        produce (state, (draft) => {\r\n            draft.isLoading = false;\r\n            draft.lpRefList = action.payload;\r\n    }),\r\n    [actions.getGGNameList.toString()]: (state, action) =>\r\n        produce (state, (draft) => {\r\n            draft.isLoading = true;\r\n    }),\r\n    [actions.getGGNameListSuccess.toString()]: (state, action) =>\r\n        produce (state, (draft) => {\r\n            draft.isLoading = false;\r\n            draft.ggNameList = action.payload;\r\n    }),\r\n    [actions.updateProductVerifiedStatus.toString()]: (state, action) =>\r\n        produce (state, (draft) => {\r\n            draft.isLoading = true;\r\n    }),\r\n    [actions.updateProductVerifiedStatusSuccess.toString()]: (state, action) =>\r\n        produce (state, (draft) => {\r\n            draft.ggNameList = action.payload;\r\n            draft.isLoading = false;\r\n    }),\r\n    [actions.updateProductListPrice.toString()]: (state, action) =>\r\n        produce (state, (draft) => {\r\n            // draft.isLoading = true;\r\n    }),\r\n    [actions.updateProductLPRef.toString()]: (state, action) =>\r\n        produce (state, (draft) => {\r\n            // draft.isLoading = true;\r\n    }),\r\n    [actions.updateProductMovingNonMoving.toString()]: (state, action) =>\r\n        produce (state, (draft) => {\r\n            // draft.isLoading = true;\r\n    })\r\n}); "]},"metadata":{},"sourceType":"module"}