{"ast":null,"code":"var _jsxFileName = \"F:\\\\React code\\\\diagnostic\\\\src\\\\pages\\\\Sales\\\\Sales Enquiry\\\\browse.js\",\n    _s = $RefreshSig$();\n\nimport { Checkbox, TextField, Button, MenuItem, List, Avatar, ListItemAvatar, ListItem, ListItemText } from \"@material-ui/core\";\nimport { DataGrid } from \"@mui/x-data-grid\";\nimport React, { useEffect, useState } from \"react\";\nimport { getBrowseUserRight, showErrorToast, showSuccessToast } from \"../../../components/common\";\nimport CustomPagination from \"../../../components/CustomPagination\";\nimport CustomNoRowsOverlay from \"../../../components/customRowComponent\";\nimport { Loader } from \"../../../components/loader\";\nimport { CommonController } from \"../../../_redux/controller/common.controller\";\nimport ActionButtons from \"../../../components/action-buttons\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectedEmployeeId } from \"../../../_redux/actions/masters/all.action\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport moment from \"moment\";\nimport ImageIcon from \"@material-ui/icons/Image\";\nimport { DatePicker } from \"@material-ui/pickers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst user_id = {\n  user_id: localStorage.getItem(\"userId\")\n};\nconst label = {\n  inputProps: {\n    \"aria-label\": \"Checkbox\"\n  }\n};\n\nconst SalesEnquiryBrowse = ({\n  onEdit\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const getuserRightListResponse = useSelector(state => state.common.userRightList);\n  const [browseListData, setBrowseListData] = useState([]);\n  const [totalRecord, setTotalRecords] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [remarksModal, setRemarksModal] = useState(false);\n  const [remarksList, setRemarksList] = useState(null);\n  const [remarkLoading, setRemarkLoading] = useState(false);\n  const [markEng, setMarkEng] = useState(null);\n  const [remarks, setRemarks] = useState({\n    status_id: \"\",\n    remarks: \"\",\n    user_id: localStorage.getItem(\"userId\")\n  });\n  const [params, setParams] = useState({\n    pageNo: 1,\n    pageSize: 15,\n    filter_value: \"\",\n    sort_column: \"\",\n    sort_order: \"desc\"\n  });\n  const [bodyParam, setBodyParam] = useState({\n    user_id: localStorage.getItem(\"userId\"),\n    chk_All: \"1\",\n    company_name: \"\",\n    type: \"all\",\n    status: \"all\",\n    mark_engg: \"\",\n    fromDate: null,\n    toDate: null\n  });\n\n  const toggleRemarks = () => {\n    setRemarksModal(!remarksModal);\n  };\n\n  const handleParams = event => {\n    setTimeout(() => {\n      setParams({ ...params,\n        [event.target.name]: event.target.value\n      });\n    }, 800);\n  };\n\n  const handleBodyParam = event => {\n    setTimeout(() => {\n      setBodyParam({ ...bodyParam,\n        [event.target.name]: event.target.value\n      });\n    }, 800);\n  };\n\n  const getBrowseListData = async () => {\n    setLoading(true);\n    await CommonController.commonApiCall(\"Sales/SalesEnquiryBrowse\", params, bodyParam).then(data => {\n      setBrowseListData(data.data);\n      setTotalRecords(data.recordsFiltered);\n    }).catch(err => {\n      showErrorToast(err);\n    });\n    setLoading(false);\n  };\n\n  const getRemarkList = async id => {\n    setRemarks({ ...remarks,\n      tran_id: id\n    });\n    setRemarkLoading(true);\n    await CommonController.commonApiCallFilter(\"Sales/CloseSalesEnquiry\", {\n      enquiry_id: id\n    }, \"get\").then(data => {\n      setRemarksList(data);\n      setRemarksModal(true);\n    }).catch(err => {\n      showErrorToast(err);\n    });\n    setRemarkLoading(false);\n  };\n\n  const getMarkEngList = () => {\n    CommonController.commonApiCallFilter(\"Dropdown/SalesEnquiryDropdown\").then(data => setMarkEng(data.employeeList));\n  };\n\n  const onRemarkChange = event => {\n    setRemarks({ ...remarks,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const handlePageSizeChange = param => {\n    setParams({ ...params,\n      pageSize: param.pageSize\n    });\n  };\n\n  const handlePageChange = param => {\n    setParams({ ...params,\n      pageNo: param.page\n    });\n  };\n\n  const handleDateChange = (type, date) => {\n    setBodyParam({ ...bodyParam,\n      [type]: date\n    });\n  };\n\n  useEffect(() => {\n    getBrowseListData();\n    getMarkEngList();\n  }, []);\n  useEffect(() => {\n    getBrowseListData();\n  }, [params, getuserRightListResponse, bodyParam]);\n\n  const handleEdit = id => {\n    dispatch(selectedEmployeeId(id));\n    onEdit();\n  };\n\n  const handleDeleteRow = id => {\n    CommonController.commonApiCallFilter(\"Employee/EmployeeMasterDelete\", {\n      employee_id: id\n    }).then(data => {\n      if (data.valid) {\n        showSuccessToast(\"Record Deleted Successfully\");\n        getBrowseListData();\n      } else {\n        showErrorToast(\"Something went wrong\");\n      }\n    });\n  };\n\n  const saveRemarks = () => {\n    setLoading(true);\n\n    try {\n      CommonController.commonApiCallFilter(\"Sales/UpdateSalesEnquiryRemarks\", remarks).then(data => {\n        if (data.valid) {\n          getBrowseListData();\n          showSuccessToast(\"Remarks Updated Successfully\");\n          setRemarksModal(false);\n        } else {\n          showErrorToast(data.msg);\n        }\n      });\n    } catch (err) {\n      showErrorToast(\"Something went wrong\");\n    }\n\n    setLoading(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [loading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter_box mb-5\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-1 d-flex align-items-center\",\n          children: /*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"mb-0\",\n            children: \"Filters\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-2\",\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            id: \"outlined-basic\",\n            size: \"small\",\n            onKeyDown: e => {\n              if (e.keyCode === 13) {\n                handleParams(e);\n              }\n            },\n            name: \"filter_value\",\n            label: \"Search\",\n            variant: \"outlined\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-2\",\n          children: /*#__PURE__*/_jsxDEV(DatePicker, {\n            label: \"From Date\",\n            value: bodyParam.fromDate,\n            format: \"dd/MM/yyyy\",\n            onChange: date => handleDateChange(\"fromDate\", date),\n            animateYearScrolling: true,\n            inputVariant: \"outlined\",\n            size: \"small\",\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-2\",\n          children: /*#__PURE__*/_jsxDEV(DatePicker, {\n            label: \"To Date\",\n            value: bodyParam.toDate,\n            onChange: date => handleDateChange(\"toDate\", date),\n            animateYearScrolling: true,\n            inputVariant: \"outlined\",\n            size: \"small\",\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-2\",\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            id: \"outlined-basic\",\n            size: \"small\",\n            onKeyDown: e => {\n              if (e.keyCode === 13) {\n                handleBodyParam(e);\n              }\n            },\n            name: \"party_name\",\n            label: \"Company Name\",\n            variant: \"outlined\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-1\",\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            id: \"outlined-basic\",\n            size: \"small\",\n            onChange: e => {\n              handleBodyParam(e);\n            },\n            name: \"type\",\n            select: true,\n            label: \"Type\",\n            variant: \"outlined\",\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"all\",\n              children: \"All\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"spares\",\n              children: \"Spares\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"projects\",\n              children: \"Projects\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"service\",\n              children: \"Service\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-1\",\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            id: \"outlined-basic\",\n            size: \"small\",\n            onChange: e => {\n              handleBodyParam(e);\n            },\n            select: true,\n            name: \"status\",\n            label: \"Status\",\n            variant: \"outlined\",\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"all\",\n              children: \"All\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"spares\",\n              children: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"spares\",\n              children: \"Open\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-2 mt-3\",\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            id: \"outlined-basic\",\n            size: \"small\",\n            onChange: e => {\n              handleBodyParam(e);\n            },\n            select: true,\n            name: \"mark_engg\",\n            label: \"Marketing Eng.\",\n            variant: \"outlined\",\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"\",\n              children: \"None\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 15\n            }, this), markEng && markEng.map((eng, indx) => {\n              return /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: eng.value,\n                children: eng.value\n              }, indx, false, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 21\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: remarksModal,\n      fullWidth: true,\n      onClose: toggleRemarks,\n      \"aria-labelledby\": \"responsive-dialog-title\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"responsive-dialog-title\",\n        children: \"Add Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          variant: \"outlined\",\n          className: \"mb-4\",\n          size: \"small\",\n          fullWidth: true,\n          id: \"select-1\",\n          select: true,\n          name: \"status_id\",\n          onChange: onRemarkChange,\n          label: \"Enquiry Status*\",\n          children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"0\",\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"1\",\n            children: \"Open\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          variant: \"outlined\",\n          multiline: true,\n          size: \"small\",\n          name: \"remarks\",\n          onChange: onRemarkChange,\n          label: \"Remarks*\",\n          fullWidth: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          children: remarksList && remarksList.length > 0 && remarksList.map((remark, index) => {\n            return /*#__PURE__*/_jsxDEV(ListItem, {\n              children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n                children: /*#__PURE__*/_jsxDEV(Avatar, {\n                  children: /*#__PURE__*/_jsxDEV(ImageIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 367,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 366,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 365,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: remark.user_name,\n                secondary: /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"mb-0\",\n                  children: [remark.remarks, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"float-right\",\n                    children: remark.datetime\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 375,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 373,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 370,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 364,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: toggleRemarks,\n          color: \"primary\",\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: saveRemarks,\n          disabled: remarks.remarks == \"\" || remarks.status_id == \"\" || loading,\n          color: \"primary\",\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: 400,\n        width: \"100%\"\n      },\n      children: /*#__PURE__*/_jsxDEV(DataGrid, {\n        columns: [{\n          field: \"id\",\n          headerName: \"Sr. no\",\n          width: 80\n        }, {\n          field: \"date\",\n          headerName: \"Date\",\n          width: 100,\n          renderCell: params => {\n            return moment(params.row.date).format(\"DD/MM/yyyy\");\n          }\n        }, {\n          field: \"enquiry_no\",\n          headerName: \"Enquiry No\",\n          width: 120\n        }, {\n          field: \"company_id\",\n          headerName: \"Comp Id\",\n          width: 100\n        }, {\n          field: \"company_name\",\n          headerName: \"Company Name\",\n          width: 200\n        }, {\n          field: \"description\",\n          headerName: \"Description\",\n          width: 200\n        }, {\n          field: \"type\",\n          headerName: \"Type\",\n          width: 100\n        }, {\n          field: \"priority_name\",\n          headerName: \"Priority Name\",\n          width: 100\n        }, {\n          field: \"reference_name\",\n          headerName: \"Reference\",\n          width: 120\n        }, {\n          field: \"status\",\n          headerName: \"Status\",\n          width: 100\n        }, {\n          field: \"employee_name\",\n          headerName: \"Employee Name\",\n          width: 150\n        }, {\n          field: \"mark_engg\",\n          headerName: \"Marketing Eng.\",\n          width: 150\n        }, {\n          field: \"remarks\",\n          headerName: \"Remarks\",\n          width: 150,\n          renderCell: param => {\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: remarkLoading ? /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"/asset/images/circle.gif\",\n                width: 20\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 474,\n                columnNumber: 23\n              }, this) : /*#__PURE__*/_jsxDEV(Button, {\n                className: \"text-lowercase\",\n                color: \"primary\",\n                onClick: () => {\n                  getRemarkList(param.row.tran_id);\n                },\n                children: param.row.remarks\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 476,\n                columnNumber: 23\n              }, this)\n            }, void 0, false);\n          }\n        }, {\n          field: \"\",\n          headerName: \"Actions\",\n          renderCell: params => {\n            var _getBrowseUserRight, _getBrowseUserRight2, _getBrowseUserRight3;\n\n            return /*#__PURE__*/_jsxDEV(ActionButtons, {\n              onPreview: ((_getBrowseUserRight = getBrowseUserRight(getuserRightListResponse)) === null || _getBrowseUserRight === void 0 ? void 0 : _getBrowseUserRight.view_right) == \"True\" ? () => handleEdit(params.row.id) : null,\n              onEdit: ((_getBrowseUserRight2 = getBrowseUserRight(getuserRightListResponse)) === null || _getBrowseUserRight2 === void 0 ? void 0 : _getBrowseUserRight2.edit_button) == \"True\" ? () => handleEdit(params.row.id) : null,\n              onDelete: ((_getBrowseUserRight3 = getBrowseUserRight(getuserRightListResponse)) === null || _getBrowseUserRight3 === void 0 ? void 0 : _getBrowseUserRight3.delete_right) == \"True\" ? () => handleDeleteRow(params.row.id) : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 495,\n              columnNumber: 17\n            }, this);\n          },\n          width: 100\n        }],\n        pagination: true,\n        disableColumnFilter: true,\n        pageSize: params.pageSize,\n        page: params.pageNo,\n        rowsPerPageOptions: [10, 15, 25, 100],\n        rowCount: totalRecord,\n        paginationMode: \"server\",\n        onPageSizeChange: handlePageSizeChange,\n        onPageChange: handlePageChange,\n        loading: loading,\n        rowHeight: 30 //components={{\n        //Pagination: CustomPagination,\n        //NoRowsOverlay: CustomNoRowsOverlay,\n        //       }}\n        ,\n        onSortModelChange: sort => {\n          if (sort.length > 0) {\n            setParams({ ...params,\n              sort_column: sort[0].field,\n              sort_order: sort[0].sort\n            });\n          }\n        },\n        rows: browseListData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(SalesEnquiryBrowse, \"CiDxCHVmBaNv1QzuS/bGFs+J+MM=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = SalesEnquiryBrowse;\nexport default SalesEnquiryBrowse;\n\nvar _c;\n\n$RefreshReg$(_c, \"SalesEnquiryBrowse\");","map":{"version":3,"sources":["F:/React code/diagnostic/src/pages/Sales/Sales Enquiry/browse.js"],"names":["Checkbox","TextField","Button","MenuItem","List","Avatar","ListItemAvatar","ListItem","ListItemText","DataGrid","React","useEffect","useState","getBrowseUserRight","showErrorToast","showSuccessToast","CustomPagination","CustomNoRowsOverlay","Loader","CommonController","ActionButtons","useDispatch","useSelector","selectedEmployeeId","Dialog","DialogActions","DialogContent","DialogTitle","moment","ImageIcon","DatePicker","user_id","localStorage","getItem","label","inputProps","SalesEnquiryBrowse","onEdit","dispatch","getuserRightListResponse","state","common","userRightList","browseListData","setBrowseListData","totalRecord","setTotalRecords","loading","setLoading","remarksModal","setRemarksModal","remarksList","setRemarksList","remarkLoading","setRemarkLoading","markEng","setMarkEng","remarks","setRemarks","status_id","params","setParams","pageNo","pageSize","filter_value","sort_column","sort_order","bodyParam","setBodyParam","chk_All","company_name","type","status","mark_engg","fromDate","toDate","toggleRemarks","handleParams","event","setTimeout","target","name","value","handleBodyParam","getBrowseListData","commonApiCall","then","data","recordsFiltered","catch","err","getRemarkList","id","tran_id","commonApiCallFilter","enquiry_id","getMarkEngList","employeeList","onRemarkChange","handlePageSizeChange","param","handlePageChange","page","handleDateChange","date","handleEdit","handleDeleteRow","employee_id","valid","saveRemarks","msg","e","keyCode","map","eng","indx","length","remark","index","user_name","datetime","height","width","field","headerName","renderCell","row","format","view_right","edit_button","delete_right","sort"],"mappings":"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","sourcesContent":["import {\n  Checkbox,\n  TextField,\n  Button,\n  MenuItem,\n  List,\n  Avatar,\n  ListItemAvatar,\n  ListItem,\n  ListItemText,\n} from \"@material-ui/core\";\nimport { DataGrid } from \"@mui/x-data-grid\";\nimport React, { useEffect, useState } from \"react\";\nimport {\n  getBrowseUserRight,\n  showErrorToast,\n  showSuccessToast,\n} from \"../../../components/common\";\nimport CustomPagination from \"../../../components/CustomPagination\";\nimport CustomNoRowsOverlay from \"../../../components/customRowComponent\";\nimport { Loader } from \"../../../components/loader\";\nimport { CommonController } from \"../../../_redux/controller/common.controller\";\nimport ActionButtons from \"../../../components/action-buttons\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectedEmployeeId } from \"../../../_redux/actions/masters/all.action\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\n\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport moment from \"moment\";\nimport ImageIcon from \"@material-ui/icons/Image\";\nimport { DatePicker } from \"@material-ui/pickers\";\n\nconst user_id = {\n  user_id: localStorage.getItem(\"userId\"),\n};\n\nconst label = { inputProps: { \"aria-label\": \"Checkbox\" } };\nconst SalesEnquiryBrowse = ({ onEdit }) => {\n  const dispatch = useDispatch();\n\n  const getuserRightListResponse = useSelector(\n    (state) => state.common.userRightList\n  );\n\n  const [browseListData, setBrowseListData] = useState([]);\n  const [totalRecord, setTotalRecords] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [remarksModal, setRemarksModal] = useState(false);\n  const [remarksList, setRemarksList] = useState(null);\n  const [remarkLoading, setRemarkLoading] = useState(false);\n  const [markEng, setMarkEng] = useState(null);\n  const [remarks, setRemarks] = useState({\n    status_id: \"\",\n    remarks: \"\",\n    user_id: localStorage.getItem(\"userId\"),\n  });\n  const [params, setParams] = useState({\n    pageNo: 1,\n    pageSize: 15,\n    filter_value: \"\",\n    sort_column: \"\",\n    sort_order: \"desc\",\n  });\n\n  const [bodyParam, setBodyParam] = useState({\n    user_id: localStorage.getItem(\"userId\"),\n    chk_All: \"1\",\n    company_name: \"\",\n    type: \"all\",\n    status: \"all\",\n    mark_engg: \"\",\n    fromDate: null,\n    toDate: null,\n  });\n\n  const toggleRemarks = () => {\n    setRemarksModal(!remarksModal);\n  };\n\n  const handleParams = (event) => {\n    setTimeout(() => {\n      setParams({ ...params, [event.target.name]: event.target.value });\n    }, 800);\n  };\n\n  const handleBodyParam = (event) => {\n    setTimeout(() => {\n      setBodyParam({ ...bodyParam, [event.target.name]: event.target.value });\n    }, 800);\n  };\n\n  const getBrowseListData = async () => {\n    setLoading(true);\n    await CommonController.commonApiCall(\n      \"Sales/SalesEnquiryBrowse\",\n      params,\n      bodyParam\n    )\n      .then((data) => {\n        setBrowseListData(data.data);\n        setTotalRecords(data.recordsFiltered);\n      })\n      .catch((err) => {\n        showErrorToast(err);\n      });\n    setLoading(false);\n  };\n\n  const getRemarkList = async (id) => {\n    setRemarks({ ...remarks, tran_id: id });\n    setRemarkLoading(true);\n    await CommonController.commonApiCallFilter(\n      \"Sales/CloseSalesEnquiry\",\n      {\n        enquiry_id: id,\n      },\n      \"get\"\n    )\n      .then((data) => {\n        setRemarksList(data);\n        setRemarksModal(true);\n      })\n      .catch((err) => {\n        showErrorToast(err);\n      });\n    setRemarkLoading(false);\n  };\n\n  const getMarkEngList = () => {\n    CommonController.commonApiCallFilter(\"Dropdown/SalesEnquiryDropdown\").then(\n      (data) => setMarkEng(data.employeeList)\n    );\n  };\n\n  const onRemarkChange = (event) => {\n    setRemarks({ ...remarks, [event.target.name]: event.target.value });\n  };\n\n  const handlePageSizeChange = (param) => {\n    setParams({ ...params, pageSize: param.pageSize });\n  };\n  const handlePageChange = (param) => {\n    setParams({ ...params, pageNo: param.page });\n  };\n\n  const handleDateChange = (type, date) => {\n    setBodyParam({ ...bodyParam, [type]: date });\n  };\n\n  useEffect(() => {\n    getBrowseListData();\n    getMarkEngList();\n  }, []);\n\n  useEffect(() => {\n    getBrowseListData();\n  }, [params, getuserRightListResponse, bodyParam]);\n\n  const handleEdit = (id) => {\n    dispatch(selectedEmployeeId(id));\n    onEdit();\n  };\n\n  const handleDeleteRow = (id) => {\n    CommonController.commonApiCallFilter(\"Employee/EmployeeMasterDelete\", {\n      employee_id: id,\n    }).then((data) => {\n      if (data.valid) {\n        showSuccessToast(\"Record Deleted Successfully\");\n        getBrowseListData();\n      } else {\n        showErrorToast(\"Something went wrong\");\n      }\n    });\n  };\n\n  const saveRemarks = () => {\n    setLoading(true);\n    try {\n      CommonController.commonApiCallFilter(\n        \"Sales/UpdateSalesEnquiryRemarks\",\n        remarks\n      ).then((data) => {\n        if (data.valid) {\n          getBrowseListData();\n          showSuccessToast(\"Remarks Updated Successfully\");\n          setRemarksModal(false);\n        } else {\n          showErrorToast(data.msg);\n        }\n      });\n    } catch (err) {\n      showErrorToast(\"Something went wrong\");\n    }\n    setLoading(false);\n  };\n\n  return (\n    <>\n      {loading && <Loader />}\n\n      <div className=\"filter_box mb-5\">\n        <div className=\"row\">\n          <div className=\"col-md-1 d-flex align-items-center\">\n            <h4 className=\"mb-0\">Filters</h4>\n          </div>\n\n          <div className=\"col-md-2\">\n            <TextField\n              fullWidth\n              id=\"outlined-basic\"\n              size=\"small\"\n              onKeyDown={(e) => {\n                if (e.keyCode === 13) {\n                  handleParams(e);\n                }\n              }}\n              name=\"filter_value\"\n              label=\"Search\"\n              variant=\"outlined\"\n            />\n          </div>\n          <div className=\"col-md-2\">\n            <DatePicker\n              label=\"From Date\"\n              value={bodyParam.fromDate}\n              format=\"dd/MM/yyyy\"\n              onChange={(date) => handleDateChange(\"fromDate\", date)}\n              animateYearScrolling\n              inputVariant=\"outlined\"\n              size=\"small\"\n              fullWidth\n            />\n          </div>\n          <div className=\"col-md-2\">\n            <DatePicker\n              label=\"To Date\"\n              value={bodyParam.toDate}\n              onChange={(date) => handleDateChange(\"toDate\", date)}\n              animateYearScrolling\n              inputVariant=\"outlined\"\n              size=\"small\"\n              fullWidth\n            />\n          </div>\n          <div className=\"col-md-2\">\n            <TextField\n              fullWidth\n              id=\"outlined-basic\"\n              size=\"small\"\n              onKeyDown={(e) => {\n                if (e.keyCode === 13) {\n                  handleBodyParam(e);\n                }\n              }}\n              name=\"party_name\"\n              label=\"Company Name\"\n              variant=\"outlined\"\n            />\n          </div>\n          <div className=\"col-md-1\">\n            <TextField\n              fullWidth\n              id=\"outlined-basic\"\n              size=\"small\"\n              onChange={(e) => {\n                handleBodyParam(e);\n              }}\n              name=\"type\"\n              select\n              label=\"Type\"\n              variant=\"outlined\"\n            >\n              <MenuItem value={\"all\"}>All</MenuItem>\n              <MenuItem value={\"spares\"}>Spares</MenuItem>\n              <MenuItem value={\"projects\"}>Projects</MenuItem>\n              <MenuItem value={\"service\"}>Service</MenuItem>\n            </TextField>\n          </div>\n          <div className=\"col-md-1\">\n            <TextField\n              fullWidth\n              id=\"outlined-basic\"\n              size=\"small\"\n              onChange={(e) => {\n                handleBodyParam(e);\n              }}\n              select\n              name=\"status\"\n              label=\"Status\"\n              variant=\"outlined\"\n            >\n              <MenuItem value={\"all\"}>All</MenuItem>\n              <MenuItem value={\"spares\"}>Close</MenuItem>\n              <MenuItem value={\"spares\"}>Open</MenuItem>\n            </TextField>\n          </div>\n          <div className=\"col-md-2 mt-3\">\n            <TextField\n              fullWidth\n              id=\"outlined-basic\"\n              size=\"small\"\n              onChange={(e) => {\n                handleBodyParam(e);\n              }}\n              select\n              name=\"mark_engg\"\n              label=\"Marketing Eng.\"\n              variant=\"outlined\"\n            >\n              <MenuItem value={\"\"}>None</MenuItem>\n              {markEng &&\n                markEng.map((eng, indx) => {\n                  return (\n                    <MenuItem value={eng.value} key={indx}>\n                      {eng.value}\n                    </MenuItem>\n                  );\n                })}\n            </TextField>\n          </div>\n        </div>\n      </div>\n      {/* Update remarks modal */}\n\n      <Dialog\n        open={remarksModal}\n        fullWidth\n        onClose={toggleRemarks}\n        aria-labelledby=\"responsive-dialog-title\"\n      >\n        <DialogTitle id=\"responsive-dialog-title\">Add Comment</DialogTitle>\n        <DialogContent>\n          <TextField\n            variant=\"outlined\"\n            className=\"mb-4\"\n            size=\"small\"\n            fullWidth\n            id=\"select-1\"\n            select\n            name=\"status_id\"\n            onChange={onRemarkChange}\n            label=\"Enquiry Status*\"\n          >\n            <MenuItem value={\"0\"}>Close</MenuItem>\n            <MenuItem value={\"1\"}>Open</MenuItem>\n          </TextField>\n          <TextField\n            variant=\"outlined\"\n            multiline\n            size=\"small\"\n            name=\"remarks\"\n            onChange={onRemarkChange}\n            label=\"Remarks*\"\n            fullWidth\n          />\n          <List>\n            {remarksList &&\n              remarksList.length > 0 &&\n              remarksList.map((remark, index) => {\n                return (\n                  <ListItem key={index}>\n                    <ListItemAvatar>\n                      <Avatar>\n                        <ImageIcon />\n                      </Avatar>\n                    </ListItemAvatar>\n                    <ListItemText\n                      primary={remark.user_name}\n                      secondary={\n                        <p className=\"mb-0\">\n                          {remark.remarks}{\" \"}\n                          <span className=\"float-right\">{remark.datetime}</span>\n                        </p>\n                      }\n                    />\n                  </ListItem>\n                );\n              })}\n          </List>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={toggleRemarks} color=\"primary\">\n            Close\n          </Button>\n          <Button\n            onClick={saveRemarks}\n            disabled={\n              remarks.remarks == \"\" || remarks.status_id == \"\" || loading\n            }\n            color=\"primary\"\n          >\n            Save\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      <div style={{ height: 400, width: \"100%\" }}>\n        <DataGrid\n          columns={[\n            {\n              field: \"id\",\n              headerName: \"Sr. no\",\n              width: 80,\n            },\n            {\n              field: \"date\",\n              headerName: \"Date\",\n              width: 100,\n              renderCell: (params) => {\n                return moment(params.row.date).format(\"DD/MM/yyyy\");\n              },\n            },\n            {\n              field: \"enquiry_no\",\n              headerName: \"Enquiry No\",\n              width: 120,\n            },\n            {\n              field: \"company_id\",\n              headerName: \"Comp Id\",\n              width: 100,\n            },\n            {\n              field: \"company_name\",\n              headerName: \"Company Name\",\n              width: 200,\n            },\n            {\n              field: \"description\",\n              headerName: \"Description\",\n              width: 200,\n            },\n            {\n              field: \"type\",\n              headerName: \"Type\",\n              width: 100,\n            },\n            {\n              field: \"priority_name\",\n              headerName: \"Priority Name\",\n              width: 100,\n            },\n            {\n              field: \"reference_name\",\n              headerName: \"Reference\",\n              width: 120,\n            },\n            {\n              field: \"status\",\n              headerName: \"Status\",\n              width: 100,\n            },\n            {\n              field: \"employee_name\",\n              headerName: \"Employee Name\",\n              width: 150,\n            },\n            {\n              field: \"mark_engg\",\n              headerName: \"Marketing Eng.\",\n              width: 150,\n            },\n            {\n              field: \"remarks\",\n              headerName: \"Remarks\",\n              width: 150,\n              renderCell: (param) => {\n                return (\n                  <>\n                    {remarkLoading ? (\n                      <img src=\"/asset/images/circle.gif\" width={20} />\n                    ) : (\n                      <Button\n                        className=\"text-lowercase\"\n                        color=\"primary\"\n                        onClick={() => {\n                          getRemarkList(param.row.tran_id);\n                        }}\n                      >\n                        {param.row.remarks}\n                      </Button>\n                    )}\n                  </>\n                );\n              },\n            },\n\n            {\n              field: \"\",\n              headerName: \"Actions\",\n              renderCell: (params) => (\n                <ActionButtons\n                  onPreview={\n                    getBrowseUserRight(getuserRightListResponse)?.view_right ==\n                    \"True\"\n                      ? () => handleEdit(params.row.id)\n                      : null\n                  }\n                  onEdit={\n                    getBrowseUserRight(getuserRightListResponse)?.edit_button ==\n                    \"True\"\n                      ? () => handleEdit(params.row.id)\n                      : null\n                  }\n                  onDelete={\n                    getBrowseUserRight(getuserRightListResponse)\n                      ?.delete_right == \"True\"\n                      ? () => handleDeleteRow(params.row.id)\n                      : null\n                  }\n                />\n              ),\n              width: 100,\n            },\n          ]}\n          pagination\n          disableColumnFilter\n          pageSize={params.pageSize}\n          page={params.pageNo}\n          rowsPerPageOptions={[10, 15, 25, 100]}\n          rowCount={totalRecord}\n          paginationMode=\"server\"\n          onPageSizeChange={handlePageSizeChange}\n          onPageChange={handlePageChange}\n          loading={loading}\n          rowHeight={30}\n          //components={{\n          //Pagination: CustomPagination,\n          //NoRowsOverlay: CustomNoRowsOverlay,\n          //       }}\n          onSortModelChange={(sort) => {\n            if (sort.length > 0) {\n              setParams({\n                ...params,\n                sort_column: sort[0].field,\n                sort_order: sort[0].sort,\n              });\n            }\n          }}\n          rows={browseListData}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default SalesEnquiryBrowse;\n"]},"metadata":{},"sourceType":"module"}