{"ast":null,"code":"import produce from \"immer\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport * as actions from \"../../actions/masters/account.action\";\nconst initialState = {\n  isLoading: false,\n  searchAccountMasterData: {},\n  accountFilterList: null,\n  selectedAccountDetails: null\n};\nexport const AccountMasterReducer = createReducer(initialState, {\n  [actions.searchAccountMasterData.toString()]: (state, action) => produce(state, draft => {\n    draft.isLoading = true;\n  }),\n  [actions.searchAccountMasterDataSuccess.toString()]: (state, action) => produce(state, draft => {\n    draft.searchAccountMasterData = action.payload;\n    draft.isLoading = false;\n  }),\n  [actions.getAccountMasterFiltersList.toString()]: (state, action) => produce(state, draft => {\n    draft.isLoading = true;\n  }),\n  [actions.getAccountMasterFiltersListSuccess.toString()]: (state, action) => produce(state, draft => {\n    draft.accountFilterList = action.payload;\n    draft.isLoading = false;\n  }),\n  [actions.previewSelectedAccount.toString()]: (state, action) => produce(state, draft => {\n    draft.isLoading = true;\n  }),\n  [actions.previewSelectedAccountSuccess.toString()]: (state, action) => produce(state, draft => {\n    draft.selectedAccountDetails = action.payload;\n    draft.isLoading = false;\n  }),\n  [actions.clearSelectedAccount.toString()]: (state, action) => produce(state, draft => {\n    draft.selectedAccountDetails = null;\n  }),\n  [actions.setAccountHide.toString()]: (state, action) => produce(state, draft => {}),\n  [actions.setAccountVerified.toString()]: (state, action) => produce(state, draft => {})\n});","map":{"version":3,"sources":["F:/React code/diagnostic/src/_redux/reducers/Masters/account.reducer.js"],"names":["produce","createReducer","actions","initialState","isLoading","searchAccountMasterData","accountFilterList","selectedAccountDetails","AccountMasterReducer","toString","state","action","draft","searchAccountMasterDataSuccess","payload","getAccountMasterFiltersList","getAccountMasterFiltersListSuccess","previewSelectedAccount","previewSelectedAccountSuccess","clearSelectedAccount","setAccountHide","setAccountVerified"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,OAApB;AACA,SAASC,aAAT,QAA8B,kBAA9B;AAEA,OAAO,KAAKC,OAAZ,MAAyB,sCAAzB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,SAAS,EAAE,KADQ;AAEnBC,EAAAA,uBAAuB,EAAE,EAFN;AAGnBC,EAAAA,iBAAiB,EAAE,IAHA;AAInBC,EAAAA,sBAAsB,EAAE;AAJL,CAArB;AAOA,OAAO,MAAMC,oBAAoB,GAAGP,aAAa,CAACE,YAAD,EAAe;AAC9D,GAACD,OAAO,CAACG,uBAAR,CAAgCI,QAAhC,EAAD,GAA8C,CAACC,KAAD,EAAQC,MAAR,KAC5CX,OAAO,CAACU,KAAD,EAASE,KAAD,IAAW;AACxBA,IAAAA,KAAK,CAACR,SAAN,GAAkB,IAAlB;AACD,GAFM,CAFqD;AAK9D,GAACF,OAAO,CAACW,8BAAR,CAAuCJ,QAAvC,EAAD,GAAqD,CAACC,KAAD,EAAQC,MAAR,KACnDX,OAAO,CAACU,KAAD,EAASE,KAAD,IAAW;AACxBA,IAAAA,KAAK,CAACP,uBAAN,GAAgCM,MAAM,CAACG,OAAvC;AACAF,IAAAA,KAAK,CAACR,SAAN,GAAkB,KAAlB;AACD,GAHM,CANqD;AAU9D,GAACF,OAAO,CAACa,2BAAR,CAAoCN,QAApC,EAAD,GAAkD,CAACC,KAAD,EAAQC,MAAR,KAChDX,OAAO,CAACU,KAAD,EAASE,KAAD,IAAW;AACxBA,IAAAA,KAAK,CAACR,SAAN,GAAkB,IAAlB;AACD,GAFM,CAXqD;AAc9D,GAACF,OAAO,CAACc,kCAAR,CAA2CP,QAA3C,EAAD,GAAyD,CAACC,KAAD,EAAQC,MAAR,KACvDX,OAAO,CAACU,KAAD,EAASE,KAAD,IAAW;AACxBA,IAAAA,KAAK,CAACN,iBAAN,GAA0BK,MAAM,CAACG,OAAjC;AACAF,IAAAA,KAAK,CAACR,SAAN,GAAkB,KAAlB;AACD,GAHM,CAfqD;AAmB9D,GAACF,OAAO,CAACe,sBAAR,CAA+BR,QAA/B,EAAD,GAA6C,CAACC,KAAD,EAAQC,MAAR,KAC3CX,OAAO,CAACU,KAAD,EAASE,KAAD,IAAW;AACxBA,IAAAA,KAAK,CAACR,SAAN,GAAkB,IAAlB;AACD,GAFM,CApBqD;AAuB9D,GAACF,OAAO,CAACgB,6BAAR,CAAsCT,QAAtC,EAAD,GAAoD,CAACC,KAAD,EAAQC,MAAR,KAClDX,OAAO,CAACU,KAAD,EAASE,KAAD,IAAW;AACxBA,IAAAA,KAAK,CAACL,sBAAN,GAA+BI,MAAM,CAACG,OAAtC;AACAF,IAAAA,KAAK,CAACR,SAAN,GAAkB,KAAlB;AACD,GAHM,CAxBqD;AA4B9D,GAACF,OAAO,CAACiB,oBAAR,CAA6BV,QAA7B,EAAD,GAA2C,CAACC,KAAD,EAAQC,MAAR,KACzCX,OAAO,CAACU,KAAD,EAASE,KAAD,IAAW;AACxBA,IAAAA,KAAK,CAACL,sBAAN,GAA+B,IAA/B;AACD,GAFM,CA7BqD;AAgC9D,GAACL,OAAO,CAACkB,cAAR,CAAuBX,QAAvB,EAAD,GAAqC,CAACC,KAAD,EAAQC,MAAR,KACnCX,OAAO,CAACU,KAAD,EAASE,KAAD,IAAW,CAAE,CAArB,CAjCqD;AAkC9D,GAACV,OAAO,CAACmB,kBAAR,CAA2BZ,QAA3B,EAAD,GAAyC,CAACC,KAAD,EAAQC,MAAR,KACvCX,OAAO,CAACU,KAAD,EAASE,KAAD,IAAW,CAAE,CAArB;AAnCqD,CAAf,CAA1C","sourcesContent":["import produce from \"immer\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\n\r\nimport * as actions from \"../../actions/masters/account.action\";\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  searchAccountMasterData: {},\r\n  accountFilterList: null,\r\n  selectedAccountDetails: null,\r\n};\r\n\r\nexport const AccountMasterReducer = createReducer(initialState, {\r\n  [actions.searchAccountMasterData.toString()]: (state, action) =>\r\n    produce(state, (draft) => {\r\n      draft.isLoading = true;\r\n    }),\r\n  [actions.searchAccountMasterDataSuccess.toString()]: (state, action) =>\r\n    produce(state, (draft) => {\r\n      draft.searchAccountMasterData = action.payload;\r\n      draft.isLoading = false;\r\n    }),\r\n  [actions.getAccountMasterFiltersList.toString()]: (state, action) =>\r\n    produce(state, (draft) => {\r\n      draft.isLoading = true;\r\n    }),\r\n  [actions.getAccountMasterFiltersListSuccess.toString()]: (state, action) =>\r\n    produce(state, (draft) => {\r\n      draft.accountFilterList = action.payload;\r\n      draft.isLoading = false;\r\n    }),\r\n  [actions.previewSelectedAccount.toString()]: (state, action) =>\r\n    produce(state, (draft) => {\r\n      draft.isLoading = true;\r\n    }),\r\n  [actions.previewSelectedAccountSuccess.toString()]: (state, action) =>\r\n    produce(state, (draft) => {\r\n      draft.selectedAccountDetails = action.payload;\r\n      draft.isLoading = false;\r\n    }),\r\n  [actions.clearSelectedAccount.toString()]: (state, action) =>\r\n    produce(state, (draft) => {\r\n      draft.selectedAccountDetails = null;\r\n    }),\r\n  [actions.setAccountHide.toString()]: (state, action) =>\r\n    produce(state, (draft) => {}),\r\n  [actions.setAccountVerified.toString()]: (state, action) =>\r\n    produce(state, (draft) => {}),\r\n});\r\n"]},"metadata":{},"sourceType":"module"}