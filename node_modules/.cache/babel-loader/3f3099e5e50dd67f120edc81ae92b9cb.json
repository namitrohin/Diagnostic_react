{"ast":null,"code":"var _jsxFileName = \"F:\\\\React code\\\\diagnostic\\\\src\\\\pages\\\\DC\\\\browse.js\",\n    _s = $RefreshSig$();\n\nimport { TextField, Button, MenuItem } from \"@material-ui/core\";\nimport { DataGrid } from \"@mui/x-data-grid\";\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\nimport { CommonController } from \"../../_redux/controller/common.controller\";\nimport CustomPagination from \"../../components/CustomPagination\";\nimport CustomNoRowsOverlay from \"../../components/customRowComponent\";\nimport { showErrorToast } from \"../../components/common\";\nimport DateFilter from \"../../components/dateFilter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst DCBrowseList = props => {\n  _s();\n\n  const history = useHistory();\n  const [browseListData, setBrowseListData] = useState([]);\n  const [totalRecord, setTotalRecords] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [params, setParams] = useState({\n    pageNo: 1,\n    pageSize: 10,\n    filter_value: \"\",\n    sort_column: \"\",\n    sort_order: \"\"\n  });\n  const [bodyParam, setBodyParam] = useState({\n    user_id: localStorage.getItem(\"userId\")\n  });\n\n  const handleParams = event => {\n    setTimeout(() => {\n      setParams({ ...params,\n        [event.target.name]: event.target.value\n      });\n    }, 800);\n  };\n\n  const handleBodyParam = event => {\n    setTimeout(() => {\n      setBodyParam({ ...bodyParam,\n        [event.target.name]: event.target.value\n      });\n    }, 800);\n  };\n\n  const getBrowseListData = async () => {\n    setLoading(true);\n\n    try {\n      await CommonController.commonApiCall(\"dc/browseDCPackage\", params, bodyParam, \"node\").then(data => {\n        if (data.status === 200) {\n          setBrowseListData(data.data);\n          setTotalRecords(data.recordsFiltered);\n        } else {\n          showErrorToast(\"Something went wrong\");\n        }\n      });\n    } catch (err) {\n      showErrorToast(err);\n    }\n\n    setLoading(false);\n  };\n\n  const handlePageSizeChange = param => {\n    setParams({ ...params,\n      pageSize: param\n    });\n  };\n\n  const handlePageChange = param => {\n    if (param !== 0) {\n      setParams({ ...params,\n        pageNo: param\n      });\n    }\n  };\n\n  useEffect(() => {\n    getBrowseListData();\n  }, []);\n  useEffect(() => {\n    getBrowseListData();\n  }, [params, bodyParam]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter_box mb-5\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-1 d-flex align-items-center\",\n          children: /*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"mb-0\",\n            children: \"Filters\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-2\",\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            id: \"outlined-basic\",\n            size: \"small\",\n            onKeyUp: handleParams,\n            name: \"filter_value\",\n            label: \"Search\",\n            variant: \"outlined\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DateFilter, {\n          onDateUpdate: () => getBrowseListData()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: 400,\n        width: \"100%\"\n      },\n      children: /*#__PURE__*/_jsxDEV(DataGrid, {\n        columns: [{\n          field: \"id\",\n          headerName: \"Sr. no\",\n          flex: 0\n        }, {\n          field: \"entry_no\",\n          headerName: \"Entry No.\",\n          width: 100\n        }, {\n          field: \"date\",\n          headerName: \"Date\",\n          width: 120\n        }, {\n          field: \"company_name\",\n          headerName: \"Company Name\",\n          width: 400\n        }, {\n          field: \"remarks\",\n          headerName: \"Remarks\",\n          width: 400\n        }],\n        pagination: true,\n        disableColumnFilter: true,\n        pageSize: params.pageSize,\n        page: params.pageNo,\n        rowsPerPageOptions: [10, 15, 25, 100],\n        rowCount: totalRecord,\n        paginationMode: \"server\",\n        onPageSizeChange: handlePageSizeChange,\n        onPageChange: handlePageChange,\n        loading: loading,\n        rowHeight: 30,\n        components: browseListData.length > 0 ? {\n          Pagination: CustomPagination,\n          NoRowsOverlay: CustomNoRowsOverlay\n        } : {},\n        onSortModelChange: sort => {\n          if (sort.length > 0) {\n            setParams({ ...params,\n              sort_column: sort[0].field,\n              sort_order: sort[0].sort\n            });\n          }\n        },\n        rows: browseListData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(DCBrowseList, \"XMu6wma5tEpLz8B50pxpB4+K9jk=\", false, function () {\n  return [useHistory];\n});\n\n_c = DCBrowseList;\nexport default DCBrowseList;\n\nvar _c;\n\n$RefreshReg$(_c, \"DCBrowseList\");","map":{"version":3,"sources":["F:/React code/diagnostic/src/pages/DC/browse.js"],"names":["TextField","Button","MenuItem","DataGrid","React","useEffect","useState","useHistory","CommonController","CustomPagination","CustomNoRowsOverlay","showErrorToast","DateFilter","DCBrowseList","props","history","browseListData","setBrowseListData","totalRecord","setTotalRecords","loading","setLoading","params","setParams","pageNo","pageSize","filter_value","sort_column","sort_order","bodyParam","setBodyParam","user_id","localStorage","getItem","handleParams","event","setTimeout","target","name","value","handleBodyParam","getBrowseListData","commonApiCall","then","data","status","recordsFiltered","err","handlePageSizeChange","param","handlePageChange","height","width","field","headerName","flex","length","Pagination","NoRowsOverlay","sort"],"mappings":"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","sourcesContent":["import { TextField, Button, MenuItem } from \"@material-ui/core\";\nimport { DataGrid } from \"@mui/x-data-grid\";\n\nimport React, { useEffect, useState } from \"react\";\n\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\n\nimport { CommonController } from \"../../_redux/controller/common.controller\";\nimport CustomPagination from \"../../components/CustomPagination\";\nimport CustomNoRowsOverlay from \"../../components/customRowComponent\";\nimport { showErrorToast } from \"../../components/common\";\nimport DateFilter from \"../../components/dateFilter\";\n\nconst DCBrowseList = (props) => {\n  const history = useHistory();\n  const [browseListData, setBrowseListData] = useState([]);\n  const [totalRecord, setTotalRecords] = useState(0);\n\n  const [loading, setLoading] = useState(false);\n\n  const [params, setParams] = useState({\n    pageNo: 1,\n    pageSize: 10,\n    filter_value: \"\",\n    sort_column: \"\",\n    sort_order: \"\",\n  });\n\n  const [bodyParam, setBodyParam] = useState({\n    user_id: localStorage.getItem(\"userId\"),\n  });\n\n  const handleParams = (event) => {\n    setTimeout(() => {\n      setParams({ ...params, [event.target.name]: event.target.value });\n    }, 800);\n  };\n\n  const handleBodyParam = (event) => {\n    setTimeout(() => {\n      setBodyParam({ ...bodyParam, [event.target.name]: event.target.value });\n    }, 800);\n  };\n\n  const getBrowseListData = async () => {\n    setLoading(true);\n    try {\n      await CommonController.commonApiCall(\n        \"dc/browseDCPackage\",\n        params,\n        bodyParam,\n\n        \"node\"\n      ).then((data) => {\n        if (data.status === 200) {\n          setBrowseListData(data.data);\n          setTotalRecords(data.recordsFiltered);\n        } else {\n          showErrorToast(\"Something went wrong\");\n        }\n      });\n    } catch (err) {\n      showErrorToast(err);\n    }\n    setLoading(false);\n  };\n\n  const handlePageSizeChange = (param) => {\n    setParams({ ...params, pageSize: param });\n  };\n  const handlePageChange = (param) => {\n    if (param !== 0) {\n      setParams({ ...params, pageNo: param });\n    }\n  };\n\n  useEffect(() => {\n    getBrowseListData();\n  }, []);\n\n  useEffect(() => {\n    getBrowseListData();\n  }, [params, bodyParam]);\n\n  return (\n    <>\n      <div className=\"filter_box mb-5\">\n        <div className=\"row\">\n          <div className=\"col-md-1 d-flex align-items-center\">\n            <h4 className=\"mb-0\">Filters</h4>\n          </div>\n\n          <div className=\"col-md-2\">\n            <TextField\n              fullWidth\n              id=\"outlined-basic\"\n              size=\"small\"\n              onKeyUp={handleParams}\n              name=\"filter_value\"\n              label=\"Search\"\n              variant=\"outlined\"\n            />\n          </div>\n          <DateFilter onDateUpdate={() => getBrowseListData()} />\n        </div>\n      </div>\n\n      <div style={{ height: 400, width: \"100%\" }}>\n        <DataGrid\n          columns={[\n            {\n              field: \"id\",\n              headerName: \"Sr. no\",\n              flex: 0,\n            },\n            {\n              field: \"entry_no\",\n              headerName: \"Entry No.\",\n              width: 100,\n            },\n\n            {\n              field: \"date\",\n              headerName: \"Date\",\n              width: 120,\n            },\n            {\n              field: \"company_name\",\n              headerName: \"Company Name\",\n              width: 400,\n            },\n\n            {\n              field: \"remarks\",\n              headerName: \"Remarks\",\n              width: 400,\n            },\n          ]}\n          pagination\n          disableColumnFilter\n          pageSize={params.pageSize}\n          page={params.pageNo}\n          rowsPerPageOptions={[10, 15, 25, 100]}\n          rowCount={totalRecord}\n          paginationMode=\"server\"\n          onPageSizeChange={handlePageSizeChange}\n          onPageChange={handlePageChange}\n          loading={loading}\n          rowHeight={30}\n          components={\n            browseListData.length > 0\n              ? {\n                  Pagination: CustomPagination,\n                  NoRowsOverlay: CustomNoRowsOverlay,\n                }\n              : {}\n          }\n          onSortModelChange={(sort) => {\n            if (sort.length > 0) {\n              setParams({\n                ...params,\n                sort_column: sort[0].field,\n                sort_order: sort[0].sort,\n              });\n            }\n          }}\n          rows={browseListData}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default DCBrowseList;\n"]},"metadata":{},"sourceType":"module"}