{"ast":null,"code":"var _jsxFileName = \"F:\\\\React code\\\\diagnostic\\\\src\\\\pages\\\\Stock\\\\itemLedgerBrowse.js\",\n    _s = $RefreshSig$();\n\nimport { DatePicker } from \"@material-ui/pickers\";\nimport { Button, MenuItem, TextField } from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport { Autocomplete } from \"@material-ui/lab\";\nimport { FormControlLabel, FormGroup, Checkbox } from \"@mui/material\";\nimport { CommonController } from \"../../_redux/controller/common.controller\";\nimport { DataGrid } from \"@mui/x-data-grid\";\nimport CustomPagination from \"../../components/CustomPagination\";\nimport CustomNoRowsOverlay from \"../../components/customRowComponent\";\nimport { showErrorToast } from \"../../components/common\";\nimport moment from \"moment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst user_id = {\n  user_id: localStorage.getItem(\"userId\")\n};\n\nconst ItemLedgerBrowse = () => {\n  _s();\n\n  const [bodyParam, setBodyParam] = useState({\n    sdate: new Date(new Date().getTime() - 24 * 60 * 60 * 1000),\n    edate: new Date(),\n    product_id: \"\"\n  });\n  const [browseListData, setBrowseListData] = useState([]);\n  const [totalRecord, setTotalRecords] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [params, setParams] = useState({\n    pageNo: 1,\n    pageSize: 10,\n    filter_value: \"\",\n    sort_column: \"\",\n    sort_order: \"\"\n  });\n  const [mlfbList, setMLFBList] = useState([]);\n  const [selectedValue, setSelectedValue] = useState(\"\");\n\n  const getProductList = async () => {\n    await CommonController.commonApiCallFilter(\"Dropdown/GetProductMlfb\", {}).then(data => setMLFBList(data));\n  };\n\n  const handleDateChange = (name, date) => {\n    setBodyParam({ ...bodyParam,\n      [name]: date\n    });\n  };\n\n  const handlePageSizeChange = param => {\n    setParams({ ...params,\n      pageSize: param\n    });\n  };\n\n  const handlePageChange = param => {\n    setParams({ ...params,\n      pageNo: param\n    });\n  };\n\n  useEffect(() => {\n    getProductList();\n    getBrowseListData();\n  }, []);\n  useEffect(() => {\n    getBrowseListData();\n  }, [bodyParam]);\n\n  const handleAutoChange = (name, value) => {\n    setBodyParam({ ...bodyParam,\n      [name]: value\n    });\n  };\n\n  const getBrowseListData = async () => {\n    setLoading(true);\n\n    try {\n      let body = { ...bodyParam\n      };\n      body.sdate = moment(bodyParam.sdate).format(\"DD-MM-yyyy\");\n      body.edate = moment(bodyParam.edate).format(\"DD-MM-yyyy\");\n      await CommonController.commonApiCall(\"Stock/NewDailyLedgerReportInStock\", params, body, user_id).then(data => {\n        setBrowseListData(data.data);\n        setTotalRecords(data.recordsFiltered);\n      });\n    } catch (err) {\n      showErrorToast(err);\n    }\n\n    setLoading(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card card-custom gutter-b  px-7 py-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter_box mb-5\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-1 d-flex align-items-center\",\n            children: /*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"mb-0\",\n              children: \"Filters\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-2 mb-5 mb-md-0\",\n            children: /*#__PURE__*/_jsxDEV(DatePicker, {\n              label: \"From Date\",\n              value: bodyParam.sdate,\n              format: \"dd/MM/yyyy\",\n              onChange: date => handleDateChange(\"sdate\", date),\n              animateYearScrolling: true,\n              inputVariant: \"outlined\",\n              size: \"small\",\n              fullWidth: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-2 mb-5 mb-md-0\",\n            children: /*#__PURE__*/_jsxDEV(DatePicker, {\n              label: \"To Date\",\n              value: bodyParam.edate,\n              format: \"dd/MM/yyyy\",\n              onChange: date => handleDateChange(\"edate\", date),\n              animateYearScrolling: true,\n              inputVariant: \"outlined\",\n              size: \"small\",\n              minDate: bodyParam.sdate,\n              fullWidth: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-2 mb-5 mb-md-0\",\n            children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n              disablePortal: true,\n              id: \"combo-box-demo2\",\n              options: mlfbList,\n              fullWidth: true,\n              getOptionLabel: option => option.value,\n              value: selectedValue,\n              onChange: (event, value) => {\n                handleAutoChange(\"product_id\", value ? value.id : null);\n                setSelectedValue(value);\n              },\n              renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                variant: \"outlined\",\n                size: \"small\",\n                label: \"MLFB No.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: 400,\n          width: \"100%\"\n        },\n        children: /*#__PURE__*/_jsxDEV(DataGrid, {\n          columns: [{\n            field: \"id\",\n            headerName: \"Sr. no\",\n            flex: 0,\n            hide: true\n          }, {\n            field: \"entry_type\",\n            headerName: \"Entry Type\",\n            flex: 0.1\n          }, {\n            field: \"comp_id\",\n            headerName: \"Comp Id\",\n            flex: 0.1\n          }, {\n            field: \"tran_no\",\n            headerName: \"Tran No\",\n            flex: 0.1\n          }, {\n            field: \"date\",\n            headerName: \"Date\",\n            flex: 0.1\n          }, {\n            field: \"party\",\n            headerName: \"Party\",\n            flex: 0.1\n          }, {\n            field: \"in_qty\",\n            headerName: \"In Qty\",\n            flex: 0.1\n          }, {\n            field: \"out_qty\",\n            headerName: \"Out Qty\",\n            flex: 0.1,\n            align: \"right\"\n          }, {\n            field: \"balance\",\n            headerName: \"Balance\",\n            flex: 0.1,\n            align: \"right\"\n          }],\n          pagination: true,\n          disableColumnFilter: true,\n          pageSize: params.pageSize,\n          page: params.pageNo,\n          rowsPerPageOptions: [10, 15, 25, 100],\n          rowCount: totalRecord,\n          paginationMode: \"server\",\n          onPageSizeChange: handlePageSizeChange,\n          onPageChange: handlePageChange,\n          loading: loading,\n          rowHeight: 30,\n          components: browseListData.length > 0 ? {\n            Pagination: CustomPagination,\n            NoRowsOverlay: CustomNoRowsOverlay\n          } : {},\n          onSortModelChange: sort => {\n            if (sort.length > 0) {\n              setParams({ ...params,\n                sort_column: sort[0].field,\n                sort_order: sort[0].sort\n              });\n            }\n          },\n          rows: browseListData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(ItemLedgerBrowse, \"Ezp0UCeIKBgVgd6VdAFzw9VwR9w=\");\n\n_c = ItemLedgerBrowse;\nexport default ItemLedgerBrowse;\n\nvar _c;\n\n$RefreshReg$(_c, \"ItemLedgerBrowse\");","map":{"version":3,"sources":["F:/React code/diagnostic/src/pages/Stock/itemLedgerBrowse.js"],"names":["DatePicker","Button","MenuItem","TextField","React","useEffect","useState","Autocomplete","FormControlLabel","FormGroup","Checkbox","CommonController","DataGrid","CustomPagination","CustomNoRowsOverlay","showErrorToast","moment","user_id","localStorage","getItem","ItemLedgerBrowse","bodyParam","setBodyParam","sdate","Date","getTime","edate","product_id","browseListData","setBrowseListData","totalRecord","setTotalRecords","loading","setLoading","params","setParams","pageNo","pageSize","filter_value","sort_column","sort_order","mlfbList","setMLFBList","selectedValue","setSelectedValue","getProductList","commonApiCallFilter","then","data","handleDateChange","name","date","handlePageSizeChange","param","handlePageChange","getBrowseListData","handleAutoChange","value","body","format","commonApiCall","recordsFiltered","err","option","event","id","height","width","field","headerName","flex","hide","align","length","Pagination","NoRowsOverlay","sort"],"mappings":"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","sourcesContent":["import { DatePicker } from \"@material-ui/pickers\";\nimport { Button, MenuItem, TextField } from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport { Autocomplete } from \"@material-ui/lab\";\nimport { FormControlLabel, FormGroup, Checkbox } from \"@mui/material\";\nimport { CommonController } from \"../../_redux/controller/common.controller\";\nimport { DataGrid } from \"@mui/x-data-grid\";\nimport CustomPagination from \"../../components/CustomPagination\";\nimport CustomNoRowsOverlay from \"../../components/customRowComponent\";\nimport { showErrorToast } from \"../../components/common\";\nimport moment from \"moment\";\n\nconst user_id = {\n  user_id: localStorage.getItem(\"userId\"),\n};\n\nconst ItemLedgerBrowse = () => {\n  const [bodyParam, setBodyParam] = useState({\n    sdate: new Date(new Date().getTime() - 24 * 60 * 60 * 1000),\n    edate: new Date(),\n    product_id: \"\",\n  });\n\n  const [browseListData, setBrowseListData] = useState([]);\n  const [totalRecord, setTotalRecords] = useState(0);\n  const [loading, setLoading] = useState(false);\n\n  const [params, setParams] = useState({\n    pageNo: 1,\n    pageSize: 10,\n    filter_value: \"\",\n    sort_column: \"\",\n    sort_order: \"\",\n  });\n\n  const [mlfbList, setMLFBList] = useState([]);\n  const [selectedValue, setSelectedValue] = useState(\"\");\n\n  const getProductList = async () => {\n    await CommonController.commonApiCallFilter(\n      \"Dropdown/GetProductMlfb\",\n      {}\n    ).then((data) => setMLFBList(data));\n  };\n\n  const handleDateChange = (name, date) => {\n    setBodyParam({ ...bodyParam, [name]: date });\n  };\n\n  const handlePageSizeChange = (param) => {\n    setParams({ ...params, pageSize: param });\n  };\n  const handlePageChange = (param) => {\n    setParams({ ...params, pageNo: param });\n  };\n\n  useEffect(() => {\n    getProductList();\n    getBrowseListData();\n  }, []);\n\n  useEffect(() => {\n    getBrowseListData();\n  }, [bodyParam]);\n\n  const handleAutoChange = (name, value) => {\n    setBodyParam({ ...bodyParam, [name]: value });\n  };\n\n  const getBrowseListData = async () => {\n    setLoading(true);\n    try {\n      let body = { ...bodyParam };\n      body.sdate = moment(bodyParam.sdate).format(\"DD-MM-yyyy\");\n      body.edate = moment(bodyParam.edate).format(\"DD-MM-yyyy\");\n      await CommonController.commonApiCall(\n        \"Stock/NewDailyLedgerReportInStock\",\n        params,\n        body,\n        user_id\n      ).then((data) => {\n        setBrowseListData(data.data);\n        setTotalRecords(data.recordsFiltered);\n      });\n    } catch (err) {\n      showErrorToast(err);\n    }\n    setLoading(false);\n  };\n\n  return (\n    <>\n      <div className=\"card card-custom gutter-b  px-7 py-3\">\n        <div className=\"filter_box mb-5\">\n          <div className=\"row\">\n            <div className=\"col-md-1 d-flex align-items-center\">\n              <h4 className=\"mb-0\">Filters</h4>\n            </div>\n            <div className=\"col-md-2 mb-5 mb-md-0\">\n              <DatePicker\n                label=\"From Date\"\n                value={bodyParam.sdate}\n                format=\"dd/MM/yyyy\"\n                onChange={(date) => handleDateChange(\"sdate\", date)}\n                animateYearScrolling\n                inputVariant=\"outlined\"\n                size=\"small\"\n                fullWidth\n              />\n            </div>\n            <div className=\"col-md-2 mb-5 mb-md-0\">\n              <DatePicker\n                label=\"To Date\"\n                value={bodyParam.edate}\n                format=\"dd/MM/yyyy\"\n                onChange={(date) => handleDateChange(\"edate\", date)}\n                animateYearScrolling\n                inputVariant=\"outlined\"\n                size=\"small\"\n                minDate={bodyParam.sdate}\n                fullWidth\n              />\n            </div>\n\n            <div className=\"col-md-2 mb-5 mb-md-0\">\n              <Autocomplete\n                disablePortal\n                id=\"combo-box-demo2\"\n                options={mlfbList}\n                fullWidth\n                getOptionLabel={(option) => option.value}\n                value={selectedValue}\n                onChange={(event, value) => {\n                  handleAutoChange(\"product_id\", value ? value.id : null);\n                  setSelectedValue(value);\n                }}\n                renderInput={(params) => (\n                  <TextField\n                    {...params}\n                    variant=\"outlined\"\n                    size=\"small\"\n                    label=\"MLFB No.\"\n                  />\n                )}\n              />\n            </div>\n          </div>\n        </div>\n        <div style={{ height: 400, width: \"100%\" }}>\n          <DataGrid\n            columns={[\n              {\n                field: \"id\",\n                headerName: \"Sr. no\",\n                flex: 0,\n                hide: true,\n              },\n              {\n                field: \"entry_type\",\n                headerName: \"Entry Type\",\n                flex: 0.1,\n              },\n              {\n                field: \"comp_id\",\n                headerName: \"Comp Id\",\n                flex: 0.1,\n              },\n              {\n                field: \"tran_no\",\n                headerName: \"Tran No\",\n                flex: 0.1,\n              },\n              {\n                field: \"date\",\n                headerName: \"Date\",\n                flex: 0.1,\n              },\n              {\n                field: \"party\",\n                headerName: \"Party\",\n                flex: 0.1,\n              },\n              {\n                field: \"in_qty\",\n                headerName: \"In Qty\",\n                flex: 0.1,\n              },\n\n              {\n                field: \"out_qty\",\n                headerName: \"Out Qty\",\n                flex: 0.1,\n                align: \"right\",\n              },\n              {\n                field: \"balance\",\n                headerName: \"Balance\",\n                flex: 0.1,\n                align: \"right\",\n              },\n            ]}\n            pagination\n            disableColumnFilter\n            pageSize={params.pageSize}\n            page={params.pageNo}\n            rowsPerPageOptions={[10, 15, 25, 100]}\n            rowCount={totalRecord}\n            paginationMode=\"server\"\n            onPageSizeChange={handlePageSizeChange}\n            onPageChange={handlePageChange}\n            loading={loading}\n            rowHeight={30}\n            components={\n              browseListData.length > 0\n                ? {\n                    Pagination: CustomPagination,\n                    NoRowsOverlay: CustomNoRowsOverlay,\n                  }\n                : {}\n            }\n            onSortModelChange={(sort) => {\n              if (sort.length > 0) {\n                setParams({\n                  ...params,\n                  sort_column: sort[0].field,\n                  sort_order: sort[0].sort,\n                });\n              }\n            }}\n            rows={browseListData}\n          />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default ItemLedgerBrowse;\n"]},"metadata":{},"sourceType":"module"}