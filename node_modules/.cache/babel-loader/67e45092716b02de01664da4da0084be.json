{"ast":null,"code":"var _jsxFileName = \"F:\\\\React code\\\\diagnostic\\\\src\\\\pages\\\\Master\\\\Product\\\\browse.js\",\n    _s = $RefreshSig$();\n\nimport { Button, Checkbox, FormControlLabel, MenuItem, Select, TextField } from \"@material-ui/core\";\nimport { FormControl, InputLabel } from \"@material-ui/core\";\nimport { DataGrid } from \"@mui/x-data-grid\";\nimport { Autocomplete } from \"@material-ui/lab\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport ActionButtons from \"../../../components/action-buttons\";\nimport { showErrorToast, showSuccessToast } from \"../../../components/common\";\nimport CustomPagination from \"../../../components/CustomPagination\";\nimport CustomNoRowsOverlay from \"../../../components/customRowComponent\";\nimport { selectedProductId } from \"../../../_redux/actions/masters/all.action\";\nimport { getCategoryList, getGGNameList, getLPRefList, getProductListBrowse, updateProductListPrice, updateProductLPRef, updateProductMovingNonMoving, updateProductVerifiedStatus } from \"../../../_redux/actions/masters/product.action\";\nimport { CommonController } from \"../../../_redux/controller/common.controller\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BrowseProductMaster = ({\n  onEdit\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [isLoading, setIsloading] = useState(false);\n  const stateLoading = useSelector(state => state.ProductMaster.isLoading);\n  const getProductListResponse = useSelector(state => state.ProductMaster.productList);\n  const getCategoryListResponse = useSelector(state => state.ProductMaster.categoryList);\n  const getLpRefListResponse = useSelector(state => state.ProductMaster.lpRefList);\n  const getGGNameListResponse = useSelector(state => state.ProductMaster.ggNameList);\n  const [categoryList, setCategoryList] = useState([]);\n  const [lpRefList, setLpRefList] = useState([]);\n  const [ggNameList, setGGNameList] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [productList, setProductList] = useState([]);\n  const [tempVerifed, setTempVerified] = useState([]);\n  const [productMasterFilter, setProductMasterFilter] = useState({\n    user_id: localStorage.getItem(\"userId\"),\n    moving_non_moving: \"all\",\n    category: selectedCategory ? selectedCategory.value : \"\",\n    group: \"\",\n    gg_name: \"\",\n    item_name: \"\",\n    lp_ref: \"\",\n    status: \"\",\n    siemens_product: \"\"\n  });\n  const [params, setParams] = useState({\n    pageNo: 1,\n    pageSize: 10,\n    filter_value: \"\",\n    sort_column: \"\",\n    sort_order: \"\"\n  });\n\n  const handleFilters = event => {\n    setProductMasterFilter({ ...productMasterFilter,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const handleCategory = (event, value) => {\n    setSelectedCategory(value);\n    setProductMasterFilter({ ...productMasterFilter,\n      category: value ? value.value : \"\"\n    });\n  };\n\n  const handleParams = event => {\n    setTimeout(() => {\n      setParams({ ...params,\n        [event.target.name]: event.target.value\n      });\n    }, 800);\n  };\n\n  const handlePageSizeChange = param => {\n    setParams({ ...params,\n      pageSize: param.pageSize\n    });\n  };\n\n  const handlePageChange = param => {\n    console.log(param);\n    setParams({ ...params,\n      pageNo: param.page\n    });\n  };\n\n  useEffect(() => {\n    dispatch(getProductListBrowse(params, productMasterFilter));\n    dispatch(getCategoryList());\n    dispatch(getLPRefList());\n    dispatch(getGGNameList());\n  }, []);\n  useEffect(() => {\n    dispatch(getProductListBrowse(params, productMasterFilter));\n  }, [productMasterFilter, params]);\n  useEffect(() => {\n    setIsloading(stateLoading);\n\n    if (getProductListResponse) {\n      setProductList(getProductListResponse.data);\n    }\n  }, [getProductListResponse, stateLoading]);\n  useEffect(() => {\n    setIsloading(stateLoading);\n\n    if (getCategoryListResponse) {\n      setCategoryList(getCategoryListResponse);\n    }\n  }, [getCategoryListResponse, stateLoading]);\n  useEffect(() => {\n    setIsloading(stateLoading);\n\n    if (getLpRefListResponse) {\n      setLpRefList(getLpRefListResponse);\n    }\n  }, [getLpRefListResponse, stateLoading]);\n  useEffect(() => {\n    setIsloading(stateLoading);\n\n    if (getGGNameListResponse) {\n      setGGNameList(getGGNameListResponse);\n    }\n  }, [getGGNameListResponse, stateLoading]);\n\n  const updateVerifiedStatus = (value, id) => {\n    var temp = [...tempVerifed];\n    var tempIndex = temp.indexOf(id);\n    const param = {\n      product_id: id,\n      edit: value ? \"1\" : \"0\",\n      user_id: localStorage.getItem(\"userId\")\n    };\n\n    if (tempIndex > -1) {\n      temp.splice(tempIndex, 1);\n    } else {\n      if (value) {\n        temp.push(id);\n      }\n    }\n\n    dispatch(updateProductVerifiedStatus(param));\n    setTimeout(() => {\n      dispatch(getProductListBrowse(params, productMasterFilter));\n    }, 3000);\n  };\n\n  const updateListPriceValue = (param, event) => {\n    const params = {\n      product_id: param.row.product_id,\n      list_price: parseFloat(event.target.value.replace(\",\", \"\")).toFixed(2),\n      user_id: localStorage.getItem(\"userId\")\n    };\n    dispatch(updateProductListPrice(params));\n  };\n\n  const updateProductLPRefValue = (param, event) => {\n    const params = {\n      product_id: param.row.product_id,\n      lp_ref: event.target.value,\n      user_id: localStorage.getItem(\"userId\")\n    };\n    dispatch(updateProductLPRef(params));\n  };\n\n  const updateProductMovingNonValue = (param, event) => {\n    const params = {\n      product_id: param.row.product_id,\n      moving_non_moving: event.target.value,\n      user_id: localStorage.getItem(\"userId\")\n    };\n    dispatch(updateProductMovingNonMoving(params));\n  };\n\n  const handleEdit = id => {\n    dispatch(selectedProductId(id));\n    onEdit();\n  };\n\n  const handleDeleteRow = id => {\n    CommonController.commonApiCallFilter(\"Employee/EmployeeMasterDelete\", {\n      product_id: id\n    }).then(data => {\n      if (data.valid) {\n        showSuccessToast(\"Record Deleted Successfully\");\n        dispatch(getProductListBrowse(params, productMasterFilter));\n      } else {\n        showErrorToast(\"Something went wrong\");\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter_box mb-5\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex align-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex align-items-center mr-5\",\n          children: /*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"mb-0\",\n            children: \"Filters\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row w-100\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-2\",\n            children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n              id: \"combo-box-demo\",\n              className: \"mb-3\",\n              options: categoryList,\n              getOptionLabel: option => option.value,\n              fullWidth: true,\n              onChange: handleCategory,\n              value: selectedCategory || null,\n              renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                size: \"small\",\n                label: \"Category\",\n                variant: \"outlined\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-1\",\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              size: \"small\",\n              variant: \"outlined\",\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                id: \"demo-simple-select-outlined-label\",\n                children: \"Group\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                name: \"group_name\",\n                labelId: \"demo-simple-select-outlined-label\",\n                id: \"demo-simple-select-outlined\",\n                value: \"\",\n                onChange: handleFilters,\n                label: \"Group\",\n                children: /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"\",\n                  children: \"All\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 250,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-2\",\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              size: \"small\",\n              variant: \"outlined\",\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                id: \"demo-simple-select-outlined-label\",\n                children: \"Item Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                name: \"item_name\",\n                labelId: \"demo-simple-select-outlined-label\",\n                id: \"demo-simple-select-outlined\",\n                value: \"\",\n                label: \"Item Name\",\n                children: /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"\",\n                  children: \"All\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 266,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-2\",\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              size: \"small\",\n              variant: \"outlined\",\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                id: \"demo-simple-select-outlined-label\",\n                children: \"Lp. Ref.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                name: \"lp_ref\",\n                labelId: \"demo-simple-select-outlined-label\",\n                id: \"demo-simple-select-outlined\",\n                value: productMasterFilter.lp_ref,\n                onChange: handleFilters,\n                label: \"Lp. Ref.\",\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"\",\n                  children: \"None\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 284,\n                  columnNumber: 19\n                }, this), lpRefList.length > 0 ? lpRefList.map((ref, index) => {\n                  return /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: ref.value,\n                    children: ref.value\n                  }, \"ref\" + index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 288,\n                    columnNumber: 27\n                  }, this);\n                }) : null]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-2\",\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              size: \"small\",\n              variant: \"outlined\",\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                id: \"demo-simple-select-outlined-label\",\n                children: \"GG Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 300,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                name: \"gg_name\",\n                labelId: \"demo-simple-select-outlined-label\",\n                id: \"demo-simple-select-outlined\",\n                value: productMasterFilter.gg_name,\n                onChange: handleFilters,\n                label: \"GG Name\",\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"\",\n                  children: \"None\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 311,\n                  columnNumber: 19\n                }, this), ggNameList.length > 0 ? ggNameList.map((gg, index) => {\n                  return /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: gg.id,\n                    children: gg.value\n                  }, \"ggName\" + index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 315,\n                    columnNumber: 27\n                  }, this);\n                }) : null]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-2\",\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              size: \"small\",\n              variant: \"outlined\",\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                id: \"demo-simple-select-outlined-label\",\n                children: \"Siemens Product\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 326,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                name: \"siemens_product\",\n                labelId: \"demo-simple-select-outlined-label\",\n                id: \"demo-simple-select-outlined\",\n                value: productMasterFilter.siemens_product,\n                onChange: handleFilters,\n                label: \"Siemens Product\",\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"\",\n                  children: \"All\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 337,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"Siemens\",\n                  children: \"Siemens \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 338,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"Non-Siemens\",\n                  children: \"Non-Siemens\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 339,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 329,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-2\",\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              size: \"small\",\n              variant: \"outlined\",\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                id: \"demo-simple-select-outlined-label\",\n                children: \"Verified\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 345,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                name: \"verified\",\n                labelId: \"demo-simple-select-outlined-label\",\n                id: \"demo-simple-select-outlined\",\n                value: productMasterFilter.verified,\n                onChange: handleFilters,\n                label: \"Verified\",\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"\",\n                  children: \"All\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 356,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"1\",\n                  children: \"Verified\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 357,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"0\",\n                  children: \"Not Verified\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 358,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 348,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-2\",\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              id: \"outlined-basic\",\n              size: \"small\",\n              onKeyUp: handleParams,\n              name: \"filter_value\",\n              label: \"Search\",\n              variant: \"outlined\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-2 text-right\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              color: \"primary\",\n              disableElevation: true,\n              variant: \"contained\",\n              children: \"Export Excel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: 500,\n        width: \"100%\"\n      },\n      children: /*#__PURE__*/_jsxDEV(DataGrid, {\n        pagination: true,\n        disableColumnFilter: true,\n        pageSize: params.pageSize,\n        page: params.pageNo,\n        rowsPerPageOptions: [15, 25, 50, 100],\n        rowCount: getProductListResponse === null || getProductListResponse === void 0 ? void 0 : getProductListResponse.recordsFiltered,\n        paginationMode: \"server\",\n        onPageSizeChange: handlePageSizeChange,\n        onPageChange: handlePageChange,\n        loading: isLoading,\n        rowHeight: 30,\n        initialState: {},\n        components: {},\n        onSortModelChange: sort => {\n          if (sort.length > 0) {\n            setParams({ ...params,\n              sort_column: sort[0].field,\n              sort_order: sort[0].sort\n            });\n          }\n        },\n        columns: [{\n          field: \"id\",\n          headerName: \"ID\",\n          width: 70\n        }, {\n          field: \"product_code\",\n          headerName: \"ERP Code\",\n          width: 180\n        }, {\n          field: \"category_name\",\n          headerName: \"Category\",\n          width: 200\n        }, {\n          field: \"group\",\n          headerName: \"Group\",\n          width: 200\n        }, {\n          field: \"item_name\",\n          headerName: \"Item Name\",\n          width: 200\n        }, {\n          field: \"description\",\n          headerName: \"Description\",\n          width: 200\n        }, {\n          field: \"mlfb_no\",\n          headerName: \"MLFB No.\",\n          width: 200\n        }, {\n          field: \"list_price\",\n          headerName: \"List Price\",\n          width: 200,\n          renderCell: params => /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            defaultValue: params.row.list_price,\n            onBlur: event => updateListPriceValue(params, event)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 447,\n            columnNumber: 17\n          }, this)\n        }, {\n          field: \"grade\",\n          headerName: \"HSN\",\n          width: 200\n        }, {\n          field: \"tax_rate\",\n          headerName: \"Tax Rate\",\n          width: 200\n        }, {\n          field: \"lp_ref\",\n          headerName: \"L.P. Ref.\",\n          width: 200,\n          renderCell: params => /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            defaultValue: params.row.lp_ref,\n            onBlur: event => updateProductLPRefValue(params, event)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 470,\n            columnNumber: 17\n          }, this)\n        }, {\n          field: \"gg_name\",\n          headerName: \"GG Name\",\n          width: 200\n        }, {\n          field: \"siemens_product\",\n          headerName: \"Siemens Product\",\n          width: 200\n        }, {\n          field: \"moving_non_moving\",\n          headerName: \"Moving\",\n          width: 200,\n          renderCell: params => /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"form-control\",\n            onChange: event => updateProductMovingNonValue(params, event),\n            defaultValue: params.row.moving_non_moving,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Old\",\n              children: \"Old\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 500,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"New\",\n              children: \"New\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 501,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Panel\",\n              children: \"Panel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 502,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Asset\",\n              children: \"Asset\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 503,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 493,\n            columnNumber: 17\n          }, this)\n        }, {\n          field: \"edit\",\n          headerName: \"Verified\",\n          width: 200,\n          renderCell: params => /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            className: \"formControlLabel\",\n            control: /*#__PURE__*/_jsxDEV(Checkbox, {\n              defaultChecked: params.row.edit === \"True\",\n              size: \"small\",\n              color: \"primary\",\n              onChange: event => updateVerifiedStatus(event.target.checked, params.row.product_id),\n              inputProps: {\n                \"aria-label\": \"checkbox with small size\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 515,\n              columnNumber: 21\n            }, this),\n            label: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"font_13 \" + (params.row.edit === \"True\" || tempVerifed.indexOf(params.row.id) > -1 ? \"text-success\" : \"text-danger\"),\n              children: isLoading ? \"Updating\" : params.row.edit === \"True\" || tempVerifed.indexOf(params.row.id) > -1 ? \"Verified\" : \"Not Verified\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 531,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 512,\n            columnNumber: 17\n          }, this)\n        }, {\n          field: \"\",\n          headerName: \"Actions\",\n          renderCell: params => /*#__PURE__*/_jsxDEV(ActionButtons, {\n            onEdit: () => handleEdit(params.row.product_id),\n            onDelete: () => handleDeleteRow(params.row.product_id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 555,\n            columnNumber: 17\n          }, this),\n          flex: 0.1\n        }],\n        rows: productList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 211,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BrowseProductMaster, \"oiBvqe403mjzDMVrR3UP/33Az04=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = BrowseProductMaster;\nexport default BrowseProductMaster;\n\nvar _c;\n\n$RefreshReg$(_c, \"BrowseProductMaster\");","map":{"version":3,"sources":["F:/React code/diagnostic/src/pages/Master/Product/browse.js"],"names":["Button","Checkbox","FormControlLabel","MenuItem","Select","TextField","FormControl","InputLabel","DataGrid","Autocomplete","React","useEffect","useState","useDispatch","useSelector","ActionButtons","showErrorToast","showSuccessToast","CustomPagination","CustomNoRowsOverlay","selectedProductId","getCategoryList","getGGNameList","getLPRefList","getProductListBrowse","updateProductListPrice","updateProductLPRef","updateProductMovingNonMoving","updateProductVerifiedStatus","CommonController","BrowseProductMaster","onEdit","dispatch","isLoading","setIsloading","stateLoading","state","ProductMaster","getProductListResponse","productList","getCategoryListResponse","categoryList","getLpRefListResponse","lpRefList","getGGNameListResponse","ggNameList","setCategoryList","setLpRefList","setGGNameList","selectedCategory","setSelectedCategory","setProductList","tempVerifed","setTempVerified","productMasterFilter","setProductMasterFilter","user_id","localStorage","getItem","moving_non_moving","category","value","group","gg_name","item_name","lp_ref","status","siemens_product","params","setParams","pageNo","pageSize","filter_value","sort_column","sort_order","handleFilters","event","target","name","handleCategory","handleParams","setTimeout","handlePageSizeChange","param","handlePageChange","console","log","page","data","updateVerifiedStatus","id","temp","tempIndex","indexOf","product_id","edit","splice","push","updateListPriceValue","row","list_price","parseFloat","replace","toFixed","updateProductLPRefValue","updateProductMovingNonValue","handleEdit","handleDeleteRow","commonApiCallFilter","then","valid","option","length","map","ref","index","gg","verified","height","width","recordsFiltered","sort","field","headerName","renderCell","checked","flex"],"mappings":"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","sourcesContent":["import {\r\n  Button,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  MenuItem,\r\n  Select,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { FormControl, InputLabel } from \"@material-ui/core\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport ActionButtons from \"../../../components/action-buttons\";\r\nimport { showErrorToast, showSuccessToast } from \"../../../components/common\";\r\nimport CustomPagination from \"../../../components/CustomPagination\";\r\nimport CustomNoRowsOverlay from \"../../../components/customRowComponent\";\r\nimport { selectedProductId } from \"../../../_redux/actions/masters/all.action\";\r\n\r\nimport {\r\n  getCategoryList,\r\n  getGGNameList,\r\n  getLPRefList,\r\n  getProductListBrowse,\r\n  updateProductListPrice,\r\n  updateProductLPRef,\r\n  updateProductMovingNonMoving,\r\n  updateProductVerifiedStatus,\r\n} from \"../../../_redux/actions/masters/product.action\";\r\nimport { CommonController } from \"../../../_redux/controller/common.controller\";\r\n\r\nconst BrowseProductMaster = ({ onEdit }) => {\r\n  const dispatch = useDispatch();\r\n  const [isLoading, setIsloading] = useState(false);\r\n  const stateLoading = useSelector((state) => state.ProductMaster.isLoading);\r\n  const getProductListResponse = useSelector(\r\n    (state) => state.ProductMaster.productList\r\n  );\r\n  const getCategoryListResponse = useSelector(\r\n    (state) => state.ProductMaster.categoryList\r\n  );\r\n  const getLpRefListResponse = useSelector(\r\n    (state) => state.ProductMaster.lpRefList\r\n  );\r\n  const getGGNameListResponse = useSelector(\r\n    (state) => state.ProductMaster.ggNameList\r\n  );\r\n  const [categoryList, setCategoryList] = useState([]);\r\n  const [lpRefList, setLpRefList] = useState([]);\r\n  const [ggNameList, setGGNameList] = useState([]);\r\n  const [selectedCategory, setSelectedCategory] = useState(null);\r\n  const [productList, setProductList] = useState([]);\r\n  const [tempVerifed, setTempVerified] = useState([]);\r\n\r\n  const [productMasterFilter, setProductMasterFilter] = useState({\r\n    user_id: localStorage.getItem(\"userId\"),\r\n    moving_non_moving: \"all\",\r\n    category: selectedCategory ? selectedCategory.value : \"\",\r\n    group: \"\",\r\n    gg_name: \"\",\r\n    item_name: \"\",\r\n    lp_ref: \"\",\r\n    status: \"\",\r\n    siemens_product: \"\",\r\n  });\r\n\r\n  const [params, setParams] = useState({\r\n    pageNo: 1,\r\n    pageSize: 10,\r\n    filter_value: \"\",\r\n    sort_column: \"\",\r\n    sort_order: \"\",\r\n  });\r\n\r\n  const handleFilters = (event) => {\r\n    setProductMasterFilter({\r\n      ...productMasterFilter,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const handleCategory = (event, value) => {\r\n    setSelectedCategory(value);\r\n    setProductMasterFilter({\r\n      ...productMasterFilter,\r\n      category: value ? value.value : \"\",\r\n    });\r\n  };\r\n\r\n  const handleParams = (event) => {\r\n    setTimeout(() => {\r\n      setParams({ ...params, [event.target.name]: event.target.value });\r\n    }, 800);\r\n  };\r\n\r\n  const handlePageSizeChange = (param) => {\r\n    setParams({ ...params, pageSize: param.pageSize });\r\n  };\r\n  const handlePageChange = (param) => {\r\n    console.log(param);\r\n    setParams({ ...params, pageNo: param.page });\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(getProductListBrowse(params, productMasterFilter));\r\n    dispatch(getCategoryList());\r\n    dispatch(getLPRefList());\r\n    dispatch(getGGNameList());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    dispatch(getProductListBrowse(params, productMasterFilter));\r\n  }, [productMasterFilter, params]);\r\n\r\n  useEffect(() => {\r\n    setIsloading(stateLoading);\r\n    if (getProductListResponse) {\r\n      setProductList(getProductListResponse.data);\r\n    }\r\n  }, [getProductListResponse, stateLoading]);\r\n\r\n  useEffect(() => {\r\n    setIsloading(stateLoading);\r\n    if (getCategoryListResponse) {\r\n      setCategoryList(getCategoryListResponse);\r\n    }\r\n  }, [getCategoryListResponse, stateLoading]);\r\n\r\n  useEffect(() => {\r\n    setIsloading(stateLoading);\r\n    if (getLpRefListResponse) {\r\n      setLpRefList(getLpRefListResponse);\r\n    }\r\n  }, [getLpRefListResponse, stateLoading]);\r\n\r\n  useEffect(() => {\r\n    setIsloading(stateLoading);\r\n    if (getGGNameListResponse) {\r\n      setGGNameList(getGGNameListResponse);\r\n    }\r\n  }, [getGGNameListResponse, stateLoading]);\r\n\r\n  const updateVerifiedStatus = (value, id) => {\r\n    var temp = [...tempVerifed];\r\n    var tempIndex = temp.indexOf(id);\r\n    const param = {\r\n      product_id: id,\r\n      edit: value ? \"1\" : \"0\",\r\n      user_id: localStorage.getItem(\"userId\"),\r\n    };\r\n\r\n    if (tempIndex > -1) {\r\n      temp.splice(tempIndex, 1);\r\n    } else {\r\n      if (value) {\r\n        temp.push(id);\r\n      }\r\n    }\r\n    dispatch(updateProductVerifiedStatus(param));\r\n    setTimeout(() => {\r\n      dispatch(getProductListBrowse(params, productMasterFilter));\r\n    }, 3000);\r\n  };\r\n\r\n  const updateListPriceValue = (param, event) => {\r\n    const params = {\r\n      product_id: param.row.product_id,\r\n      list_price: parseFloat(event.target.value.replace(\",\", \"\")).toFixed(2),\r\n      user_id: localStorage.getItem(\"userId\"),\r\n    };\r\n    dispatch(updateProductListPrice(params));\r\n  };\r\n\r\n  const updateProductLPRefValue = (param, event) => {\r\n    const params = {\r\n      product_id: param.row.product_id,\r\n      lp_ref: event.target.value,\r\n      user_id: localStorage.getItem(\"userId\"),\r\n    };\r\n    dispatch(updateProductLPRef(params));\r\n  };\r\n\r\n  const updateProductMovingNonValue = (param, event) => {\r\n    const params = {\r\n      product_id: param.row.product_id,\r\n      moving_non_moving: event.target.value,\r\n      user_id: localStorage.getItem(\"userId\"),\r\n    };\r\n    dispatch(updateProductMovingNonMoving(params));\r\n  };\r\n\r\n  const handleEdit = (id) => {\r\n    dispatch(selectedProductId(id));\r\n    onEdit();\r\n  };\r\n\r\n  const handleDeleteRow = (id) => {\r\n    CommonController.commonApiCallFilter(\"Employee/EmployeeMasterDelete\", {\r\n      product_id: id,\r\n    }).then((data) => {\r\n      if (data.valid) {\r\n        showSuccessToast(\"Record Deleted Successfully\");\r\n        dispatch(getProductListBrowse(params, productMasterFilter));\r\n      } else {\r\n        showErrorToast(\"Something went wrong\");\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"filter_box mb-5\">\r\n        <div className=\"d-flex align-items-center\">\r\n          <div className=\"d-flex align-items-center mr-5\">\r\n            <h4 className=\"mb-0\">Filters</h4>\r\n          </div>\r\n          <div className=\"row w-100\">\r\n            <div className=\"col-md-2\">\r\n              <Autocomplete\r\n                id=\"combo-box-demo\"\r\n                className=\"mb-3\"\r\n                options={categoryList}\r\n                getOptionLabel={(option) => option.value}\r\n                fullWidth\r\n                onChange={handleCategory}\r\n                value={selectedCategory || null}\r\n                renderInput={(params) => (\r\n                  <TextField\r\n                    {...params}\r\n                    size=\"small\"\r\n                    label=\"Category\"\r\n                    variant=\"outlined\"\r\n                  />\r\n                )}\r\n              />\r\n            </div>\r\n            <div className=\"col-md-1\">\r\n              <FormControl fullWidth size=\"small\" variant=\"outlined\">\r\n                <InputLabel id=\"demo-simple-select-outlined-label\">\r\n                  Group\r\n                </InputLabel>\r\n                <Select\r\n                  name=\"group_name\"\r\n                  labelId=\"demo-simple-select-outlined-label\"\r\n                  id=\"demo-simple-select-outlined\"\r\n                  value={\"\"}\r\n                  onChange={handleFilters}\r\n                  label=\"Group\"\r\n                >\r\n                  <MenuItem value=\"\">All</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </div>\r\n            <div className=\"col-md-2\">\r\n              <FormControl fullWidth size=\"small\" variant=\"outlined\">\r\n                <InputLabel id=\"demo-simple-select-outlined-label\">\r\n                  Item Name\r\n                </InputLabel>\r\n                <Select\r\n                  name=\"item_name\"\r\n                  labelId=\"demo-simple-select-outlined-label\"\r\n                  id=\"demo-simple-select-outlined\"\r\n                  value={\"\"}\r\n                  label=\"Item Name\"\r\n                >\r\n                  <MenuItem value=\"\">All</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </div>\r\n\r\n            <div className=\"col-md-2\">\r\n              <FormControl fullWidth size=\"small\" variant=\"outlined\">\r\n                <InputLabel id=\"demo-simple-select-outlined-label\">\r\n                  Lp. Ref.\r\n                </InputLabel>\r\n                <Select\r\n                  name=\"lp_ref\"\r\n                  labelId=\"demo-simple-select-outlined-label\"\r\n                  id=\"demo-simple-select-outlined\"\r\n                  value={productMasterFilter.lp_ref}\r\n                  onChange={handleFilters}\r\n                  label=\"Lp. Ref.\"\r\n                >\r\n                  <MenuItem value={\"\"}>None</MenuItem>\r\n                  {lpRefList.length > 0\r\n                    ? lpRefList.map((ref, index) => {\r\n                        return (\r\n                          <MenuItem key={\"ref\" + index} value={ref.value}>\r\n                            {ref.value}\r\n                          </MenuItem>\r\n                        );\r\n                      })\r\n                    : null}\r\n                </Select>\r\n              </FormControl>\r\n            </div>\r\n\r\n            <div className=\"col-md-2\">\r\n              <FormControl fullWidth size=\"small\" variant=\"outlined\">\r\n                <InputLabel id=\"demo-simple-select-outlined-label\">\r\n                  GG Name\r\n                </InputLabel>\r\n                <Select\r\n                  name=\"gg_name\"\r\n                  labelId=\"demo-simple-select-outlined-label\"\r\n                  id=\"demo-simple-select-outlined\"\r\n                  value={productMasterFilter.gg_name}\r\n                  onChange={handleFilters}\r\n                  label=\"GG Name\"\r\n                >\r\n                  <MenuItem value={\"\"}>None</MenuItem>\r\n                  {ggNameList.length > 0\r\n                    ? ggNameList.map((gg, index) => {\r\n                        return (\r\n                          <MenuItem key={\"ggName\" + index} value={gg.id}>\r\n                            {gg.value}\r\n                          </MenuItem>\r\n                        );\r\n                      })\r\n                    : null}\r\n                </Select>\r\n              </FormControl>\r\n            </div>\r\n            <div className=\"col-md-2\">\r\n              <FormControl fullWidth size=\"small\" variant=\"outlined\">\r\n                <InputLabel id=\"demo-simple-select-outlined-label\">\r\n                  Siemens Product\r\n                </InputLabel>\r\n                <Select\r\n                  name=\"siemens_product\"\r\n                  labelId=\"demo-simple-select-outlined-label\"\r\n                  id=\"demo-simple-select-outlined\"\r\n                  value={productMasterFilter.siemens_product}\r\n                  onChange={handleFilters}\r\n                  label=\"Siemens Product\"\r\n                >\r\n                  <MenuItem value={\"\"}>All</MenuItem>\r\n                  <MenuItem value={\"Siemens\"}>Siemens </MenuItem>\r\n                  <MenuItem value={\"Non-Siemens\"}>Non-Siemens</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </div>\r\n            <div className=\"col-md-2\">\r\n              <FormControl fullWidth size=\"small\" variant=\"outlined\">\r\n                <InputLabel id=\"demo-simple-select-outlined-label\">\r\n                  Verified\r\n                </InputLabel>\r\n                <Select\r\n                  name=\"verified\"\r\n                  labelId=\"demo-simple-select-outlined-label\"\r\n                  id=\"demo-simple-select-outlined\"\r\n                  value={productMasterFilter.verified}\r\n                  onChange={handleFilters}\r\n                  label=\"Verified\"\r\n                >\r\n                  <MenuItem value={\"\"}>All</MenuItem>\r\n                  <MenuItem value={\"1\"}>Verified</MenuItem>\r\n                  <MenuItem value={\"0\"}>Not Verified</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </div>\r\n            <div className=\"col-md-2\">\r\n              <TextField\r\n                fullWidth\r\n                id=\"outlined-basic\"\r\n                size=\"small\"\r\n                onKeyUp={handleParams}\r\n                name=\"filter_value\"\r\n                label=\"Search\"\r\n                variant=\"outlined\"\r\n              />\r\n            </div>\r\n            <div className=\"col-md-2 text-right\">\r\n              <Button color=\"primary\" disableElevation variant=\"contained\">\r\n                Export Excel\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div style={{ height: 500, width: \"100%\" }}>\r\n        <DataGrid\r\n          pagination\r\n          disableColumnFilter\r\n          pageSize={params.pageSize}\r\n          page={params.pageNo}\r\n          rowsPerPageOptions={[15, 25, 50, 100]}\r\n          rowCount={getProductListResponse?.recordsFiltered}\r\n          paginationMode=\"server\"\r\n          onPageSizeChange={handlePageSizeChange}\r\n          onPageChange={handlePageChange}\r\n          loading={isLoading}\r\n          rowHeight={30}\r\n          initialState={{}}\r\n          components={{}}\r\n          onSortModelChange={(sort) => {\r\n            if (sort.length > 0) {\r\n              setParams({\r\n                ...params,\r\n                sort_column: sort[0].field,\r\n                sort_order: sort[0].sort,\r\n              });\r\n            }\r\n          }}\r\n          columns={[\r\n            {\r\n              field: \"id\",\r\n              headerName: \"ID\",\r\n              width: 70,\r\n            },\r\n            {\r\n              field: \"product_code\",\r\n              headerName: \"ERP Code\",\r\n              width: 180,\r\n            },\r\n            {\r\n              field: \"category_name\",\r\n              headerName: \"Category\",\r\n              width: 200,\r\n            },\r\n            {\r\n              field: \"group\",\r\n              headerName: \"Group\",\r\n              width: 200,\r\n            },\r\n            {\r\n              field: \"item_name\",\r\n              headerName: \"Item Name\",\r\n              width: 200,\r\n            },\r\n            {\r\n              field: \"description\",\r\n              headerName: \"Description\",\r\n              width: 200,\r\n            },\r\n            {\r\n              field: \"mlfb_no\",\r\n              headerName: \"MLFB No.\",\r\n              width: 200,\r\n            },\r\n            {\r\n              field: \"list_price\",\r\n              headerName: \"List Price\",\r\n              width: 200,\r\n              renderCell: (params) => (\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  defaultValue={params.row.list_price}\r\n                  onBlur={(event) => updateListPriceValue(params, event)}\r\n                />\r\n              ),\r\n            },\r\n            {\r\n              field: \"grade\",\r\n              headerName: \"HSN\",\r\n              width: 200,\r\n            },\r\n            {\r\n              field: \"tax_rate\",\r\n              headerName: \"Tax Rate\",\r\n              width: 200,\r\n            },\r\n            {\r\n              field: \"lp_ref\",\r\n              headerName: \"L.P. Ref.\",\r\n              width: 200,\r\n              renderCell: (params) => (\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  defaultValue={params.row.lp_ref}\r\n                  onBlur={(event) => updateProductLPRefValue(params, event)}\r\n                />\r\n              ),\r\n            },\r\n            {\r\n              field: \"gg_name\",\r\n              headerName: \"GG Name\",\r\n              width: 200,\r\n            },\r\n            {\r\n              field: \"siemens_product\",\r\n              headerName: \"Siemens Product\",\r\n              width: 200,\r\n            },\r\n            {\r\n              field: \"moving_non_moving\",\r\n              headerName: \"Moving\",\r\n              width: 200,\r\n              renderCell: (params) => (\r\n                <select\r\n                  className=\"form-control\"\r\n                  onChange={(event) =>\r\n                    updateProductMovingNonValue(params, event)\r\n                  }\r\n                  defaultValue={params.row.moving_non_moving}\r\n                >\r\n                  <option value=\"Old\">Old</option>\r\n                  <option value=\"New\">New</option>\r\n                  <option value=\"Panel\">Panel</option>\r\n                  <option value=\"Asset\">Asset</option>\r\n                </select>\r\n              ),\r\n            },\r\n            {\r\n              field: \"edit\",\r\n              headerName: \"Verified\",\r\n              width: 200,\r\n              renderCell: (params) => (\r\n                <FormControlLabel\r\n                  className={\"formControlLabel\"}\r\n                  control={\r\n                    <Checkbox\r\n                      defaultChecked={params.row.edit === \"True\"}\r\n                      size=\"small\"\r\n                      color=\"primary\"\r\n                      onChange={(event) =>\r\n                        updateVerifiedStatus(\r\n                          event.target.checked,\r\n                          params.row.product_id\r\n                        )\r\n                      }\r\n                      inputProps={{\r\n                        \"aria-label\": \"checkbox with small size\",\r\n                      }}\r\n                    />\r\n                  }\r\n                  label={\r\n                    <span\r\n                      className={\r\n                        \"font_13 \" +\r\n                        (params.row.edit === \"True\" ||\r\n                        tempVerifed.indexOf(params.row.id) > -1\r\n                          ? \"text-success\"\r\n                          : \"text-danger\")\r\n                      }\r\n                    >\r\n                      {isLoading\r\n                        ? \"Updating\"\r\n                        : params.row.edit === \"True\" ||\r\n                          tempVerifed.indexOf(params.row.id) > -1\r\n                        ? \"Verified\"\r\n                        : \"Not Verified\"}\r\n                    </span>\r\n                  }\r\n                />\r\n              ),\r\n            },\r\n            {\r\n              field: \"\",\r\n              headerName: \"Actions\",\r\n              renderCell: (params) => (\r\n                <ActionButtons\r\n                  onEdit={() => handleEdit(params.row.product_id)}\r\n                  onDelete={() => handleDeleteRow(params.row.product_id)}\r\n                />\r\n              ),\r\n              flex: 0.1,\r\n            },\r\n          ]}\r\n          rows={productList}\r\n        />\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default BrowseProductMaster;\r\n"]},"metadata":{},"sourceType":"module"}