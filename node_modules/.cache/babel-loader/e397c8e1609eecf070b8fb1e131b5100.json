{"ast":null,"code":"var _jsxFileName = \"F:\\\\React code\\\\diagnostic\\\\src\\\\pages\\\\Master\\\\Configuration\\\\product\\\\item\\\\browse.js\",\n    _s = $RefreshSig$();\n\nimport { DataGrid } from \"@material-ui/data-grid\";\nimport { TextField } from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport { showErrorToast, showSuccessToast } from \"../../../../../components/common\";\nimport CustomPagination from \"../../../../../components/CustomPagination\";\nimport CustomNoRowsOverlay from \"../../../../../components/customRowComponent\";\nimport { Loader } from \"../../../../../components/loader\";\nimport { CommonController } from \"../../../../../_redux/controller/common.controller\";\nimport ActionButtons from \"../../../../../components/action-buttons\";\nimport { useDispatch } from \"react-redux\";\nimport { Alert } from \"@material-ui/lab\";\nimport { selectedItemId } from \"../../../../../_redux/actions/masters/all.action\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst user_id = {\n  user_id: localStorage.getItem(\"userId\")\n};\n\nconst BrowseItem = ({\n  onEdit\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [isLoading, setIsLoading] = useState(false);\n  const [itemList, setItemList] = useState([]);\n  const [totalRecord, setTotalRecords] = useState(0);\n  const [params, setParams] = useState({\n    pageNo: 1,\n    pageSize: 10,\n    filter_value: \"\",\n    sort_column: \"\",\n    sort_order: \"\"\n  });\n\n  const handleParams = event => {\n    setTimeout(() => {\n      setParams({ ...params,\n        [event.target.name]: event.target.value\n      });\n    }, 800);\n  };\n\n  const getBrowseListData = async () => {\n    setIsLoading(true);\n    await CommonController.commonApiCall(\"Configuration/ConfigurationProductItemBrowse\", params, user_id).then(data => {\n      setItemList(data.data);\n      setTotalRecords(data.recordsFiltered);\n    }).catch(err => {\n      showErrorToast(err);\n    });\n    setIsLoading(false);\n  };\n\n  const handlePageSizeChange = param => {\n    setParams({ ...params,\n      pageSize: param.pageSize\n    });\n  };\n\n  const handlePageChange = param => {\n    setParams({ ...params,\n      pageNo: param.page\n    });\n  };\n\n  useEffect(() => {\n    getBrowseListData();\n  }, []);\n  useEffect(() => {\n    getBrowseListData();\n  }, [params]);\n\n  const handleEdit = id => {\n    dispatch(selectedItemId(id));\n    onEdit();\n  };\n\n  const handleDeleteRow = id => {\n    CommonController.commonApiCallFilter(\"Configuration/ConfigurationProductItemDelete\", {\n      item_id: id\n    }).then(data => {\n      if (data.valid) {\n        showSuccessToast(\"Record Deleted Successfully\");\n        getBrowseListData();\n      } else {\n        showErrorToast(\"Something went wrong\");\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [isLoading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter_box mb-5\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-1 d-flex align-items-center\",\n          children: /*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"mb-0\",\n            children: \"Filters\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-2\",\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            id: \"outlined-basic\",\n            size: \"small\",\n            onKeyUp: handleParams,\n            name: \"filter_value\",\n            label: \"Search\",\n            variant: \"outlined\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: 400,\n        width: \"100%\"\n      },\n      children: /*#__PURE__*/_jsxDEV(DataGrid, {\n        columns: [{\n          field: \"id\",\n          headerName: \"Sr. no\",\n          flex: 0\n        }, {\n          field: \"item_name\",\n          headerName: \"Item Name\",\n          flex: 0.1\n        }, {\n          field: \"description\",\n          headerName: \"Description\",\n          flex: 0.1\n        }, {\n          field: \"datetime\",\n          headerName: \"Date\",\n          flex: 0.1\n        }, {\n          field: \"\",\n          headerName: \"Actions\",\n          renderCell: params => /*#__PURE__*/_jsxDEV(ActionButtons, {\n            onEdit: () => handleEdit(params.row.item_id),\n            onDelete: () => handleDeleteRow(params.row.item_id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 17\n          }, this),\n          flex: 0.1\n        }],\n        pagination: true,\n        disableColumnFilter: true,\n        pageSize: params.pageSize // page={params.pageNo}\n        ,\n        rowsPerPageOptions: [10, 15, 25, 100],\n        rowCount: totalRecord,\n        paginationMode: \"server\",\n        onPageSizeChange: handlePageSizeChange,\n        onPageChange: handlePageChange,\n        loading: isLoading,\n        rowHeight: 30,\n        components: {\n          Pagination: CustomPagination,\n          NoRowsOverlay: CustomNoRowsOverlay\n        },\n        onSortModelChange: sort => {\n          if (sort.sortModel.length > 0) {\n            setParams({ ...params,\n              sort_column: sort.sortModel[0].field,\n              sort_order: sort.sortModel[0].sort\n            });\n          }\n        },\n        rows: itemList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BrowseItem, \"79rXcYhxvWsLPEYCWFrx5OBJEGw=\", false, function () {\n  return [useDispatch];\n});\n\n_c = BrowseItem;\nexport default BrowseItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"BrowseItem\");","map":{"version":3,"sources":["F:/React code/diagnostic/src/pages/Master/Configuration/product/item/browse.js"],"names":["DataGrid","TextField","React","useEffect","useState","showErrorToast","showSuccessToast","CustomPagination","CustomNoRowsOverlay","Loader","CommonController","ActionButtons","useDispatch","Alert","selectedItemId","user_id","localStorage","getItem","BrowseItem","onEdit","dispatch","isLoading","setIsLoading","itemList","setItemList","totalRecord","setTotalRecords","params","setParams","pageNo","pageSize","filter_value","sort_column","sort_order","handleParams","event","setTimeout","target","name","value","getBrowseListData","commonApiCall","then","data","recordsFiltered","catch","err","handlePageSizeChange","param","handlePageChange","page","handleEdit","id","handleDeleteRow","commonApiCallFilter","item_id","valid","height","width","field","headerName","flex","renderCell","row","Pagination","NoRowsOverlay","sort","sortModel","length"],"mappings":"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","sourcesContent":["import { DataGrid } from \"@material-ui/data-grid\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  showErrorToast,\r\n  showSuccessToast,\r\n} from \"../../../../../components/common\";\r\n\r\nimport CustomPagination from \"../../../../../components/CustomPagination\";\r\nimport CustomNoRowsOverlay from \"../../../../../components/customRowComponent\";\r\n\r\nimport { Loader } from \"../../../../../components/loader\";\r\nimport { CommonController } from \"../../../../../_redux/controller/common.controller\";\r\nimport ActionButtons from \"../../../../../components/action-buttons\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport { selectedItemId } from \"../../../../../_redux/actions/masters/all.action\";\r\nconst user_id = {\r\n  user_id: localStorage.getItem(\"userId\"),\r\n};\r\n\r\nconst BrowseItem = ({ onEdit }) => {\r\n  const dispatch = useDispatch();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [itemList, setItemList] = useState([]);\r\n  const [totalRecord, setTotalRecords] = useState(0);\r\n\r\n  const [params, setParams] = useState({\r\n    pageNo: 1,\r\n    pageSize: 10,\r\n    filter_value: \"\",\r\n    sort_column: \"\",\r\n    sort_order: \"\",\r\n  });\r\n\r\n  const handleParams = (event) => {\r\n    setTimeout(() => {\r\n      setParams({ ...params, [event.target.name]: event.target.value });\r\n    }, 800);\r\n  };\r\n\r\n  const getBrowseListData = async () => {\r\n    setIsLoading(true);\r\n    await CommonController.commonApiCall(\r\n      \"Configuration/ConfigurationProductItemBrowse\",\r\n      params,\r\n      user_id\r\n    )\r\n      .then((data) => {\r\n        setItemList(data.data);\r\n        setTotalRecords(data.recordsFiltered);\r\n      })\r\n      .catch((err) => {\r\n        showErrorToast(err);\r\n      });\r\n    setIsLoading(false);\r\n  };\r\n\r\n  const handlePageSizeChange = (param) => {\r\n    setParams({ ...params, pageSize: param.pageSize });\r\n  };\r\n  const handlePageChange = (param) => {\r\n    setParams({ ...params, pageNo: param.page });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getBrowseListData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getBrowseListData();\r\n  }, [params]);\r\n\r\n  const handleEdit = (id) => {\r\n    dispatch(selectedItemId(id));\r\n    onEdit();\r\n  };\r\n\r\n  const handleDeleteRow = (id) => {\r\n    CommonController.commonApiCallFilter(\r\n      \"Configuration/ConfigurationProductItemDelete\",\r\n      {\r\n        item_id: id,\r\n      }\r\n    ).then((data) => {\r\n      if (data.valid) {\r\n        showSuccessToast(\"Record Deleted Successfully\");\r\n        getBrowseListData();\r\n      } else {\r\n        showErrorToast(\"Something went wrong\");\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {isLoading && <Loader />}\r\n      <div className=\"filter_box mb-5\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-1 d-flex align-items-center\">\r\n            <h4 className=\"mb-0\">Filters</h4>\r\n          </div>\r\n\r\n          <div className=\"col-md-2\">\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              onKeyUp={handleParams}\r\n              name=\"filter_value\"\r\n              label=\"Search\"\r\n              variant=\"outlined\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div style={{ height: 400, width: \"100%\" }}>\r\n        <DataGrid\r\n          columns={[\r\n            {\r\n              field: \"id\",\r\n              headerName: \"Sr. no\",\r\n              flex: 0,\r\n            },\r\n            {\r\n              field: \"item_name\",\r\n              headerName: \"Item Name\",\r\n              flex: 0.1,\r\n            },\r\n            {\r\n              field: \"description\",\r\n              headerName: \"Description\",\r\n              flex: 0.1,\r\n            },\r\n            {\r\n              field: \"datetime\",\r\n              headerName: \"Date\",\r\n              flex: 0.1,\r\n            },\r\n            {\r\n              field: \"\",\r\n              headerName: \"Actions\",\r\n              renderCell: (params) => (\r\n                <ActionButtons\r\n                  onEdit={() => handleEdit(params.row.item_id)}\r\n                  onDelete={() => handleDeleteRow(params.row.item_id)}\r\n                />\r\n              ),\r\n              flex: 0.1,\r\n            },\r\n          ]}\r\n          pagination\r\n          disableColumnFilter\r\n          pageSize={params.pageSize}\r\n          // page={params.pageNo}\r\n          rowsPerPageOptions={[10, 15, 25, 100]}\r\n          rowCount={totalRecord}\r\n          paginationMode=\"server\"\r\n          onPageSizeChange={handlePageSizeChange}\r\n          onPageChange={handlePageChange}\r\n          loading={isLoading}\r\n          rowHeight={30}\r\n          components={{\r\n            Pagination: CustomPagination,\r\n            NoRowsOverlay: CustomNoRowsOverlay,\r\n          }}\r\n          onSortModelChange={(sort) => {\r\n            if (sort.sortModel.length > 0) {\r\n              setParams({\r\n                ...params,\r\n                sort_column: sort.sortModel[0].field,\r\n                sort_order: sort.sortModel[0].sort,\r\n              });\r\n            }\r\n          }}\r\n          rows={itemList}\r\n        />\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default BrowseItem;\r\n"]},"metadata":{},"sourceType":"module"}