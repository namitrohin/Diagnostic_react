{"ast":null,"code":"import _objectSpread from\"F:/React code/diagnostic/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"F:/React code/diagnostic/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import CustomPagination from'../../../../../components/CustomPagination';import CustomNoRowsOverlay from'../../../../../components/customRowComponent';import{DataGrid}from'@material-ui/data-grid';import{useDispatch,useSelector}from'react-redux';import{getAccountGroupBrowse,selectedConfigGroup}from'../../../../../_redux/actions/masters/configuration.action';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ConfigGroupBrowse=function ConfigGroupBrowse(props){var dispatch=useDispatch();var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isLoading=_useState2[0],setIsLoading=_useState2[1];var configurationLoading=useSelector(function(state){return state.ConfigurationMaster.isLoading;});var getGroupListResponse=useSelector(function(state){return state.ConfigurationMaster.groupList;});var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),groupList=_useState4[0],setGroupList=_useState4[1];var _useState5=useState({pageNo:1,pageSize:10,filter_value:'',sort_column:'',sort_order:''}),_useState6=_slicedToArray(_useState5,2),params=_useState6[0],setParams=_useState6[1];var handlePageSizeChange=function handlePageSizeChange(param){setParams(_objectSpread(_objectSpread({},params),{},{pageSize:param.pageSize}));};var handlePageChange=function handlePageChange(param){setParams(_objectSpread(_objectSpread({},params),{},{pageNo:param.page+1}));};useEffect(function(){dispatch(getAccountGroupBrowse(params));},[]);useEffect(function(){dispatch(getAccountGroupBrowse(params));},[params]);useEffect(function(){setIsLoading(configurationLoading);if(getGroupListResponse){setGroupList(getGroupListResponse.data||[]);}},[getGroupListResponse,configurationLoading]);var onPreviewOrEdit=function onPreviewOrEdit(row){dispatch(selectedConfigGroup(row));props.onActionClick(1);};return/*#__PURE__*/_jsx(React.Fragment,{children:/*#__PURE__*/_jsx(\"div\",{style:{height:350,width:'100%'},children:/*#__PURE__*/_jsx(DataGrid,{pagination:true,disableColumnFilter:true,pageSize:params.pageSize,rowsPerPageOptions:[10,20,50,100],rowCount:getGroupListResponse===null||getGroupListResponse===void 0?void 0:getGroupListResponse.recordsFiltered,paginationMode:\"server\",onPageSizeChange:handlePageSizeChange,onPageChange:handlePageChange,loading:isLoading,rowHeight:30,components:{Pagination:CustomPagination,NoRowsOverlay:CustomNoRowsOverlay},columns:[{field:'id',headerName:\"Sr No.\",width:120},{field:'group_id',headerName:\"Group ID\",width:120},{field:'group_name',headerName:\"Group Name\",width:200},{field:'description',headerName:\"Description\",width:200},{field:'',headerName:\"Actions\",renderCell:function renderCell(params){return/*#__PURE__*/_jsxs(\"div\",{className:\"action_btns\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"far fa-edit mr-2\",onClick:function onClick(){return onPreviewOrEdit(params.row);}}),/*#__PURE__*/_jsx(\"i\",{className:\"far fa-trash-alt mr-2\"})]});},width:150}],rows:getGroupListResponse?getGroupListResponse.data:[]})})});};export default ConfigGroupBrowse;","map":{"version":3,"sources":["F:/React code/diagnostic/src/pages/Master/Configuration/Account/group/browse.js"],"names":["React","useEffect","useState","CustomPagination","CustomNoRowsOverlay","DataGrid","useDispatch","useSelector","getAccountGroupBrowse","selectedConfigGroup","ConfigGroupBrowse","props","dispatch","isLoading","setIsLoading","configurationLoading","state","ConfigurationMaster","getGroupListResponse","groupList","setGroupList","pageNo","pageSize","filter_value","sort_column","sort_order","params","setParams","handlePageSizeChange","param","handlePageChange","page","data","onPreviewOrEdit","row","onActionClick","height","width","recordsFiltered","Pagination","NoRowsOverlay","field","headerName","renderCell"],"mappings":"6RAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,gBAAP,KAA6B,4CAA7B,CACA,MAAOC,CAAAA,mBAAP,KAAgC,8CAAhC,CACA,OAASC,QAAT,KAAyB,wBAAzB,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,OAASC,qBAAT,CAAgCC,mBAAhC,KAA2D,4DAA3D,C,wFAEA,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACC,KAAD,CAAW,CACjC,GAAMC,CAAAA,QAAQ,CAAGN,WAAW,EAA5B,CACA,cAAmCJ,QAAQ,CAAC,KAAD,CAA3C,wCAAOW,SAAP,eAAmBC,YAAnB,eACA,GAAMC,CAAAA,oBAAoB,CAAGR,WAAW,CAAC,SAACS,KAAD,QAAWA,CAAAA,KAAK,CAACC,mBAAN,CAA0BJ,SAArC,EAAD,CAAxC,CACA,GAAMK,CAAAA,oBAAoB,CAAGX,WAAW,CAAC,SAACS,KAAD,QAAWA,CAAAA,KAAK,CAACC,mBAAN,CAA0BE,SAArC,EAAD,CAAxC,CAEA,eAAmCjB,QAAQ,CAAC,EAAD,CAA3C,yCAAOiB,SAAP,eAAmBC,YAAnB,eAEA,eAA6BlB,QAAQ,CAAC,CAClCmB,MAAM,CAAC,CAD2B,CAElCC,QAAQ,CAAC,EAFyB,CAGlCC,YAAY,CAAC,EAHqB,CAIlCC,WAAW,CAAC,EAJsB,CAKlCC,UAAU,CAAC,EALuB,CAAD,CAArC,yCAAOC,MAAP,eAAgBC,SAAhB,eAQA,GAAMC,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,CAACC,KAAD,CAAW,CACpCF,SAAS,gCAAKD,MAAL,MACLJ,QAAQ,CAACO,KAAK,CAACP,QADV,GAAT,CAGH,CAJD,CAKA,GAAMQ,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACD,KAAD,CAAW,CAChCF,SAAS,gCAAKD,MAAL,MACLL,MAAM,CAACQ,KAAK,CAACE,IAAN,CAAa,CADf,GAAT,CAGH,CAJD,CAMA9B,SAAS,CAAC,UAAM,CACZW,QAAQ,CAACJ,qBAAqB,CAACkB,MAAD,CAAtB,CAAR,CACH,CAFQ,CAEP,EAFO,CAAT,CAIAzB,SAAS,CAAC,UAAM,CACZW,QAAQ,CAACJ,qBAAqB,CAACkB,MAAD,CAAtB,CAAR,CACH,CAFQ,CAEP,CAACA,MAAD,CAFO,CAAT,CAIAzB,SAAS,CAAC,UAAM,CACZa,YAAY,CAACC,oBAAD,CAAZ,CACA,GAAGG,oBAAH,CAAwB,CACpBE,YAAY,CAACF,oBAAoB,CAACc,IAArB,EAA8B,EAA/B,CAAZ,CACF,CACL,CALQ,CAKP,CAACd,oBAAD,CAAwBH,oBAAxB,CALO,CAAT,CAOA,GAAMkB,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,GAAD,CAAS,CAC7BtB,QAAQ,CAACH,mBAAmB,CAACyB,GAAD,CAApB,CAAR,CACAvB,KAAK,CAACwB,aAAN,CAAoB,CAApB,EACH,CAHD,CAKA,mBAAO,KAAC,KAAD,CAAO,QAAP,wBACH,YAAK,KAAK,CAAE,CAAEC,MAAM,CAAE,GAAV,CAAeC,KAAK,CAAE,MAAtB,CAAZ,uBACQ,KAAC,QAAD,EACG,UAAU,KADb,CAEG,mBAAmB,KAFtB,CAGG,QAAQ,CAAEX,MAAM,CAACJ,QAHpB,CAKG,kBAAkB,CAAE,CAAC,EAAD,CAAI,EAAJ,CAAO,EAAP,CAAU,GAAV,CALvB,CAMG,QAAQ,CAAEJ,oBAAF,SAAEA,oBAAF,iBAAEA,oBAAoB,CAAEoB,eANnC,CAOG,cAAc,CAAC,QAPlB,CAQG,gBAAgB,CAAEV,oBARrB,CASG,YAAY,CAAEE,gBATjB,CAUG,OAAO,CAAEjB,SAVZ,CAWG,SAAS,CAAE,EAXd,CAYG,UAAU,CAAE,CACR0B,UAAU,CAACpC,gBADH,CAERqC,aAAa,CAAEpC,mBAFP,CAZf,CAgBI,OAAO,CAAE,CACL,CACIqC,KAAK,CAAE,IADX,CAEIC,UAAU,CAAC,QAFf,CAGIL,KAAK,CAAC,GAHV,CADK,CAML,CACII,KAAK,CAAE,UADX,CAEIC,UAAU,CAAC,UAFf,CAGIL,KAAK,CAAC,GAHV,CANK,CAWL,CACII,KAAK,CAAE,YADX,CAEIC,UAAU,CAAC,YAFf,CAGIL,KAAK,CAAC,GAHV,CAXK,CAgBL,CACII,KAAK,CAAE,aADX,CAEIC,UAAU,CAAC,aAFf,CAGIL,KAAK,CAAC,GAHV,CAhBK,CAqBL,CACII,KAAK,CAAE,EADX,CAEIC,UAAU,CAAC,SAFf,CAGIC,UAAU,CAAC,oBAACjB,MAAD,qBACP,aAAK,SAAS,CAAC,aAAf,wBAEI,UAAG,SAAS,CAAC,kBAAb,CAAgC,OAAO,CAAE,yBAAMO,CAAAA,eAAe,CAACP,MAAM,CAACQ,GAAR,CAArB,EAAzC,EAFJ,cAGI,UAAG,SAAS,CAAC,uBAAb,EAHJ,GADO,EAHf,CAUIG,KAAK,CAAC,GAVV,CArBK,CAhBb,CAmDI,IAAI,CAAEnB,oBAAoB,CAAGA,oBAAoB,CAACc,IAAxB,CAA+B,EAnD7D,EADR,EADG,EAAP,CAyDH,CAxGD,CA0GA,cAAetB,CAAAA,iBAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport CustomPagination from '../../../../../components/CustomPagination';\r\nimport CustomNoRowsOverlay from '../../../../../components/customRowComponent';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getAccountGroupBrowse, selectedConfigGroup } from '../../../../../_redux/actions/masters/configuration.action';\r\n\r\nconst ConfigGroupBrowse = (props) => {\r\n    const dispatch = useDispatch();\r\n    const [isLoading , setIsLoading] = useState(false);\r\n    const configurationLoading = useSelector((state) => state.ConfigurationMaster.isLoading);\r\n    const getGroupListResponse = useSelector((state) => state.ConfigurationMaster.groupList);\r\n\r\n    const [groupList , setGroupList] = useState([]);\r\n\r\n    const [params , setParams] = useState({\r\n        pageNo:1,\r\n        pageSize:10,\r\n        filter_value:'',\r\n        sort_column:'',\r\n        sort_order:''\r\n    });\r\n\r\n    const handlePageSizeChange = (param) => {\r\n        setParams({...params,\r\n            pageSize:param.pageSize\r\n        });\r\n    }\r\n    const handlePageChange = (param) => {\r\n        setParams({...params,\r\n            pageNo:param.page + 1\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(getAccountGroupBrowse(params));\r\n    },[]);\r\n\r\n    useEffect(() => {\r\n        dispatch(getAccountGroupBrowse(params));\r\n    },[params]);\r\n\r\n    useEffect(() => {\r\n        setIsLoading(configurationLoading);\r\n        if(getGroupListResponse){\r\n            setGroupList(getGroupListResponse.data  || [])\r\n         }\r\n    },[getGroupListResponse , configurationLoading]);\r\n\r\n    const onPreviewOrEdit = (row) => {\r\n        dispatch(selectedConfigGroup(row));\r\n        props.onActionClick(1);\r\n    }\r\n\r\n    return <React.Fragment>\r\n        <div style={{ height: 350, width: '100%' }}>\r\n                <DataGrid\r\n                   pagination\r\n                   disableColumnFilter\r\n                   pageSize={params.pageSize}\r\n                  \r\n                   rowsPerPageOptions={[10,20,50,100]}\r\n                   rowCount={getGroupListResponse?.recordsFiltered}\r\n                   paginationMode=\"server\"\r\n                   onPageSizeChange={handlePageSizeChange}\r\n                   onPageChange={handlePageChange}\r\n                   loading={isLoading}                   \r\n                   rowHeight={30}\r\n                   components={{\r\n                       Pagination:CustomPagination,\r\n                       NoRowsOverlay: CustomNoRowsOverlay,\r\n                   }}\r\n                    columns={[\r\n                        {\r\n                            field: 'id',\r\n                            headerName:\"Sr No.\",\r\n                            width:120\r\n                        },\r\n                        {\r\n                            field: 'group_id',\r\n                            headerName:\"Group ID\",\r\n                            width:120\r\n                        },\r\n                        {\r\n                            field: 'group_name',\r\n                            headerName:\"Group Name\",\r\n                            width:200\r\n                        },\r\n                        {\r\n                            field: 'description',\r\n                            headerName:\"Description\",\r\n                            width:200\r\n                        },\r\n                        {\r\n                            field: '',\r\n                            headerName:\"Actions\",\r\n                            renderCell:(params) => (\r\n                                <div className=\"action_btns\">\r\n                                    {/* <i className=\"fas fa-search mr-2\" onClick={() => onPreviewOrEdit(params.row)}></i> */}\r\n                                    <i className=\"far fa-edit mr-2\" onClick={() => onPreviewOrEdit(params.row)}></i>\r\n                                    <i className=\"far fa-trash-alt mr-2\"></i>\r\n                                </div>\r\n                            ),\r\n                            width:150\r\n                        } \r\n                        \r\n                    ]}\r\n                    rows={getGroupListResponse ? getGroupListResponse.data : []}\r\n                />\r\n            </div>\r\n    </React.Fragment>\r\n}\r\n\r\nexport default ConfigGroupBrowse;\r\n"]},"metadata":{},"sourceType":"module"}