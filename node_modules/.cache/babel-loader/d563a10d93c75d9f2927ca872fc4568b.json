{"ast":null,"code":"var _jsxFileName = \"F:\\\\React code\\\\diagnostic\\\\src\\\\pages\\\\Profile\\\\attendance.js\",\n    _s = $RefreshSig$();\n\nimport { DatePicker } from \"@material-ui/pickers\";\nimport { TextField } from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport { Autocomplete } from \"@material-ui/lab\";\nimport { CommonController } from \"../../_redux/controller/common.controller\";\nimport { DataGrid } from \"@mui/x-data-grid\";\nimport CustomPagination from \"../../components/CustomPagination\";\nimport CustomNoRowsOverlay from \"../../components/customRowComponent\";\nimport { showErrorToast } from \"../../components/common\";\nimport moment from \"moment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst user_id = {\n  user_id: localStorage.getItem(\"userId\")\n};\n\nconst AttendanceBrowse = () => {\n  _s();\n\n  const [bodyParam, setBodyParam] = useState({\n    from_date: new Date().setDate(new Date().getDate() - 1),\n    to_date: new Date(),\n    emp_id: \"1\"\n  });\n  const [browseListData, setBrowseListData] = useState([]);\n  const [totalRecord, setTotalRecords] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [params, setParams] = useState({\n    pageNo: 1,\n    pageSize: 10,\n    filter_value: \"\",\n    sort_column: \"\",\n    sort_order: \"\"\n  });\n\n  const handlePageSizeChange = param => {\n    setParams({ ...params,\n      pageSize: param\n    });\n  };\n\n  const handlePageChange = param => {\n    setParams({ ...params,\n      pageNo: param\n    });\n  };\n\n  useEffect(() => {\n    getBrowseListData();\n  }, []);\n  useEffect(() => {\n    getBrowseListData();\n  }, [bodyParam]);\n\n  const getBrowseListData = async () => {\n    setLoading(true);\n\n    try {\n      let body = { ...bodyParam\n      };\n      body.from_date = moment(bodyParam.from_date).format(\"DD-MM-yyyy\");\n      body.to_date = moment(bodyParam.to_date).format(\"DD-MM-yyyy\");\n      await CommonController.commonApiCall(\"Attandance/EmpAttandanceBrowse\", params, body, user_id).then(data => {\n        setBrowseListData(data.data);\n        setTotalRecords(data.recordsFiltered);\n      });\n    } catch (err) {\n      showErrorToast(err);\n    }\n\n    setLoading(false);\n  };\n\n  const handleParams = event => {\n    setTimeout(() => {\n      setParams({ ...params,\n        [event.target.name]: event.target.value\n      });\n    }, 800);\n  };\n\n  const handleDateChange = (name, date) => {\n    setBodyParam({ ...bodyParam,\n      [name]: date\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card card-custom gutter-b  px-7 py-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter_box mb-5\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-1 d-flex align-items-center\",\n            children: /*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"mb-0\",\n              children: \"Filters\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-2 mb-5 mb-md-0\",\n            children: /*#__PURE__*/_jsxDEV(DatePicker, {\n              label: \"Date\",\n              value: bodyParam.from_date,\n              format: \"dd/MM/yyyy\",\n              onChange: date => handleDateChange(\"from_date\", date),\n              animateYearScrolling: true,\n              inputVariant: \"outlined\",\n              size: \"small\",\n              fullWidth: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-2 mb-5 mb-md-0\",\n            children: /*#__PURE__*/_jsxDEV(DatePicker, {\n              label: \"Date\",\n              value: bodyParam.to_date,\n              format: \"dd/MM/yyyy\",\n              onChange: date => handleDateChange(\"to_date\", date),\n              animateYearScrolling: true,\n              inputVariant: \"outlined\",\n              size: \"small\",\n              fullWidth: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-2 mb-5 mb-md-0\",\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              id: \"outlined-basic\",\n              size: \"small\",\n              onKeyUp: handleParams,\n              name: \"filter_value\",\n              label: \"Search\",\n              variant: \"outlined\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: 400,\n          width: \"100%\"\n        },\n        children: /*#__PURE__*/_jsxDEV(DataGrid, {\n          columns: [{\n            field: \"srno\",\n            headerName: \"Sr. no\",\n            flex: 0,\n            hide: true\n          }, {\n            field: \"date\",\n            headerName: \"Date\",\n            flex: 0.1\n          }, {\n            field: \"emp_code\",\n            headerName: \"Emp Code\",\n            flex: 0.1\n          }, {\n            field: \"emp_name\",\n            headerName: \"Emp Name\",\n            flex: 0.1\n          }, {\n            field: \"in_time\",\n            headerName: \"In Time\",\n            flex: 0.1\n          }, {\n            field: \"out_time\",\n            headerName: \"Out Time\",\n            flex: 0.1\n          }, {\n            field: \"m_in_time\",\n            headerName: \"Req. In Time\",\n            flex: 0.1\n          }, {\n            field: \"m_out_time\",\n            headerName: \"Req. Out Time\",\n            flex: 0.1\n          }, {\n            field: \"remarks\",\n            headerName: \"Remarks\",\n            flex: 0.1\n          }],\n          pagination: true,\n          getRowId: row => row.srno,\n          disableColumnFilter: true,\n          pageSize: params.pageSize,\n          page: params.pageNo,\n          rowsPerPageOptions: [10, 15, 25, 100],\n          rowCount: totalRecord,\n          paginationMode: \"server\",\n          onPageSizeChange: handlePageSizeChange,\n          onPageChange: handlePageChange,\n          loading: loading,\n          rowHeight: 30,\n          components: browseListData.length > 0 ? {\n            Pagination: CustomPagination,\n            NoRowsOverlay: CustomNoRowsOverlay\n          } : {},\n          onSortModelChange: sort => {\n            if (sort.length > 0) {\n              setParams({ ...params,\n                sort_column: sort[0].field,\n                sort_order: sort[0].sort\n              });\n            }\n          },\n          rows: browseListData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(AttendanceBrowse, \"18Km2SA0Z7EMGIUviXiDncBR0zc=\");\n\n_c = AttendanceBrowse;\nexport default AttendanceBrowse;\n\nvar _c;\n\n$RefreshReg$(_c, \"AttendanceBrowse\");","map":{"version":3,"sources":["F:/React code/diagnostic/src/pages/Profile/attendance.js"],"names":["DatePicker","TextField","React","useEffect","useState","Autocomplete","CommonController","DataGrid","CustomPagination","CustomNoRowsOverlay","showErrorToast","moment","user_id","localStorage","getItem","AttendanceBrowse","bodyParam","setBodyParam","from_date","Date","setDate","getDate","to_date","emp_id","browseListData","setBrowseListData","totalRecord","setTotalRecords","loading","setLoading","params","setParams","pageNo","pageSize","filter_value","sort_column","sort_order","handlePageSizeChange","param","handlePageChange","getBrowseListData","body","format","commonApiCall","then","data","recordsFiltered","err","handleParams","event","setTimeout","target","name","value","handleDateChange","date","height","width","field","headerName","flex","hide","row","srno","length","Pagination","NoRowsOverlay","sort"],"mappings":"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","sourcesContent":["import { DatePicker } from \"@material-ui/pickers\";\nimport { TextField } from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport { Autocomplete } from \"@material-ui/lab\";\n\nimport { CommonController } from \"../../_redux/controller/common.controller\";\nimport { DataGrid } from \"@mui/x-data-grid\";\nimport CustomPagination from \"../../components/CustomPagination\";\nimport CustomNoRowsOverlay from \"../../components/customRowComponent\";\nimport { showErrorToast } from \"../../components/common\";\nimport moment from \"moment\";\n\nconst user_id = {\n  user_id: localStorage.getItem(\"userId\"),\n};\n\nconst AttendanceBrowse = () => {\n  const [bodyParam, setBodyParam] = useState({\n    from_date: new Date().setDate(new Date().getDate() - 1),\n    to_date: new Date(),\n    emp_id: \"1\",\n  });\n\n  const [browseListData, setBrowseListData] = useState([]);\n  const [totalRecord, setTotalRecords] = useState(0);\n  const [loading, setLoading] = useState(false);\n\n  const [params, setParams] = useState({\n    pageNo: 1,\n    pageSize: 10,\n    filter_value: \"\",\n    sort_column: \"\",\n    sort_order: \"\",\n  });\n\n  const handlePageSizeChange = (param) => {\n    setParams({ ...params, pageSize: param });\n  };\n  const handlePageChange = (param) => {\n    setParams({ ...params, pageNo: param });\n  };\n\n  useEffect(() => {\n    getBrowseListData();\n  }, []);\n\n  useEffect(() => {\n    getBrowseListData();\n  }, [bodyParam]);\n\n  const getBrowseListData = async () => {\n    setLoading(true);\n    try {\n      let body = { ...bodyParam };\n      body.from_date = moment(bodyParam.from_date).format(\"DD-MM-yyyy\");\n      body.to_date = moment(bodyParam.to_date).format(\"DD-MM-yyyy\");\n      await CommonController.commonApiCall(\n        \"Attandance/EmpAttandanceBrowse\",\n        params,\n        body,\n        user_id\n      ).then((data) => {\n        setBrowseListData(data.data);\n        setTotalRecords(data.recordsFiltered);\n      });\n    } catch (err) {\n      showErrorToast(err);\n    }\n    setLoading(false);\n  };\n\n  const handleParams = (event) => {\n    setTimeout(() => {\n      setParams({ ...params, [event.target.name]: event.target.value });\n    }, 800);\n  };\n\n  const handleDateChange = (name, date) => {\n    setBodyParam({ ...bodyParam, [name]: date });\n  };\n\n  return (\n    <>\n      <div className=\"card card-custom gutter-b  px-7 py-3\">\n        <div className=\"filter_box mb-5\">\n          <div className=\"row\">\n            <div className=\"col-md-1 d-flex align-items-center\">\n              <h4 className=\"mb-0\">Filters</h4>\n            </div>\n            <div className=\"col-md-2 mb-5 mb-md-0\">\n              <DatePicker\n                label=\"Date\"\n                value={bodyParam.from_date}\n                format=\"dd/MM/yyyy\"\n                onChange={(date) => handleDateChange(\"from_date\", date)}\n                animateYearScrolling\n                inputVariant=\"outlined\"\n                size=\"small\"\n                fullWidth\n              />\n            </div>\n            <div className=\"col-md-2 mb-5 mb-md-0\">\n              <DatePicker\n                label=\"Date\"\n                value={bodyParam.to_date}\n                format=\"dd/MM/yyyy\"\n                onChange={(date) => handleDateChange(\"to_date\", date)}\n                animateYearScrolling\n                inputVariant=\"outlined\"\n                size=\"small\"\n                fullWidth\n              />\n            </div>\n\n            <div className=\"col-md-2 mb-5 mb-md-0\">\n              <TextField\n                fullWidth\n                id=\"outlined-basic\"\n                size=\"small\"\n                onKeyUp={handleParams}\n                name=\"filter_value\"\n                label=\"Search\"\n                variant=\"outlined\"\n              />\n            </div>\n          </div>\n        </div>\n        <div style={{ height: 400, width: \"100%\" }}>\n          <DataGrid\n            columns={[\n              {\n                field: \"srno\",\n                headerName: \"Sr. no\",\n                flex: 0,\n                hide: true,\n              },\n              {\n                field: \"date\",\n                headerName: \"Date\",\n                flex: 0.1,\n              },\n              {\n                field: \"emp_code\",\n                headerName: \"Emp Code\",\n                flex: 0.1,\n              },\n              {\n                field: \"emp_name\",\n                headerName: \"Emp Name\",\n                flex: 0.1,\n              },\n              {\n                field: \"in_time\",\n                headerName: \"In Time\",\n                flex: 0.1,\n              },\n              {\n                field: \"out_time\",\n                headerName: \"Out Time\",\n                flex: 0.1,\n              },\n              {\n                field: \"m_in_time\",\n                headerName: \"Req. In Time\",\n                flex: 0.1,\n              },\n\n              {\n                field: \"m_out_time\",\n                headerName: \"Req. Out Time\",\n                flex: 0.1,\n              },\n              {\n                field: \"remarks\",\n                headerName: \"Remarks\",\n                flex: 0.1,\n              },\n            ]}\n            pagination\n            getRowId={(row) => row.srno}\n            disableColumnFilter\n            pageSize={params.pageSize}\n            page={params.pageNo}\n            rowsPerPageOptions={[10, 15, 25, 100]}\n            rowCount={totalRecord}\n            paginationMode=\"server\"\n            onPageSizeChange={handlePageSizeChange}\n            onPageChange={handlePageChange}\n            loading={loading}\n            rowHeight={30}\n            components={\n              browseListData.length > 0\n                ? {\n                    Pagination: CustomPagination,\n                    NoRowsOverlay: CustomNoRowsOverlay,\n                  }\n                : {}\n            }\n            onSortModelChange={(sort) => {\n              if (sort.length > 0) {\n                setParams({\n                  ...params,\n                  sort_column: sort[0].field,\n                  sort_order: sort[0].sort,\n                });\n              }\n            }}\n            rows={browseListData}\n          />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default AttendanceBrowse;\n"]},"metadata":{},"sourceType":"module"}