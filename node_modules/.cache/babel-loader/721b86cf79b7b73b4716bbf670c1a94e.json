{"ast":null,"code":"var _jsxFileName = \"F:\\\\React code\\\\diagnostic\\\\src\\\\pages\\\\Master\\\\Configuration\\\\Account\\\\group\\\\form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { TextField, Button } from '@material-ui/core';\nimport { Alert } from '@material-ui/lab';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { clearAccountGroupInfoResponse, clearSelectedConfigGroup, updateAccountGroupInfo } from '../../../../../_redux/actions/masters/configuration.action';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddOrEditGroup = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const getGroupInfo = useSelector(state => state.ConfigurationMaster.groupInfo);\n  const updateGroupInfoResponse = useSelector(state => state.ConfigurationMaster.groupResponse);\n  const [groupValues, setGroupValues] = useState({});\n  const [showMessage, setMessage] = useState({\n    type: \"\",\n    msg: \"\"\n  });\n  useEffect(() => {\n    if (getGroupInfo) {\n      setGroupValues(getGroupInfo);\n    }\n  }, [getGroupInfo]);\n\n  const onSave = () => {\n    var temp = { ...groupValues\n    };\n    temp.user_id = localStorage.getItem(\"userId\");\n    temp.user_name = localStorage.getItem(\"userName\");\n    dispatch(updateAccountGroupInfo(temp));\n  };\n\n  const handleOnChange = event => {\n    setGroupValues({ ...groupValues,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const onCancelClick = () => {\n    dispatch(clearSelectedConfigGroup());\n    props.onClose(0);\n  };\n\n  useEffect(() => {\n    if (updateGroupInfoResponse) {\n      setMessage({ ...showMessage,\n        type: updateGroupInfoResponse.valid ? \"success\" : \"danger\",\n        msg: getGroupInfo ? \"Group updated successfully\" : \"Group Saved successfully\"\n      });\n      setTimeout(() => {\n        setMessage({\n          type: \"\",\n          msg: \"\"\n        });\n        props.onClose(0);\n      }, 2000);\n      dispatch(clearAccountGroupInfoResponse());\n    }\n  }, [updateGroupInfoResponse]); // \n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-4\",\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Group ID\",\n            name: \"group_id\",\n            value: groupValues.group_id,\n            onChange: handleOnChange,\n            fullWidth: true,\n            variant: \"outlined\",\n            size: \"small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-4\",\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Group Name\",\n            name: \"group_name\",\n            value: groupValues.group_name,\n            onChange: handleOnChange,\n            fullWidth: true,\n            variant: \"outlined\",\n            size: \"small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-4\",\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            multiline: true,\n            label: \"Description\",\n            value: groupValues.description,\n            onChange: handleOnChange,\n            name: \"description\",\n            fullWidth: true,\n            variant: \"outlined\",\n            size: \"small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-12 mt-3 text-right\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            className: \"mr-2\",\n            onClick: onCancelClick,\n            disableElevation: true,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            onClick: onSave,\n            color: \"primary\",\n            disableElevation: true,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }, this), showMessage.type != \"\" ? /*#__PURE__*/_jsxDEV(Alert, {\n          severity: showMessage.type,\n          children: showMessage.msg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 43\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 12\n  }, this);\n};\n\n_s(AddOrEditGroup, \"mvNoDEoN2ZEZC8xzgkZ4Ts/BlYE=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = AddOrEditGroup;\nexport default AddOrEditGroup;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddOrEditGroup\");","map":{"version":3,"sources":["F:/React code/diagnostic/src/pages/Master/Configuration/Account/group/form.js"],"names":["React","useEffect","useState","TextField","Button","Alert","useDispatch","useSelector","clearAccountGroupInfoResponse","clearSelectedConfigGroup","updateAccountGroupInfo","AddOrEditGroup","props","dispatch","getGroupInfo","state","ConfigurationMaster","groupInfo","updateGroupInfoResponse","groupResponse","groupValues","setGroupValues","showMessage","setMessage","type","msg","onSave","temp","user_id","localStorage","getItem","user_name","handleOnChange","event","target","name","value","onCancelClick","onClose","valid","setTimeout","group_id","group_name","description"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { TextField,Button } from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { clearAccountGroupInfoResponse, clearSelectedConfigGroup , updateAccountGroupInfo } from '../../../../../_redux/actions/masters/configuration.action';\r\n\r\n\r\nconst AddOrEditGroup = (props) => {\r\n    const dispatch = useDispatch();\r\n    const getGroupInfo = useSelector((state) => state.ConfigurationMaster.groupInfo);\r\n    const updateGroupInfoResponse = useSelector((state) => state.ConfigurationMaster.groupResponse);\r\n    const [groupValues , setGroupValues] = useState({});\r\n    const [showMessage , setMessage] = useState({\r\n        type:\"\",\r\n        msg:\"\"\r\n    })\r\n\r\n    useEffect(() => {\r\n        if(getGroupInfo){\r\n            setGroupValues(getGroupInfo);\r\n        }\r\n    },[getGroupInfo]);\r\n\r\n     const onSave = () => {\r\n        var temp = {...groupValues};\r\n        temp.user_id = localStorage.getItem(\"userId\");\r\n        temp.user_name = localStorage.getItem(\"userName\");\r\n        dispatch(updateAccountGroupInfo(temp));\r\n    }\r\n\r\n\r\n    const handleOnChange = (event) => {\r\n        setGroupValues({...groupValues,\r\n            [event.target.name]:event.target.value\r\n        });\r\n    }\r\n\r\n    const onCancelClick = () => {\r\n        dispatch(clearSelectedConfigGroup());\r\n        props.onClose(0);\r\n    }\r\n\r\n   \r\n    useEffect(() => {\r\n        if(updateGroupInfoResponse){\r\n             setMessage({...showMessage,\r\n                type:updateGroupInfoResponse.valid ? \"success\" : \"danger\",\r\n                msg:getGroupInfo ? \"Group updated successfully\" : \"Group Saved successfully\"\r\n            });\r\n            setTimeout(() => {\r\n                setMessage({\r\n                    type:\"\",\r\n                    msg:\"\"\r\n                });\r\n                props.onClose(0);\r\n            }, 2000);\r\n            dispatch(clearAccountGroupInfoResponse());\r\n        }\r\n    },[updateGroupInfoResponse]);\r\n// \r\n\r\n    return <React.Fragment>\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\"Group ID\" name=\"group_id\" value={groupValues.group_id} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\"/>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\"Group Name\" name=\"group_name\" value={groupValues.group_name} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\"/>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <TextField multiline label=\"Description\" value={groupValues.description} onChange={handleOnChange} name=\"description\" fullWidth variant=\"outlined\" size=\"small\"/>\r\n                </div>\r\n                <div className=\"col-md-12 mt-3 text-right\">\r\n                    <Button variant=\"contained\" className=\"mr-2\" onClick={onCancelClick} disableElevation>Cancel</Button>\r\n                    <Button variant=\"contained\" onClick={onSave} color=\"primary\" disableElevation>Save</Button>\r\n                </div>\r\n                {showMessage.type != \"\" ? <Alert severity={showMessage.type}>{showMessage.msg}</Alert> : null}\r\n            </div>\r\n        </div>\r\n    </React.Fragment>\r\n}\r\n\r\nexport default AddOrEditGroup;"]},"metadata":{},"sourceType":"module"}