{"ast":null,"code":"import { userService } from \"../../../services\";\nexport const AccountMasterController = {\n  browseAccountData,\n  getAccountMasterFilters,\n  getSelectedAccountDetails,\n  accountHideUpdate,\n  updateAccountVerified\n};\n\nasync function browseAccountData(filters, params) {\n  try {\n    let apiEndpoint = `Account/AccountMasterBrowse?filter_value=${params.filter_value}&page_number=${params.pageNo}&page_size=${params.pageSize}&sort_column=${params.sort_column}&sort_order=${params.sort_order}`;\n    let response = await userService.post(apiEndpoint, filters);\n\n    if (response) {\n      return response.data;\n    } else {\n      if (response.data.status !== 500) {\n        alert(response.data);\n      }\n\n      return null;\n    }\n  } catch (error) {\n    console.log(\"error\", error);\n    return null;\n  }\n}\n\nasync function getAccountMasterFilters() {\n  try {\n    let apiEndpoint = `Dropdown/AccountMasterDropdown`;\n    let response = await userService.post(apiEndpoint, {});\n\n    if (response) {\n      return response.data;\n    } else {\n      if (response.data.status !== 500) {\n        alert(response.data);\n      }\n\n      return null;\n    }\n  } catch (error) {\n    console.log(\"error\", error);\n    return null;\n  }\n}\n\nasync function getSelectedAccountDetails(payload) {\n  try {\n    let apiEndpoint = `Account/AccountMasterPreview`;\n    let response = await userService.post(apiEndpoint, payload);\n\n    if (response) {\n      return response.data;\n    } else {\n      if (response.data.status !== 500) {\n        alert(response.data);\n      }\n\n      return null;\n    }\n  } catch (error) {\n    console.log(\"error\", error);\n    return null;\n  }\n}\n\nasync function accountHideUpdate(payload) {\n  try {\n    let apiEndpoint = `Account/UpdateAccountHide`;\n    let response = await userService.post(apiEndpoint, payload);\n\n    if (response) {\n      return response.data;\n    } else {\n      if (response.data.status !== 500) {\n        alert(response.data);\n      }\n\n      return null;\n    }\n  } catch (error) {\n    console.log(\"error\", error);\n    return null;\n  }\n}\n\nasync function updateAccountVerified(payload) {\n  try {\n    let apiEndpoint = `Account/UpdateAccountEdit`;\n    let response = await userService.post(apiEndpoint, payload);\n\n    if (response) {\n      return response.data;\n    } else {\n      if (response.data.status !== 500) {\n        alert(response.data);\n      }\n\n      return null;\n    }\n  } catch (error) {\n    console.log(\"error\", error);\n    return null;\n  }\n}","map":{"version":3,"sources":["F:/React code/diagnostic/src/_redux/controller/Masters/account.controller.js"],"names":["userService","AccountMasterController","browseAccountData","getAccountMasterFilters","getSelectedAccountDetails","accountHideUpdate","updateAccountVerified","filters","params","apiEndpoint","filter_value","pageNo","pageSize","sort_column","sort_order","response","post","data","status","alert","error","console","log","payload"],"mappings":"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","sourcesContent":["import { userService } from \"../../../services\";\r\n\r\nexport const AccountMasterController = {\r\n    browseAccountData,\r\n    getAccountMasterFilters,\r\n    getSelectedAccountDetails,\r\n    accountHideUpdate,\r\n    updateAccountVerified\r\n}\r\n\r\n\r\nasync function browseAccountData(filters,params) {\r\n    try {\r\n        let apiEndpoint = `Account/AccountMasterBrowse?filter_value=${params.filter_value}&page_number=${params.pageNo}&page_size=${params.pageSize}&sort_column=${params.sort_column}&sort_order=${params.sort_order}`;\r\n\r\n        let response = await userService.post(apiEndpoint,filters);\r\n        \r\n        if (response) {\r\n            return (response.data);\r\n        }\r\n        else {\r\n            if (response.data.status !== 500) {\r\n                alert(response.data);\r\n            }\r\n            return null;\r\n        }\r\n    }\r\n    catch (error) {\r\n        console.log(\"error\", error);\r\n        return null;\r\n    }\r\n}\r\n \r\n\r\nasync function getAccountMasterFilters() {\r\n    try {\r\n        let apiEndpoint = `Dropdown/AccountMasterDropdown`;\r\n\r\n        let response = await userService.post(apiEndpoint,{});\r\n        \r\n        if (response) {\r\n            return (response.data);\r\n        }\r\n        else {\r\n            if (response.data.status !== 500) {\r\n                alert(response.data);\r\n            }\r\n            return null;\r\n        }\r\n    }\r\n    catch (error) {\r\n        console.log(\"error\", error);\r\n        return null;\r\n    }\r\n}\r\n \r\nasync function getSelectedAccountDetails(payload) {\r\n    try {\r\n        let apiEndpoint = `Account/AccountMasterPreview`;\r\n\r\n        let response = await userService.post(apiEndpoint,payload);\r\n        \r\n        if (response) {\r\n            return (response.data);\r\n        }\r\n        else {\r\n            if (response.data.status !== 500) {\r\n                alert(response.data);\r\n            }\r\n            return null;\r\n        }\r\n    }\r\n    catch (error) {\r\n        console.log(\"error\", error);\r\n        return null;\r\n    }\r\n}\r\n \r\n\r\nasync function accountHideUpdate(payload) {\r\n    try {\r\n        let apiEndpoint = `Account/UpdateAccountHide`;\r\n\r\n        let response = await userService.post(apiEndpoint,payload);\r\n        \r\n        if (response) {\r\n            return (response.data);\r\n        }\r\n        else {\r\n            if (response.data.status !== 500) {\r\n                alert(response.data);\r\n            }\r\n            return null;\r\n        }\r\n    }\r\n    catch (error) {\r\n        console.log(\"error\", error);\r\n        return null;\r\n    }\r\n}\r\n\r\nasync function updateAccountVerified(payload) {\r\n    try {\r\n        let apiEndpoint = `Account/UpdateAccountEdit`;\r\n\r\n        let response = await userService.post(apiEndpoint,payload);\r\n        \r\n        if (response) {\r\n            return (response.data);\r\n        }\r\n        else {\r\n            if (response.data.status !== 500) {\r\n                alert(response.data);\r\n            }\r\n            return null;\r\n        }\r\n    }\r\n    catch (error) {\r\n        console.log(\"error\", error);\r\n        return null;\r\n    }\r\n}\r\n "]},"metadata":{},"sourceType":"module"}