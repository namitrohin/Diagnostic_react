{"ast":null,"code":"var _jsxFileName = \"F:\\\\React code\\\\diagnostic\\\\src\\\\pages\\\\Master\\\\Configuration\\\\Account\\\\pincode\\\\form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { TextField, Button } from '@material-ui/core';\nimport { Alert } from '@material-ui/lab';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { clearPincodeInfoResponse, clearSelectedPincode, updatePincodeInfo } from '../../../../../_redux/actions/masters/configuration.action';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddOrEditPincode = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const getPincodeInfo = useSelector(state => state.ConfigurationMaster.pincodeInfo);\n  const updatePincodeInfoResponse = useSelector(state => state.ConfigurationMaster.pincodeResponse);\n  const [formValues, setFormValues] = useState({});\n  const [showMessage, setMessage] = useState({\n    type: \"\",\n    msg: \"\"\n  });\n  useEffect(() => {\n    if (getPincodeInfo) {\n      setFormValues(getPincodeInfo);\n    }\n  }, [getPincodeInfo]);\n\n  const onSave = () => {\n    var temp = { ...formValues\n    };\n    temp.user_id = localStorage.getItem(\"userId\");\n    temp.user_name = localStorage.getItem(\"userName\");\n    dispatch(updatePincodeInfo(temp));\n  };\n\n  const handleOnChange = event => {\n    setFormValues({ ...formValues,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const onCancelClick = () => {\n    dispatch(clearSelectedPincode());\n    props.onClose(0);\n  };\n\n  useEffect(() => {\n    console.log(updatePincodeInfoResponse);\n\n    if (updatePincodeInfoResponse) {\n      setMessage({ ...showMessage,\n        type: updatePincodeInfoResponse.valid ? \"success\" : \"error\",\n        msg: updatePincodeInfoResponse.valid ? getPincodeInfo ? \"Pincode updated successfully\" : \"Pincode Saved successfully\" : \"Something went wrong\"\n      });\n      setTimeout(() => {\n        setMessage({\n          type: \"\",\n          msg: \"\"\n        });\n        props.onClose(0);\n      }, 2000);\n      dispatch(clearPincodeInfoResponse());\n    }\n  }, [updatePincodeInfoResponse]); // \n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-4 mb-3\",\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Pincode\",\n            type: \"number\",\n            name: \"pin_code_no\",\n            value: formValues.pin_code_no,\n            onChange: handleOnChange,\n            fullWidth: true,\n            variant: \"outlined\",\n            size: \"small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-4\",\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"City\",\n            name: \"city\",\n            value: formValues.city,\n            onChange: handleOnChange,\n            fullWidth: true,\n            variant: \"outlined\",\n            size: \"small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-4\",\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"State\",\n            name: \"state\",\n            value: formValues.state,\n            onChange: handleOnChange,\n            fullWidth: true,\n            variant: \"outlined\",\n            size: \"small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-4\",\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"District\",\n            name: \"district\",\n            value: formValues.district,\n            onChange: handleOnChange,\n            fullWidth: true,\n            variant: \"outlined\",\n            size: \"small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-4\",\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            multiline: true,\n            label: \"Description\",\n            name: \"description\",\n            value: formValues.description,\n            onChange: handleOnChange,\n            fullWidth: true,\n            variant: \"outlined\",\n            size: \"small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-12 mt-3 text-right\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            className: \"mr-2\",\n            onClick: onCancelClick,\n            disableElevation: true,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            onClick: onSave,\n            color: \"primary\",\n            disableElevation: true,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }, this), showMessage.type != \"\" ? /*#__PURE__*/_jsxDEV(Alert, {\n          severity: showMessage.type,\n          children: showMessage.msg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 43\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 12\n  }, this);\n};\n\n_s(AddOrEditPincode, \"Ocrmou9teGvcFqes58VbN68WhlE=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = AddOrEditPincode;\nexport default AddOrEditPincode;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddOrEditPincode\");","map":{"version":3,"sources":["F:/React code/diagnostic/src/pages/Master/Configuration/Account/pincode/form.js"],"names":["React","useEffect","useState","TextField","Button","Alert","useDispatch","useSelector","clearPincodeInfoResponse","clearSelectedPincode","updatePincodeInfo","AddOrEditPincode","props","dispatch","getPincodeInfo","state","ConfigurationMaster","pincodeInfo","updatePincodeInfoResponse","pincodeResponse","formValues","setFormValues","showMessage","setMessage","type","msg","onSave","temp","user_id","localStorage","getItem","user_name","handleOnChange","event","target","name","value","onCancelClick","onClose","console","log","valid","setTimeout","pin_code_no","city","district","description"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { TextField,Button } from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {  clearPincodeInfoResponse,  clearSelectedPincode, updatePincodeInfo } from '../../../../../_redux/actions/masters/configuration.action';\r\n\r\n\r\nconst AddOrEditPincode = (props) => {\r\n    const dispatch = useDispatch();\r\n    const getPincodeInfo = useSelector((state) => state.ConfigurationMaster.pincodeInfo);\r\n    const updatePincodeInfoResponse = useSelector((state) => state.ConfigurationMaster.pincodeResponse);\r\n    const [formValues , setFormValues] = useState({});\r\n    const [showMessage , setMessage] = useState({\r\n        type:\"\",\r\n        msg:\"\"\r\n    })\r\n\r\n    useEffect(() => {\r\n         \r\n        if(getPincodeInfo){\r\n            setFormValues(getPincodeInfo);\r\n        }\r\n    },[getPincodeInfo]);\r\n\r\n     const onSave = () => {\r\n        var temp = {...formValues};\r\n        temp.user_id = localStorage.getItem(\"userId\");\r\n        temp.user_name = localStorage.getItem(\"userName\");\r\n        dispatch(updatePincodeInfo(temp));\r\n    }\r\n\r\n\r\n    const handleOnChange = (event) => {\r\n        setFormValues({...formValues,\r\n            [event.target.name]:event.target.value\r\n        });\r\n    }\r\n\r\n    const onCancelClick = () => {\r\n        dispatch(clearSelectedPincode());\r\n        props.onClose(0);\r\n    }\r\n\r\n   \r\n    useEffect(() => {\r\n        console.log(updatePincodeInfoResponse)\r\n        if(updatePincodeInfoResponse){\r\n             setMessage({...showMessage,\r\n                type:updatePincodeInfoResponse.valid ? \"success\" : \"error\",\r\n                msg:updatePincodeInfoResponse.valid ? getPincodeInfo ? \"Pincode updated successfully\" : \"Pincode Saved successfully\" : \"Something went wrong\"\r\n            });\r\n            setTimeout(() => {\r\n                setMessage({\r\n                    type:\"\",\r\n                    msg:\"\"\r\n                });\r\n                props.onClose(0);\r\n            }, 2000);\r\n            dispatch(clearPincodeInfoResponse());\r\n        }\r\n    },[updatePincodeInfoResponse]);\r\n// \r\n\r\n    return <React.Fragment>\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-4 mb-3\">\r\n                    <TextField label=\"Pincode\" type=\"number\" name=\"pin_code_no\" value={formValues.pin_code_no} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\"/>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\"City\" name=\"city\" value={formValues.city} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\"/>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\"State\" name=\"state\" value={formValues.state} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\"/>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\"District\" name=\"district\" value={formValues.district} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\"/>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <TextField multiline label=\"Description\" name=\"description\" value={formValues.description} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\"/>\r\n                </div>\r\n                 \r\n                <div className=\"col-md-12 mt-3 text-right\">\r\n                    <Button variant=\"contained\" className=\"mr-2\" onClick={onCancelClick} disableElevation>Cancel</Button>\r\n                    <Button variant=\"contained\" onClick={onSave} color=\"primary\" disableElevation>Save</Button>\r\n                </div>\r\n                {showMessage.type != \"\" ? <Alert severity={showMessage.type}>{showMessage.msg}</Alert> : null}\r\n            </div>\r\n        </div>\r\n    </React.Fragment>\r\n}\r\n\r\nexport default AddOrEditPincode;"]},"metadata":{},"sourceType":"module"}