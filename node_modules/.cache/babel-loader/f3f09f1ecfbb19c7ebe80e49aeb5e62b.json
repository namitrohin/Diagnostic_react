{"ast":null,"code":"import _defineProperty from\"F:/React code/diagnostic/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"F:/React code/diagnostic/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"F:/React code/diagnostic/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import{TextField,Button}from'@material-ui/core';import{Alert}from'@material-ui/lab';import{useDispatch,useSelector}from'react-redux';import{clearAccountGroupInfoResponse,clearSelectedConfigGroup,updateAccountGroupInfo}from'../../../../../_redux/actions/masters/configuration.action';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var AddOrEditGroup=function AddOrEditGroup(props){var dispatch=useDispatch();var getGroupInfo=useSelector(function(state){return state.ConfigurationMaster.groupInfo;});var updateGroupInfoResponse=useSelector(function(state){return state.ConfigurationMaster.groupResponse;});var _useState=useState({}),_useState2=_slicedToArray(_useState,2),groupValues=_useState2[0],setGroupValues=_useState2[1];var _useState3=useState({type:\"\",msg:\"\"}),_useState4=_slicedToArray(_useState3,2),showMessage=_useState4[0],setMessage=_useState4[1];useEffect(function(){if(getGroupInfo){setGroupValues(getGroupInfo);}},[getGroupInfo]);var onSave=function onSave(){var temp=_objectSpread({},groupValues);temp.user_id=localStorage.getItem(\"userId\");temp.user_name=localStorage.getItem(\"userName\");dispatch(updateAccountGroupInfo(temp));};var handleOnChange=function handleOnChange(event){setGroupValues(_objectSpread(_objectSpread({},groupValues),{},_defineProperty({},event.target.name,event.target.value)));};var onCancelClick=function onCancelClick(){dispatch(clearSelectedConfigGroup());props.onClose(0);};useEffect(function(){if(updateGroupInfoResponse){setMessage(_objectSpread(_objectSpread({},showMessage),{},{type:updateGroupInfoResponse.valid?\"success\":\"danger\",msg:getGroupInfo?\"Group updated successfully\":\"Group Saved successfully\"}));setTimeout(function(){setMessage({type:\"\",msg:\"\"});props.onClose(0);},2000);dispatch(clearAccountGroupInfoResponse());}},[updateGroupInfoResponse]);// \nreturn/*#__PURE__*/_jsx(React.Fragment,{children:/*#__PURE__*/_jsx(\"div\",{className:\"container-fluid\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-md-4\",children:/*#__PURE__*/_jsx(TextField,{label:\"Group ID\",name:\"group_id\",value:groupValues.group_id,onChange:handleOnChange,fullWidth:true,variant:\"outlined\",size:\"small\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-md-4\",children:/*#__PURE__*/_jsx(TextField,{label:\"Group Name\",name:\"group_name\",value:groupValues.group_name,onChange:handleOnChange,fullWidth:true,variant:\"outlined\",size:\"small\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-md-4\",children:/*#__PURE__*/_jsx(TextField,{multiline:true,label:\"Description\",value:groupValues.description,onChange:handleOnChange,name:\"description\",fullWidth:true,variant:\"outlined\",size:\"small\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"col-md-12 mt-3 text-right\",children:[/*#__PURE__*/_jsx(Button,{variant:\"contained\",className:\"mr-2\",onClick:onCancelClick,disableElevation:true,children:\"Cancel\"}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",onClick:onSave,color:\"primary\",disableElevation:true,children:\"Save\"})]}),showMessage.type!=\"\"?/*#__PURE__*/_jsx(Alert,{severity:showMessage.type,children:showMessage.msg}):null]})})});};export default AddOrEditGroup;","map":{"version":3,"sources":["F:/React code/diagnostic/src/pages/Master/Configuration/Account/group/form.js"],"names":["React","useEffect","useState","TextField","Button","Alert","useDispatch","useSelector","clearAccountGroupInfoResponse","clearSelectedConfigGroup","updateAccountGroupInfo","AddOrEditGroup","props","dispatch","getGroupInfo","state","ConfigurationMaster","groupInfo","updateGroupInfoResponse","groupResponse","groupValues","setGroupValues","type","msg","showMessage","setMessage","onSave","temp","user_id","localStorage","getItem","user_name","handleOnChange","event","target","name","value","onCancelClick","onClose","valid","setTimeout","group_id","group_name","description"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { TextField,Button } from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { clearAccountGroupInfoResponse, clearSelectedConfigGroup , updateAccountGroupInfo } from '../../../../../_redux/actions/masters/configuration.action';\r\n\r\n\r\nconst AddOrEditGroup = (props) => {\r\n    const dispatch = useDispatch();\r\n    const getGroupInfo = useSelector((state) => state.ConfigurationMaster.groupInfo);\r\n    const updateGroupInfoResponse = useSelector((state) => state.ConfigurationMaster.groupResponse);\r\n    const [groupValues , setGroupValues] = useState({});\r\n    const [showMessage , setMessage] = useState({\r\n        type:\"\",\r\n        msg:\"\"\r\n    })\r\n\r\n    useEffect(() => {\r\n        if(getGroupInfo){\r\n            setGroupValues(getGroupInfo);\r\n        }\r\n    },[getGroupInfo]);\r\n\r\n     const onSave = () => {\r\n        var temp = {...groupValues};\r\n        temp.user_id = localStorage.getItem(\"userId\");\r\n        temp.user_name = localStorage.getItem(\"userName\");\r\n        dispatch(updateAccountGroupInfo(temp));\r\n    }\r\n\r\n\r\n    const handleOnChange = (event) => {\r\n        setGroupValues({...groupValues,\r\n            [event.target.name]:event.target.value\r\n        });\r\n    }\r\n\r\n    const onCancelClick = () => {\r\n        dispatch(clearSelectedConfigGroup());\r\n        props.onClose(0);\r\n    }\r\n\r\n   \r\n    useEffect(() => {\r\n        if(updateGroupInfoResponse){\r\n             setMessage({...showMessage,\r\n                type:updateGroupInfoResponse.valid ? \"success\" : \"danger\",\r\n                msg:getGroupInfo ? \"Group updated successfully\" : \"Group Saved successfully\"\r\n            });\r\n            setTimeout(() => {\r\n                setMessage({\r\n                    type:\"\",\r\n                    msg:\"\"\r\n                });\r\n                props.onClose(0);\r\n            }, 2000);\r\n            dispatch(clearAccountGroupInfoResponse());\r\n        }\r\n    },[updateGroupInfoResponse]);\r\n// \r\n\r\n    return <React.Fragment>\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\"Group ID\" name=\"group_id\" value={groupValues.group_id} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\"/>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\"Group Name\" name=\"group_name\" value={groupValues.group_name} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\"/>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <TextField multiline label=\"Description\" value={groupValues.description} onChange={handleOnChange} name=\"description\" fullWidth variant=\"outlined\" size=\"small\"/>\r\n                </div>\r\n                <div className=\"col-md-12 mt-3 text-right\">\r\n                    <Button variant=\"contained\" className=\"mr-2\" onClick={onCancelClick} disableElevation>Cancel</Button>\r\n                    <Button variant=\"contained\" onClick={onSave} color=\"primary\" disableElevation>Save</Button>\r\n                </div>\r\n                {showMessage.type != \"\" ? <Alert severity={showMessage.type}>{showMessage.msg}</Alert> : null}\r\n            </div>\r\n        </div>\r\n    </React.Fragment>\r\n}\r\n\r\nexport default AddOrEditGroup;"]},"metadata":{},"sourceType":"module"}