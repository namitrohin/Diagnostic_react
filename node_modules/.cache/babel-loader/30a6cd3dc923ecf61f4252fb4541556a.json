{"ast":null,"code":"var _jsxFileName = \"F:\\\\React code\\\\diagnostic\\\\src\\\\components\\\\CustomPagination.js\",\n    _s = $RefreshSig$();\n\nimport { Pagination } from \"@mui/material\";\nimport { useGridApiContext, useGridSelector, DataGrid, gridPageCountSelector, gridPageSelector } from \"@mui/x-data-grid\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CustomPagination() {\n  _s();\n\n  const apiRef = useGridApiContext();\n  const page = useGridSelector(apiRef, gridPageSelector);\n  const pageCount = useGridSelector(apiRef, gridPageCountSelector);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input_frame\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"mr-2\",\n        children: \"Go to Page:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        defaultValue: page,\n        onChange: event => {\n          if (parseInt(event.target.value) > 0) {\n            apiRef === null || apiRef === void 0 ? void 0 : apiRef.current.setPage(parseInt(event.target.value));\n          }\n        },\n        style: {\n          width: 50\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      color: \"primary\",\n      className: \"justify-content-end\",\n      count: pageCount,\n      page: page,\n      onChange: (event, value) => {\n        apiRef === null || apiRef === void 0 ? void 0 : apiRef.current.setPage(value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CustomPagination, \"aBxtusrwFI9QGPx0kesDH2nZ6TM=\", false, function () {\n  return [useGridApiContext, useGridSelector, useGridSelector];\n});\n\n_c = CustomPagination;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomPagination\");","map":{"version":3,"sources":["F:/React code/diagnostic/src/components/CustomPagination.js"],"names":["Pagination","useGridApiContext","useGridSelector","DataGrid","gridPageCountSelector","gridPageSelector","React","CustomPagination","apiRef","page","pageCount","event","parseInt","target","value","current","setPage","width"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,eAA3B;AACA,SACEC,iBADF,EAEEC,eAFF,EAGEC,QAHF,EAIEC,qBAJF,EAKEC,gBALF,QAMO,kBANP;AAOA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,eAAe,SAASC,gBAAT,GAA4B;AAAA;;AACzC,QAAMC,MAAM,GAAGP,iBAAiB,EAAhC;AAEA,QAAMQ,IAAI,GAAGP,eAAe,CAACM,MAAD,EAASH,gBAAT,CAA5B;AACA,QAAMK,SAAS,GAAGR,eAAe,CAACM,MAAD,EAASJ,qBAAT,CAAjC;AAEA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,4BAeE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,8BACE;AAAO,QAAA,SAAS,EAAC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,YAAY,EAAEK,IAFhB;AAGE,QAAA,QAAQ,EAAGE,KAAD,IAAW;AACnB,cAAIC,QAAQ,CAACD,KAAK,CAACE,MAAN,CAAaC,KAAd,CAAR,GAA+B,CAAnC,EAAsC;AACpCN,YAAAA,MAAM,SAAN,IAAAA,MAAM,WAAN,YAAAA,MAAM,CAAEO,OAAR,CAAgBC,OAAhB,CAAwBJ,QAAQ,CAACD,KAAK,CAACE,MAAN,CAAaC,KAAd,CAAhC;AACD;AACF,SAPH;AAQE,QAAA,KAAK,EAAE;AAAEG,UAAAA,KAAK,EAAE;AAAT;AART;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAfF,eA6BE,QAAC,UAAD;AACE,MAAA,KAAK,EAAC,SADR;AAEE,MAAA,SAAS,EAAC,qBAFZ;AAGE,MAAA,KAAK,EAAEP,SAHT;AAIE,MAAA,IAAI,EAAED,IAJR;AAKE,MAAA,QAAQ,EAAE,CAACE,KAAD,EAAQG,KAAR,KAAkB;AAC1BN,QAAAA,MAAM,SAAN,IAAAA,MAAM,WAAN,YAAAA,MAAM,CAAEO,OAAR,CAAgBC,OAAhB,CAAwBF,KAAxB;AACD;AAPH;AAAA;AAAA;AAAA;AAAA,YA7BF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyCD;;GA/CuBP,gB;UACPN,iB,EAEFC,e,EACKA,e;;;KAJIK,gB","sourcesContent":["import { Pagination } from \"@mui/material\";\r\nimport {\r\n  useGridApiContext,\r\n  useGridSelector,\r\n  DataGrid,\r\n  gridPageCountSelector,\r\n  gridPageSelector,\r\n} from \"@mui/x-data-grid\";\r\nimport React from \"react\";\r\n\r\nexport default function CustomPagination() {\r\n  const apiRef = useGridApiContext();\r\n\r\n  const page = useGridSelector(apiRef, gridPageSelector);\r\n  const pageCount = useGridSelector(apiRef, gridPageCountSelector);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {/* <div className=\"input_frame mr-3\">\r\n        <label className=\"mr-2\">Row Per Page:</label>\r\n        <select\r\n          onChange={(event) => apiRef.current.setPageSize(event.target.value)}\r\n        >\r\n          {state.options.rowsPerPageOptions.map((row, index) => {\r\n            return (\r\n              <option key={\"page\" + index} value={row}>\r\n                {row}\r\n              </option>\r\n            );\r\n          })}\r\n        </select>\r\n      </div> */}\r\n      <div className=\"input_frame\">\r\n        <label className=\"mr-2\">Go to Page:</label>\r\n        <input\r\n          type=\"number\"\r\n          defaultValue={page}\r\n          onChange={(event) => {\r\n            if (parseInt(event.target.value) > 0) {\r\n              apiRef?.current.setPage(parseInt(event.target.value));\r\n            }\r\n          }}\r\n          style={{ width: 50 }}\r\n        />\r\n      </div>\r\n\r\n      <Pagination\r\n        color=\"primary\"\r\n        className=\"justify-content-end\"\r\n        count={pageCount}\r\n        page={page}\r\n        onChange={(event, value) => {\r\n          apiRef?.current.setPage(value);\r\n        }}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}