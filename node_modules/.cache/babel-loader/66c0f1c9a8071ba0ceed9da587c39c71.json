{"ast":null,"code":"var _jsxFileName = \"F:\\\\React code\\\\diagnostic\\\\src\\\\pages\\\\Master\\\\Accounts_Master\\\\browse.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { DataGrid } from \"@mui/x-data-grid\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getAccountMasterFiltersList, searchAccountMasterData, setAccountHide, setAccountVerified } from \"../../../_redux/actions/masters/account.action\";\nimport { Checkbox, FormControl, InputLabel, MenuItem, Select, TextField, Tooltip, withStyles, Button, FormControlLabel } from \"@material-ui/core\";\nimport CustomPagination from \"../../../components/CustomPagination\";\nimport CustomNoRowsOverlay from \"../../../components/customRowComponent\";\nimport ActionButtons from \"../../../components/action-buttons\";\nimport { selectedAccountId } from \"../../../_redux/actions/masters/all.action\";\nimport { getBrowseUserRight, showErrorToast } from \"../../../components/common\";\nimport { CommonController } from \"../../../_redux/controller/common.controller\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LightTooltip = withStyles(theme => ({\n  tooltip: {\n    backgroundColor: theme.palette.common.white,\n    color: \"rgba(0, 0, 0, 0.87)\",\n    boxShadow: theme.shadows[1],\n    fontSize: 11\n  }\n}))(Tooltip);\nconst user_id = {\n  user_id: localStorage.getItem(\"userId\")\n};\n\nconst BrowseAccount = ({\n  onEdit,\n  onPreview,\n  accountType\n}) => {\n  _s();\n\n  console.log(accountType);\n  const dispatch = useDispatch();\n  const getuserRightListResponse = useSelector(state => state.common.userRightList);\n  const [browseListData, setBrowseListData] = useState([]);\n  const [totalRecord, setTotalRecords] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [accountMasterFilter, setAccountMasterFilter] = useState({\n    region_name: \"\",\n    group_name: \"\",\n    verified: \"\",\n    mark_engg: \"\",\n    account_type: accountType\n  });\n  const [tempVerifed, setTempVerified] = useState([]);\n  const [regionList, setRegionList] = useState([]);\n  const [groupList, setGroupList] = useState([]);\n  const [enggList, setEnggList] = useState([]);\n  const [params, setParams] = useState({\n    pageNo: 1,\n    pageSize: 15,\n    filter_value: \"\",\n    sort_column: \"\",\n    sort_order: \"\"\n  });\n  let columns = [{\n    field: \"id\",\n    headerName: \"ID\",\n    width: 70,\n    hide: false\n  }, {\n    field: \"region\",\n    headerName: \"Region\",\n    width: 180,\n    hide: false\n  }, {\n    field: \"short_name\",\n    headerName: \"Short Name\",\n    renderCell: params => /*#__PURE__*/_jsxDEV(LightTooltip, {\n      title: params.row.short_name,\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: params.row.short_name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this),\n    width: 200,\n    hide: false\n  }, {\n    field: \"company\",\n    headerName: \"Company\",\n    renderCell: params => /*#__PURE__*/_jsxDEV(LightTooltip, {\n      title: params.row.company,\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: params.row.company\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this),\n    width: 180,\n    hide: false\n  }, {\n    field: \"address\",\n    headerName: \"Address\",\n    renderCell: params => /*#__PURE__*/_jsxDEV(LightTooltip, {\n      title: params.row.address,\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: params.row.address\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }, this),\n    width: 300,\n    hide: false\n  }, {\n    field: \"pin\",\n    headerName: \"Pin\",\n    width: 80,\n    hide: false\n  }, {\n    field: \"mobile\",\n    headerName: \"Mobile\",\n    renderCell: params => /*#__PURE__*/_jsxDEV(LightTooltip, {\n      title: params.row.mobile,\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: params.row.mobile\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }, this),\n    width: 150,\n    hide: false\n  }, {\n    field: \"email\",\n    headerName: \"Email\",\n    renderCell: params => /*#__PURE__*/_jsxDEV(LightTooltip, {\n      title: params.row.email,\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: params.row.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }, this),\n    width: 200,\n    hide: false\n  }, {\n    field: \"verified\",\n    headerName: \"Verified\",\n    renderCell: params => /*#__PURE__*/_jsxDEV(FormControlLabel, {\n      className: \"formControlLabel\",\n      control: /*#__PURE__*/_jsxDEV(Checkbox, {\n        defaultChecked: params.row.edit === \"True\",\n        size: \"small\",\n        color: \"primary\",\n        onChange: event => updateVerifiedStatus(event.target.checked, params.id),\n        inputProps: {\n          \"aria-label\": \"checkbox with small size\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 13\n      }, this),\n      label: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"font_13 \" + (params.row.edit === \"True\" || tempVerifed.indexOf(params.row.id) > -1 ? \"text-success\" : \"text-danger\"),\n        children: params.row.edit === \"True\" || tempVerifed.indexOf(params.row.id) > -1 ? \"Verified\" : \"Not Verified\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }, this),\n    width: 120,\n    hide: false\n  }, {\n    field: \"hide\",\n    headerName: \"Hide\",\n    renderCell: params => /*#__PURE__*/_jsxDEV(Checkbox, {\n      size: \"small\",\n      color: \"primary\",\n      defaultChecked: params.row.hide === \"True\",\n      onChange: event => updateHideStatus(event.target.checked, params.id) // onChange={() => console.log(params.id)}\n      ,\n      inputProps: {\n        \"aria-label\": \"checkbox with small size\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 9\n    }, this),\n    width: 80,\n    hide: false\n  }, {\n    field: \"mark_engg\",\n    headerName: \"Markt. Engg\",\n    renderCell: params => /*#__PURE__*/_jsxDEV(LightTooltip, {\n      title: params.row.mark_engg,\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: params.row.mark_engg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 9\n    }, this),\n    width: 150,\n    hide: false\n  }, {\n    field: \"\",\n    headerName: \"Actions\",\n    renderCell: params => {\n      var _getBrowseUserRight, _getBrowseUserRight2;\n\n      return /*#__PURE__*/_jsxDEV(ActionButtons, {\n        onPreview: ((_getBrowseUserRight = getBrowseUserRight(getuserRightListResponse)) === null || _getBrowseUserRight === void 0 ? void 0 : _getBrowseUserRight.level) == 1 ? () => handleEdit(params.row.id) : null,\n        onEdit: ((_getBrowseUserRight2 = getBrowseUserRight(getuserRightListResponse)) === null || _getBrowseUserRight2 === void 0 ? void 0 : _getBrowseUserRight2.level) == 1 ? () => handleEdit(params.row.id) : null // onDelete={\n        //   getBrowseUserRight(getuserRightListResponse)?.delete_right == \"True\"\n        //     ? () => handleDeleteRow(params.row.id)\n        //     : null\n        // }\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this);\n    },\n    width: 120\n  }, {\n    field: \"datetime\",\n    headerName: \"Date Time\",\n    width: 120,\n    hide: false\n  }];\n\n  const handleFilters = event => {\n    setAccountMasterFilter({ ...accountMasterFilter,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const handleParams = event => {\n    setParams({ ...params,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  useEffect(() => {\n    // getUserFilter();\n    getBrowseListData();\n    getFilterListData();\n  }, []);\n\n  const getBrowseListData = async () => {\n    setLoading(true);\n    await CommonController.commonApiCall(\"Account/AccountMasterBrowse\", params, accountMasterFilter).then(data => {\n      setBrowseListData(data.data);\n      setTotalRecords(data.recordsFiltered);\n    }).catch(err => {\n      showErrorToast(err);\n    });\n    setLoading(false);\n  };\n\n  const getFilterListData = async () => {\n    await CommonController.commonApiCallFilter(\"Dropdown/AccountMasterDropdown\", user_id, \"post\").then(data => {\n      setRegionList(data.regionList);\n      setGroupList(data.groupList);\n      setEnggList(data.employeeList);\n    }).catch(err => {\n      showErrorToast(err);\n    });\n  };\n\n  useEffect(() => {\n    getBrowseListData();\n  }, [params, accountMasterFilter]);\n\n  const handlePageSizeChange = param => {\n    setParams({ ...params,\n      pageSize: param\n    });\n  };\n\n  const handlePageChange = param => {\n    setParams({ ...params,\n      pageNo: param\n    });\n  };\n\n  const updateHideStatus = (val, id) => {\n    const param = {\n      company_id: id,\n      hide: val ? \"1\" : \"0\",\n      user_id: localStorage.getItem(\"userId\")\n    };\n    dispatch(setAccountHide(param));\n  };\n\n  const updateVerifiedStatus = (val, id) => {\n    var temp = [...tempVerifed];\n    var tempIndex = temp.indexOf(id);\n    const param = {\n      company_id: id,\n      edit: val ? \"1\" : \"0\",\n      user_id: localStorage.getItem(\"userId\")\n    };\n\n    if (tempIndex > -1) {\n      temp.splice(tempIndex, 1);\n    } else {\n      if (val) {\n        temp.push(id);\n      }\n    }\n\n    setTempVerified(temp);\n    dispatch(setAccountVerified(param));\n  };\n\n  const handleEdit = id => {\n    dispatch(selectedAccountId(id));\n    onEdit();\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter_box mb-5\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-1 d-flex align-items-center\",\n          children: /*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"mb-0\",\n            children: \"Filters\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-2\",\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            size: \"small\",\n            variant: \"outlined\",\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              id: \"demo-simple-select-outlined-label\",\n              children: \"Region Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 353,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              name: \"region_name\",\n              labelId: \"demo-simple-select-outlined-label\",\n              id: \"demo-simple-select-outlined\",\n              value: accountMasterFilter.region_name,\n              onChange: handleFilters,\n              label: \"Region Name\",\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"\",\n                children: \"None\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 364,\n                columnNumber: 17\n              }, this), regionList.length > 0 ? regionList.map((region, index) => {\n                return /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: region.value,\n                  children: region.value\n                }, \"region\" + index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 368,\n                  columnNumber: 25\n                }, this);\n              }) : null]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-2\",\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            size: \"small\",\n            variant: \"outlined\",\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              id: \"demo-simple-select-outlined-label\",\n              children: \"Group\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              name: \"group_name\",\n              labelId: \"demo-simple-select-outlined-label\",\n              id: \"demo-simple-select-outlined\",\n              value: accountMasterFilter.group_name,\n              onChange: handleFilters,\n              label: \"Group\",\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"\",\n                children: \"None\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 390,\n                columnNumber: 17\n              }, this), groupList.length > 0 ? groupList.map((group, index) => {\n                return /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: group.value,\n                  children: group.value\n                }, \"groupList\" + index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 394,\n                  columnNumber: 25\n                }, this);\n              }) : null]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 382,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-1\",\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            size: \"small\",\n            variant: \"outlined\",\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              id: \"demo-simple-select-outlined-label\",\n              children: \"Verified\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 405,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              name: \"verified\",\n              labelId: \"demo-simple-select-outlined-label\",\n              id: \"demo-simple-select-outlined\",\n              value: accountMasterFilter.region,\n              onChange: handleFilters,\n              label: \"Verified\",\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"\",\n                children: \"All\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 416,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"1\",\n                children: \"Verified\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 417,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"0\",\n                children: \"Not Verified\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 418,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 408,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-2\",\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            size: \"small\",\n            variant: \"outlined\",\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              id: \"demo-simple-select-outlined-label\",\n              children: \"Markt. Engg\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 424,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              name: \"mark_engg\",\n              labelId: \"demo-simple-select-outlined-label\",\n              id: \"demo-simple-select-outlined\",\n              value: accountMasterFilter.mark_engg,\n              onChange: handleFilters,\n              label: \"Markt. Engg\",\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"\",\n                children: \"None\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 435,\n                columnNumber: 17\n              }, this), enggList.length > 0 ? enggList.map((engg, index) => {\n                return /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: engg.value,\n                  children: engg.value\n                }, \"enggList\" + index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 439,\n                  columnNumber: 25\n                }, this);\n              }) : null]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 427,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 423,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-2\",\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            id: \"outlined-basic\",\n            size: \"small\",\n            onKeyDown: e => {\n              if (e.keyCode === 13) {\n                handleParams(e);\n              }\n            },\n            name: \"filter_value\",\n            label: \"Search\",\n            variant: \"outlined\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 449,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-2 text-right\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            color: \"primary\",\n            disableElevation: true,\n            variant: \"contained\",\n            children: \"Export Excel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 464,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: 500,\n        width: \"100%\"\n      },\n      children: /*#__PURE__*/_jsxDEV(DataGrid, {\n        pagination: true,\n        disableColumnFilter: true,\n        pageSize: params.pageSize,\n        page: params.pageNo,\n        rowsPerPageOptions: [15, 25, 50, 100],\n        rowCount: totalRecord,\n        paginationMode: \"server\",\n        onPageSizeChange: handlePageSizeChange,\n        onPageChange: handlePageChange,\n        loading: loading,\n        rowHeight: 30,\n        components: {\n          Pagination: CustomPagination,\n          NoRowsOverlay: CustomNoRowsOverlay\n        },\n        onSortModelChange: sort => {\n          if (sort.length > 0) {\n            setParams({ ...params,\n              sort_column: sort[0].field,\n              sort_order: sort[0].sort\n            });\n          }\n        } // onColumnVisibilityChange={(e) => handleColumnHide(e)}\n        ,\n        columns: columns,\n        rows: browseListData //accountMasterList\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 470,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 345,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BrowseAccount, \"bWxx/nF4S1G6m2+8SNKUNXcAFwk=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = BrowseAccount;\nexport default BrowseAccount;\n\nvar _c;\n\n$RefreshReg$(_c, \"BrowseAccount\");","map":{"version":3,"sources":["F:/React code/diagnostic/src/pages/Master/Accounts_Master/browse.js"],"names":["React","useEffect","useState","DataGrid","useDispatch","useSelector","getAccountMasterFiltersList","searchAccountMasterData","setAccountHide","setAccountVerified","Checkbox","FormControl","InputLabel","MenuItem","Select","TextField","Tooltip","withStyles","Button","FormControlLabel","CustomPagination","CustomNoRowsOverlay","ActionButtons","selectedAccountId","getBrowseUserRight","showErrorToast","CommonController","LightTooltip","theme","tooltip","backgroundColor","palette","common","white","color","boxShadow","shadows","fontSize","user_id","localStorage","getItem","BrowseAccount","onEdit","onPreview","accountType","console","log","dispatch","getuserRightListResponse","state","userRightList","browseListData","setBrowseListData","totalRecord","setTotalRecords","loading","setLoading","accountMasterFilter","setAccountMasterFilter","region_name","group_name","verified","mark_engg","account_type","tempVerifed","setTempVerified","regionList","setRegionList","groupList","setGroupList","enggList","setEnggList","params","setParams","pageNo","pageSize","filter_value","sort_column","sort_order","columns","field","headerName","width","hide","renderCell","row","short_name","company","address","mobile","email","edit","event","updateVerifiedStatus","target","checked","id","indexOf","updateHideStatus","level","handleEdit","handleFilters","name","value","handleParams","getBrowseListData","getFilterListData","commonApiCall","then","data","recordsFiltered","catch","err","commonApiCallFilter","employeeList","handlePageSizeChange","param","handlePageChange","val","company_id","temp","tempIndex","splice","push","length","map","region","index","group","engg","e","keyCode","height","Pagination","NoRowsOverlay","sort"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  getAccountMasterFiltersList,\r\n  searchAccountMasterData,\r\n  setAccountHide,\r\n  setAccountVerified,\r\n} from \"../../../_redux/actions/masters/account.action\";\r\nimport {\r\n  Checkbox,\r\n  FormControl,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n  TextField,\r\n  Tooltip,\r\n  withStyles,\r\n  Button,\r\n  FormControlLabel,\r\n} from \"@material-ui/core\";\r\nimport CustomPagination from \"../../../components/CustomPagination\";\r\nimport CustomNoRowsOverlay from \"../../../components/customRowComponent\";\r\nimport ActionButtons from \"../../../components/action-buttons\";\r\nimport { selectedAccountId } from \"../../../_redux/actions/masters/all.action\";\r\n\r\nimport { getBrowseUserRight, showErrorToast } from \"../../../components/common\";\r\nimport { CommonController } from \"../../../_redux/controller/common.controller\";\r\n\r\nconst LightTooltip = withStyles((theme) => ({\r\n  tooltip: {\r\n    backgroundColor: theme.palette.common.white,\r\n    color: \"rgba(0, 0, 0, 0.87)\",\r\n    boxShadow: theme.shadows[1],\r\n    fontSize: 11,\r\n  },\r\n}))(Tooltip);\r\n\r\nconst user_id = {\r\n  user_id: localStorage.getItem(\"userId\"),\r\n};\r\n\r\nconst BrowseAccount = ({ onEdit, onPreview,accountType }) => {\r\n  console.log(accountType)\r\n  const dispatch = useDispatch();\r\n  const getuserRightListResponse = useSelector(\r\n    (state) => state.common.userRightList\r\n  );\r\n\r\n  const [browseListData, setBrowseListData] = useState([]);\r\n  const [totalRecord, setTotalRecords] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [accountMasterFilter, setAccountMasterFilter] = useState({\r\n    region_name: \"\",\r\n    group_name: \"\",\r\n    verified: \"\",\r\n    mark_engg: \"\",\r\n    account_type:accountType\r\n  });\r\n\r\n  const [tempVerifed, setTempVerified] = useState([]);\r\n\r\n  const [regionList, setRegionList] = useState([]);\r\n  const [groupList, setGroupList] = useState([]);\r\n  const [enggList, setEnggList] = useState([]);\r\n\r\n  const [params, setParams] = useState({\r\n    pageNo: 1,\r\n    pageSize: 15,\r\n    filter_value: \"\",\r\n    sort_column: \"\",\r\n    sort_order: \"\",\r\n  });\r\n\r\n  let columns = [\r\n    {\r\n      field: \"id\",\r\n      headerName: \"ID\",\r\n      width: 70,\r\n      hide: false,\r\n    },\r\n    {\r\n      field: \"region\",\r\n      headerName: \"Region\",\r\n      width: 180,\r\n      hide: false,\r\n    },\r\n    {\r\n      field: \"short_name\",\r\n      headerName: \"Short Name\",\r\n      renderCell: (params) => (\r\n        <LightTooltip title={params.row.short_name}>\r\n          <span>{params.row.short_name}</span>\r\n        </LightTooltip>\r\n      ),\r\n      width: 200,\r\n      hide: false,\r\n    },\r\n    {\r\n      field: \"company\",\r\n      headerName: \"Company\",\r\n      renderCell: (params) => (\r\n        <LightTooltip title={params.row.company}>\r\n          <span>{params.row.company}</span>\r\n        </LightTooltip>\r\n      ),\r\n      width: 180,\r\n      hide: false,\r\n    },\r\n    {\r\n      field: \"address\",\r\n      headerName: \"Address\",\r\n      renderCell: (params) => (\r\n        <LightTooltip title={params.row.address}>\r\n          <span>{params.row.address}</span>\r\n        </LightTooltip>\r\n      ),\r\n      width: 300,\r\n      hide: false,\r\n    },\r\n    {\r\n      field: \"pin\",\r\n      headerName: \"Pin\",\r\n      width: 80,\r\n      hide: false,\r\n    },\r\n    {\r\n      field: \"mobile\",\r\n      headerName: \"Mobile\",\r\n      renderCell: (params) => (\r\n        <LightTooltip title={params.row.mobile}>\r\n          <span>{params.row.mobile}</span>\r\n        </LightTooltip>\r\n      ),\r\n      width: 150,\r\n      hide: false,\r\n    },\r\n    {\r\n      field: \"email\",\r\n      headerName: \"Email\",\r\n      renderCell: (params) => (\r\n        <LightTooltip title={params.row.email}>\r\n          <span>{params.row.email}</span>\r\n        </LightTooltip>\r\n      ),\r\n      width: 200,\r\n      hide: false,\r\n    },\r\n    {\r\n      field: \"verified\",\r\n      headerName: \"Verified\",\r\n      renderCell: (params) => (\r\n        <FormControlLabel\r\n          className={\"formControlLabel\"}\r\n          control={\r\n            <Checkbox\r\n              defaultChecked={params.row.edit === \"True\"}\r\n              size=\"small\"\r\n              color=\"primary\"\r\n              onChange={(event) =>\r\n                updateVerifiedStatus(event.target.checked, params.id)\r\n              }\r\n              inputProps={{ \"aria-label\": \"checkbox with small size\" }}\r\n            />\r\n          }\r\n          label={\r\n            <span\r\n              className={\r\n                \"font_13 \" +\r\n                (params.row.edit === \"True\" ||\r\n                tempVerifed.indexOf(params.row.id) > -1\r\n                  ? \"text-success\"\r\n                  : \"text-danger\")\r\n              }\r\n            >\r\n              {params.row.edit === \"True\" ||\r\n              tempVerifed.indexOf(params.row.id) > -1\r\n                ? \"Verified\"\r\n                : \"Not Verified\"}\r\n            </span>\r\n          }\r\n        />\r\n      ),\r\n      width: 120,\r\n      hide: false,\r\n    },\r\n    {\r\n      field: \"hide\",\r\n      headerName: \"Hide\",\r\n      renderCell: (params) => (\r\n        <Checkbox\r\n          size=\"small\"\r\n          color=\"primary\"\r\n          defaultChecked={params.row.hide === \"True\"}\r\n          onChange={(event) =>\r\n            updateHideStatus(event.target.checked, params.id)\r\n          }\r\n          // onChange={() => console.log(params.id)}\r\n          inputProps={{ \"aria-label\": \"checkbox with small size\" }}\r\n        />\r\n      ),\r\n      width: 80,\r\n      hide: false,\r\n    },\r\n    {\r\n      field: \"mark_engg\",\r\n      headerName: \"Markt. Engg\",\r\n      renderCell: (params) => (\r\n        <LightTooltip title={params.row.mark_engg}>\r\n          <span>{params.row.mark_engg}</span>\r\n        </LightTooltip>\r\n      ),\r\n      width: 150,\r\n      hide: false,\r\n    },\r\n    {\r\n      field: \"\",\r\n      headerName: \"Actions\",\r\n      renderCell: (params) => (\r\n        <ActionButtons\r\n          onPreview={\r\n            getBrowseUserRight(getuserRightListResponse)?.level == 1\r\n              ? () => handleEdit(params.row.id)\r\n              : null\r\n          }\r\n          onEdit={\r\n            getBrowseUserRight(getuserRightListResponse)?.level == 1\r\n              ? () => handleEdit(params.row.id)\r\n              : null\r\n          }\r\n          // onDelete={\r\n          //   getBrowseUserRight(getuserRightListResponse)?.delete_right == \"True\"\r\n          //     ? () => handleDeleteRow(params.row.id)\r\n          //     : null\r\n          // }\r\n        />\r\n      ),\r\n      width: 120,\r\n    },\r\n    {\r\n      field: \"datetime\",\r\n      headerName: \"Date Time\",\r\n      width: 120,\r\n      hide: false,\r\n    },\r\n  ];\r\n\r\n  const handleFilters = (event) => {\r\n    setAccountMasterFilter({\r\n      ...accountMasterFilter,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const handleParams = (event) => {\r\n    setParams({ ...params, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  useEffect(() => {\r\n    // getUserFilter();\r\n    getBrowseListData();\r\n    getFilterListData();\r\n  }, []);\r\n\r\n  const getBrowseListData = async () => {\r\n    setLoading(true);\r\n    await CommonController.commonApiCall(\r\n      \"Account/AccountMasterBrowse\",\r\n      params,\r\n      accountMasterFilter\r\n    )\r\n      .then((data) => {\r\n        setBrowseListData(data.data);\r\n        setTotalRecords(data.recordsFiltered);\r\n      })\r\n      .catch((err) => {\r\n        showErrorToast(err);\r\n      });\r\n    setLoading(false);\r\n  };\r\n\r\n  const getFilterListData = async () => {\r\n    await CommonController.commonApiCallFilter(\r\n      \"Dropdown/AccountMasterDropdown\",\r\n      user_id,\r\n      \"post\"\r\n    )\r\n      .then((data) => {\r\n        setRegionList(data.regionList);\r\n        setGroupList(data.groupList);\r\n        setEnggList(data.employeeList);\r\n      })\r\n      .catch((err) => {\r\n        showErrorToast(err);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getBrowseListData();\r\n  }, [params, accountMasterFilter]);\r\n\r\n  const handlePageSizeChange = (param) => {\r\n    setParams({ ...params, pageSize: param });\r\n  };\r\n  const handlePageChange = (param) => {\r\n    setParams({ ...params, pageNo: param });\r\n  };\r\n\r\n  const updateHideStatus = (val, id) => {\r\n    const param = {\r\n      company_id: id,\r\n      hide: val ? \"1\" : \"0\",\r\n      user_id: localStorage.getItem(\"userId\"),\r\n    };\r\n    dispatch(setAccountHide(param));\r\n  };\r\n\r\n  const updateVerifiedStatus = (val, id) => {\r\n    var temp = [...tempVerifed];\r\n    var tempIndex = temp.indexOf(id);\r\n    const param = {\r\n      company_id: id,\r\n      edit: val ? \"1\" : \"0\",\r\n      user_id: localStorage.getItem(\"userId\"),\r\n    };\r\n\r\n    if (tempIndex > -1) {\r\n      temp.splice(tempIndex, 1);\r\n    } else {\r\n      if (val) {\r\n        temp.push(id);\r\n      }\r\n    }\r\n    setTempVerified(temp);\r\n    dispatch(setAccountVerified(param));\r\n  };\r\n\r\n  const handleEdit = (id) => {\r\n    dispatch(selectedAccountId(id));\r\n    onEdit();\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"filter_box mb-5\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-1 d-flex align-items-center\">\r\n            <h4 className=\"mb-0\">Filters</h4>\r\n          </div>\r\n          <div className=\"col-md-2\">\r\n            <FormControl fullWidth size=\"small\" variant=\"outlined\">\r\n              <InputLabel id=\"demo-simple-select-outlined-label\">\r\n                Region Name\r\n              </InputLabel>\r\n              <Select\r\n                name=\"region_name\"\r\n                labelId=\"demo-simple-select-outlined-label\"\r\n                id=\"demo-simple-select-outlined\"\r\n                value={accountMasterFilter.region_name}\r\n                onChange={handleFilters}\r\n                label=\"Region Name\"\r\n              >\r\n                <MenuItem value=\"\">None</MenuItem>\r\n                {regionList.length > 0\r\n                  ? regionList.map((region, index) => {\r\n                      return (\r\n                        <MenuItem key={\"region\" + index} value={region.value}>\r\n                          {region.value}\r\n                        </MenuItem>\r\n                      );\r\n                    })\r\n                  : null}\r\n              </Select>\r\n            </FormControl>\r\n          </div>\r\n          <div className=\"col-md-2\">\r\n            <FormControl fullWidth size=\"small\" variant=\"outlined\">\r\n              <InputLabel id=\"demo-simple-select-outlined-label\">\r\n                Group\r\n              </InputLabel>\r\n              <Select\r\n                name=\"group_name\"\r\n                labelId=\"demo-simple-select-outlined-label\"\r\n                id=\"demo-simple-select-outlined\"\r\n                value={accountMasterFilter.group_name}\r\n                onChange={handleFilters}\r\n                label=\"Group\"\r\n              >\r\n                <MenuItem value=\"\">None</MenuItem>\r\n                {groupList.length > 0\r\n                  ? groupList.map((group, index) => {\r\n                      return (\r\n                        <MenuItem key={\"groupList\" + index} value={group.value}>\r\n                          {group.value}\r\n                        </MenuItem>\r\n                      );\r\n                    })\r\n                  : null}\r\n              </Select>\r\n            </FormControl>\r\n          </div>\r\n          <div className=\"col-md-1\">\r\n            <FormControl fullWidth size=\"small\" variant=\"outlined\">\r\n              <InputLabel id=\"demo-simple-select-outlined-label\">\r\n                Verified\r\n              </InputLabel>\r\n              <Select\r\n                name=\"verified\"\r\n                labelId=\"demo-simple-select-outlined-label\"\r\n                id=\"demo-simple-select-outlined\"\r\n                value={accountMasterFilter.region}\r\n                onChange={handleFilters}\r\n                label=\"Verified\"\r\n              >\r\n                <MenuItem value={\"\"}>All</MenuItem>\r\n                <MenuItem value={\"1\"}>Verified</MenuItem>\r\n                <MenuItem value={\"0\"}>Not Verified</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </div>\r\n          <div className=\"col-md-2\">\r\n            <FormControl fullWidth size=\"small\" variant=\"outlined\">\r\n              <InputLabel id=\"demo-simple-select-outlined-label\">\r\n                Markt. Engg\r\n              </InputLabel>\r\n              <Select\r\n                name=\"mark_engg\"\r\n                labelId=\"demo-simple-select-outlined-label\"\r\n                id=\"demo-simple-select-outlined\"\r\n                value={accountMasterFilter.mark_engg}\r\n                onChange={handleFilters}\r\n                label=\"Markt. Engg\"\r\n              >\r\n                <MenuItem value=\"\">None</MenuItem>\r\n                {enggList.length > 0\r\n                  ? enggList.map((engg, index) => {\r\n                      return (\r\n                        <MenuItem key={\"enggList\" + index} value={engg.value}>\r\n                          {engg.value}\r\n                        </MenuItem>\r\n                      );\r\n                    })\r\n                  : null}\r\n              </Select>\r\n            </FormControl>\r\n          </div>\r\n          <div className=\"col-md-2\">\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              onKeyDown={(e) => {\r\n                if (e.keyCode === 13) {\r\n                  handleParams(e);\r\n                }\r\n              }}\r\n              name=\"filter_value\"\r\n              label=\"Search\"\r\n              variant=\"outlined\"\r\n            />\r\n          </div>\r\n          <div className=\"col-md-2 text-right\">\r\n            <Button color=\"primary\" disableElevation variant=\"contained\">\r\n              Export Excel\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div style={{ height: 500, width: \"100%\" }}>\r\n        <DataGrid\r\n          pagination\r\n          disableColumnFilter\r\n          pageSize={params.pageSize}\r\n          page={params.pageNo}\r\n          rowsPerPageOptions={[15, 25, 50, 100]}\r\n          rowCount={totalRecord}\r\n          paginationMode=\"server\"\r\n          onPageSizeChange={handlePageSizeChange}\r\n          onPageChange={handlePageChange}\r\n          loading={loading}\r\n          rowHeight={30}\r\n          components={{\r\n            Pagination: CustomPagination,\r\n            NoRowsOverlay: CustomNoRowsOverlay,\r\n          }}\r\n          onSortModelChange={(sort) => {\r\n            if (sort.length > 0) {\r\n              setParams({\r\n                ...params,\r\n                sort_column: sort[0].field,\r\n                sort_order: sort[0].sort,\r\n              });\r\n            }\r\n          }}\r\n          // onColumnVisibilityChange={(e) => handleColumnHide(e)}\r\n          columns={columns}\r\n          rows={browseListData} //accountMasterList\r\n        />\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default BrowseAccount;\r\n"]},"metadata":{},"sourceType":"module"}