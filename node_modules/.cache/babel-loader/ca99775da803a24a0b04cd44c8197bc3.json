{"ast":null,"code":"import _regeneratorRuntime from\"F:/React code/diagnostic/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";var _marked=/*#__PURE__*/_regeneratorRuntime.mark(CheckUserCredSaga),_marked2=/*#__PURE__*/_regeneratorRuntime.mark(CheckUserCredOTP),_marked3=/*#__PURE__*/_regeneratorRuntime.mark(getDecryptUserIdSaga),_marked4=/*#__PURE__*/_regeneratorRuntime.mark(AuthSaga);import{put,takeLatest}from\"redux-saga/effects\";import{checkAuthCred,requestStatus,checkAuthCredResponse,checkAuthOTP,checkAuthOTPResponse,getDecryptUserIdResponse,getDecryptUserId}from'../actions/auth.action';import{AuthController}from\"../controller/auth.controller\";function CheckUserCredSaga(action){var _checkUserCred;return _regeneratorRuntime.wrap(function CheckUserCredSaga$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return put(requestStatus(true));case 3:_context.next=5;return AuthController.checkUserCred(action.payload);case 5:_checkUserCred=_context.sent;_context.next=8;return put(checkAuthCredResponse(_checkUserCred));case 8:_context.next=10;return put(requestStatus(false));case 10:_context.next=18;break;case 12:_context.prev=12;_context.t0=_context[\"catch\"](0);_context.next=16;return null;case 16:_context.next=18;return put(checkAuthCredResponse(_context.t0));case 18:case\"end\":return _context.stop();}}},_marked,null,[[0,12]]);}function CheckUserCredOTP(action){var _checkUserOtp;return _regeneratorRuntime.wrap(function CheckUserCredOTP$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return AuthController.checkAuthOTP(action.payload);case 3:_checkUserOtp=_context2.sent;_context2.next=6;return put(checkAuthOTPResponse(_checkUserOtp));case 6:_context2.next=14;break;case 8:_context2.prev=8;_context2.t0=_context2[\"catch\"](0);_context2.next=12;return null;case 12:_context2.next=14;return put(checkAuthOTPResponse(_context2.t0));case 14:case\"end\":return _context2.stop();}}},_marked2,null,[[0,8]]);}function getDecryptUserIdSaga(action){var decryptUserDetails;return _regeneratorRuntime.wrap(function getDecryptUserIdSaga$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.prev=0;_context3.next=3;return AuthController.getDecryptUserDetails(action.payload);case 3:decryptUserDetails=_context3.sent;_context3.next=6;return put(getDecryptUserIdResponse(decryptUserDetails));case 6:_context3.next=14;break;case 8:_context3.prev=8;_context3.t0=_context3[\"catch\"](0);_context3.next=12;return null;case 12:_context3.next=14;return put(getDecryptUserIdResponse(_context3.t0));case 14:case\"end\":return _context3.stop();}}},_marked3,null,[[0,8]]);}export default function AuthSaga(){return _regeneratorRuntime.wrap(function AuthSaga$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.prev=0;_context4.next=3;return takeLatest(checkAuthCred,CheckUserCredSaga);case 3:_context4.next=5;return takeLatest(checkAuthOTP,CheckUserCredOTP);case 5:_context4.next=7;return takeLatest(getDecryptUserId,getDecryptUserIdSaga);case 7:_context4.next=13;break;case 9:_context4.prev=9;_context4.t0=_context4[\"catch\"](0);_context4.next=13;return null;case 13:case\"end\":return _context4.stop();}}},_marked4,null,[[0,9]]);}","map":{"version":3,"sources":["F:/React code/diagnostic/src/_redux/middleware/auth.saga.js"],"names":["CheckUserCredSaga","CheckUserCredOTP","getDecryptUserIdSaga","AuthSaga","put","takeLatest","checkAuthCred","requestStatus","checkAuthCredResponse","checkAuthOTP","checkAuthOTPResponse","getDecryptUserIdResponse","getDecryptUserId","AuthController","action","checkUserCred","payload","_checkUserCred","_checkUserOtp","getDecryptUserDetails","decryptUserDetails"],"mappings":"wLAKUA,iB,iDAYAC,gB,iDAUAC,oB,iDAWeC,Q,EAtCzB,OAASC,GAAT,CAAcC,UAAd,KAAgC,oBAAhC,CACA,OAASC,aAAT,CAAyBC,aAAzB,CAAyCC,qBAAzC,CAAgEC,YAAhE,CAA+EC,oBAA/E,CAAqGC,wBAArG,CAA+HC,gBAA/H,KAAuJ,wBAAvJ,CACA,OAASC,cAAT,KAA+B,+BAA/B,CAGA,QAAUb,CAAAA,iBAAV,CAA6Bc,MAA7B,+KAEQ,MAAMV,CAAAA,GAAG,CAACG,aAAa,CAAC,IAAD,CAAd,CAAT,CAFR,uBAG+B,MAAMM,CAAAA,cAAc,CAACE,aAAf,CAA6BD,MAAM,CAACE,OAApC,CAAN,CAH/B,OAGcC,cAHd,+BAIQ,MAAMb,CAAAA,GAAG,CAACI,qBAAqB,CAACS,cAAD,CAAtB,CAAT,CAJR,wBAKQ,MAAMb,CAAAA,GAAG,CAACG,aAAa,CAAC,KAAD,CAAd,CAAT,CALR,0GAOQ,MAAM,KAAN,CAPR,yBAQQ,MAAMH,CAAAA,GAAG,CAACI,qBAAqB,aAAtB,CAAT,CARR,qEAYA,QAAUP,CAAAA,gBAAV,CAA4Ba,MAA5B,kLAE8B,MAAMD,CAAAA,cAAc,CAACJ,YAAf,CAA4BK,MAAM,CAACE,OAAnC,CAAN,CAF9B,OAEcE,aAFd,iCAGQ,MAAMd,CAAAA,GAAG,CAACM,oBAAoB,CAACQ,aAAD,CAArB,CAAT,CAHR,4GAKQ,MAAM,KAAN,CALR,0BAMQ,MAAMd,CAAAA,GAAG,CAACM,oBAAoB,cAArB,CAAT,CANR,sEAUA,QAAUR,CAAAA,oBAAV,CAAgCY,MAAhC,2LAEmC,MAAMD,CAAAA,cAAc,CAACM,qBAAf,CAAqCL,MAAM,CAACE,OAA5C,CAAN,CAFnC,OAEcI,kBAFd,iCAGQ,MAAMhB,CAAAA,GAAG,CAACO,wBAAwB,CAACS,kBAAD,CAAzB,CAAT,CAHR,4GAKQ,MAAM,KAAN,CALR,0BAMQ,MAAMhB,CAAAA,GAAG,CAACO,wBAAwB,cAAzB,CAAT,CANR,sEAWA,cAAe,SAAUR,CAAAA,QAAV,yJAEP,MAAME,CAAAA,UAAU,CAACC,aAAD,CAAgBN,iBAAhB,CAAhB,CAFO,wBAGP,MAAMK,CAAAA,UAAU,CAACI,YAAD,CAAeR,gBAAf,CAAhB,CAHO,wBAIP,MAAMI,CAAAA,UAAU,CAACO,gBAAD,CAAmBV,oBAAnB,CAAhB,CAJO,4GAOP,MAAM,KAAN,CAPO","sourcesContent":["import { put, takeLatest } from \"redux-saga/effects\";\r\nimport { checkAuthCred , requestStatus , checkAuthCredResponse, checkAuthOTP , checkAuthOTPResponse, getDecryptUserIdResponse, getDecryptUserId } from '../actions/auth.action';\r\nimport { AuthController } from \"../controller/auth.controller\";\r\n\r\n\r\nfunction* CheckUserCredSaga (action) {\r\n    try {   \r\n        yield put(requestStatus(true));\r\n        const _checkUserCred = yield AuthController.checkUserCred(action.payload);\r\n        yield put(checkAuthCredResponse(_checkUserCred));\r\n        yield put(requestStatus(false));\r\n    } catch (error) {\r\n        yield null;\r\n        yield put(checkAuthCredResponse(error));\r\n    }\r\n}\r\n\r\nfunction* CheckUserCredOTP (action) {\r\n    try {\r\n        const _checkUserOtp = yield AuthController.checkAuthOTP(action.payload);\r\n        yield put(checkAuthOTPResponse(_checkUserOtp));\r\n    } catch (error) {\r\n        yield null;\r\n        yield put(checkAuthOTPResponse(error));\r\n    }\r\n}\r\n\r\nfunction* getDecryptUserIdSaga (action) {\r\n    try {\r\n        const decryptUserDetails = yield AuthController.getDecryptUserDetails(action.payload);\r\n        yield put(getDecryptUserIdResponse(decryptUserDetails));\r\n    } catch (error) {\r\n        yield null;\r\n        yield put(getDecryptUserIdResponse(error));\r\n    }\r\n}\r\n\r\n\r\nexport default function* AuthSaga () {\r\n    try {\r\n        yield takeLatest(checkAuthCred, CheckUserCredSaga);\r\n        yield takeLatest(checkAuthOTP, CheckUserCredOTP);\r\n        yield takeLatest(getDecryptUserId, getDecryptUserIdSaga);\r\n    }\r\n    catch(e){\r\n        yield null;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}