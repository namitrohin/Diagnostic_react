{"ast":null,"code":"var _jsxFileName = \"F:\\\\React code\\\\diagnostic\\\\src\\\\pages\\\\Master\\\\combomlfb\\\\addCombo.js\",\n    _s = $RefreshSig$();\n\nimport { TextField, Button } from \"@material-ui/core\";\nimport { Autocomplete } from \"@material-ui/lab\";\nimport { DatePicker } from \"@material-ui/pickers\";\nimport React, { useEffect, useState } from \"react\";\nimport SimpleReactValidator from \"simple-react-validator\";\nimport { showErrorToast, showSuccessToast } from \"../../../components/common\";\nimport { CommonController } from \"../../../_redux/controller/common.controller\";\nimport { SimpleTable } from \"../../../components/basic-table\";\nimport useForceUpdate from \"use-force-update\";\nimport moment from \"moment\";\nimport { useSelector } from \"react-redux\";\nimport { Loader } from \"../../../components/loader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddComboMLFB = ({\n  onClose\n}) => {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  const [dataLoading, setDataLoading] = useState(false);\n  const [validator, setValidator] = useState(new SimpleReactValidator());\n  const selectedComboMLFBIdResponse = useSelector(state => state.AllReducersMaster.comboMLFBId);\n  const forceUpdate = useForceUpdate();\n  const [mlfbProductList, setProductList] = useState([]);\n  const [insertParams, setInsertParams] = useState({\n    tran_id: \"0\",\n    date: null,\n    product_id: \"\",\n    remarks: \"\",\n    user_id: localStorage.getItem(\"userId\"),\n    user_name: localStorage.getItem(\"userName\"),\n    mlfbItems: []\n  });\n  const [selectedParams, setSelectedParams] = useState({\n    date: null,\n    selectedProduct: \"\",\n    selectedMlfb: \"\"\n  });\n  useEffect(async () => {\n    if (selectedComboMLFBIdResponse && mlfbProductList.length > 0) {\n      setDataLoading(true);\n      await CommonController.commonApiCallFilter(\"ComboMlfb/ComboMlfbPreview\", {\n        tran_id: selectedComboMLFBIdResponse\n      }).then(data => {\n        setSelectedParams({ ...selectedParams,\n          date: new Date(data.date.split(\"/\")[1] + \"/\" + data.date.split(\"/\")[0] + \"/\" + data.date.split(\"/\")[2]),\n          selectedMlfb: mlfbProductList.filter(x => x.value === data.mlfb_no)[0]\n        });\n        setInsertParams({ ...insertParams,\n          remarks: data.remarks,\n          product_id: data.product_id,\n          mlfbItems: data.mlfbItems,\n          date: data.date,\n          tran_id: data.tran_id\n        });\n      });\n      setDataLoading(false);\n    }\n  }, [selectedComboMLFBIdResponse, mlfbProductList]);\n\n  const onProductChoose = async () => {\n    const tempList = [...insertParams.mlfbItems];\n    const indx = tempList.findIndex(x => {\n      var _selectedParams$selec;\n\n      return x.product_id === ((_selectedParams$selec = selectedParams.selectedProduct) === null || _selectedParams$selec === void 0 ? void 0 : _selectedParams$selec.id);\n    });\n\n    if (indx > -1) {\n      showErrorToast(\"Already selected\");\n    } else {\n      var _selectedParams$selec2;\n\n      setLoading(true);\n      await CommonController.commonApiCallFilter(\"ComboMlfb/ComboMlfbPreviewDetails\", {\n        product_id: (_selectedParams$selec2 = selectedParams.selectedProduct) === null || _selectedParams$selec2 === void 0 ? void 0 : _selectedParams$selec2.id\n      }).then(data => {\n        tempList.push(data);\n      });\n      setInsertParams({ ...insertParams,\n        mlfbItems: tempList\n      });\n      setLoading(false);\n      setSelectedParams({ ...selectedParams,\n        selectedProduct: \"\"\n      });\n    }\n  };\n\n  const insertCombo = async () => {\n    if (validator.allValid()) {\n      if (insertParams.mlfbItems.length > 0) {\n        CommonController.commonApiCallFilter(\"ComboMlfb/ComboMlfbInsert\", insertParams).then(data => {\n          if (data.valid) {\n            showSuccessToast(\"Successfully Saved\");\n          } else {\n            showErrorToast(\"Something went wrong\");\n          }\n        });\n      } else {\n        showErrorToast(\"Please select MLFB Products\");\n      }\n    } else {\n      validator.showMessages(); // rerender to show messages for the first time\n      // you can use the autoForceUpdate option to do this automatically`\n\n      forceUpdate();\n    }\n  };\n\n  const getProductList = async () => {\n    await CommonController.commonApiCallFilter(\"Dropdown/GetProductMlfb\", {}).then(data => setProductList(data));\n  };\n\n  useEffect(() => {\n    getProductList();\n  }, []); //   const handleDataChange = () => {};\n\n  const handleDateChange = (key, date) => {\n    setInsertParams({ ...insertParams,\n      [key]: moment(date).format(\"DD-MM-YYYY\")\n    });\n    setSelectedParams({ ...selectedParams,\n      date: date\n    });\n  };\n\n  const mlfbColumns = [{\n    id: \"mlfb_no\",\n    label: \"MLFB No\"\n  }, {\n    id: \"product_code\",\n    label: \"Product Code\"\n  }, {\n    id: \"category_name\",\n    label: \"Category Name\"\n  }, {\n    id: \"p_group_name\",\n    label: \"Group Name\"\n  }];\n\n  const handleDelete = row => {\n    const tempList = [...insertParams.mlfbItems];\n    const indx = tempList.findIndex(x => x.product_id === row.product_id);\n\n    if (indx > -1) {\n      tempList.splice(indx, 1);\n    }\n\n    setInsertParams({ ...insertParams,\n      mlfbItems: tempList\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid mt-5 pt-5\",\n    children: [dataLoading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-3\",\n        children: [/*#__PURE__*/_jsxDEV(DatePicker, {\n          label: \"Date*\",\n          value: selectedParams.date,\n          format: \"dd-MM-yyyy\",\n          onChange: date => {\n            handleDateChange(\"date\", date);\n            setSelectedParams({ ...selectedParams,\n              date: date\n            });\n          },\n          animateYearScrolling: true,\n          inputVariant: \"outlined\",\n          size: \"small\",\n          fullWidth: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-danger\",\n          children: validator.message(\"Date\", selectedParams.date, \"required\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-3\",\n        children: [/*#__PURE__*/_jsxDEV(Autocomplete, {\n          disablePortal: true,\n          id: \"combo-box-demo\",\n          options: mlfbProductList,\n          getOptionLabel: options => options.value,\n          fullWidth: true,\n          value: selectedParams.selectedMlfb,\n          onChange: (event, newValue) => {\n            setInsertParams({ ...insertParams,\n              product_id: newValue === null || newValue === void 0 ? void 0 : newValue.id\n            });\n            setSelectedParams({ ...selectedParams,\n              selectedMlfb: newValue\n            });\n          },\n          size: \"small\",\n          renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n            variant: \"outlined\",\n            size: \"small\",\n            ...params,\n            label: \"MLFB No.*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-danger\",\n          children: validator.message(\"MLFB\", insertParams.product_id, \"required\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6\",\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          variant: \"outlined\",\n          fullWidth: true,\n          size: \"small\",\n          multiline: true,\n          label: \"Remarks\",\n          value: insertParams.remarks,\n          onChange: event => {\n            setInsertParams({ ...insertParams,\n              remarks: event.target.value\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-danger\",\n          children: validator.message(\"Remarks\", insertParams.remarks, \"required\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-4 d-flex\",\n        children: [/*#__PURE__*/_jsxDEV(Autocomplete, {\n          disablePortal: true,\n          id: \"combo-box-demo2\",\n          options: mlfbProductList,\n          getOptionLabel: options => options.value,\n          fullWidth: true,\n          value: selectedParams.selectedProduct,\n          onChange: (event, newValue) => {\n            setSelectedParams({ ...selectedParams,\n              selectedProduct: newValue\n            });\n          },\n          size: \"small\",\n          className: \"mr-3\",\n          renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n            variant: \"outlined\",\n            size: \"small\",\n            ...params,\n            label: \"MLFB Product\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          disabled: loading,\n          onClick: onProductChoose,\n          disableElevation: true,\n          variant: \"contained\",\n          children: loading ? /*#__PURE__*/_jsxDEV(\"i\", {\n            class: \"fas fa-circle-notch fa-spin text-white\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 15\n          }, this) : \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SimpleTable, {\n      columns: mlfbColumns,\n      rows: insertParams.mlfbItems,\n      onDelete: handleDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-100 text-right mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        className: \"mr-2\",\n        color: \"primary\",\n        disableElevation: true,\n        onClick: insertCombo,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => onClose(),\n        variant: \"contained\",\n        color: \"primary\",\n        disableElevation: true,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 169,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddComboMLFB, \"J/7ctLebvM6ZWcnbIz1fwTBGZOg=\", false, function () {\n  return [useSelector, useForceUpdate];\n});\n\n_c = AddComboMLFB;\nexport default AddComboMLFB;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddComboMLFB\");","map":{"version":3,"sources":["F:/React code/diagnostic/src/pages/Master/combomlfb/addCombo.js"],"names":["TextField","Button","Autocomplete","DatePicker","React","useEffect","useState","SimpleReactValidator","showErrorToast","showSuccessToast","CommonController","SimpleTable","useForceUpdate","moment","useSelector","Loader","AddComboMLFB","onClose","loading","setLoading","dataLoading","setDataLoading","validator","setValidator","selectedComboMLFBIdResponse","state","AllReducersMaster","comboMLFBId","forceUpdate","mlfbProductList","setProductList","insertParams","setInsertParams","tran_id","date","product_id","remarks","user_id","localStorage","getItem","user_name","mlfbItems","selectedParams","setSelectedParams","selectedProduct","selectedMlfb","length","commonApiCallFilter","then","data","Date","split","filter","x","value","mlfb_no","onProductChoose","tempList","indx","findIndex","id","push","insertCombo","allValid","valid","showMessages","getProductList","handleDateChange","key","format","mlfbColumns","label","handleDelete","row","splice","message","options","event","newValue","params","target"],"mappings":"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","sourcesContent":["import { TextField, Button } from \"@material-ui/core\";\nimport { Autocomplete } from \"@material-ui/lab\";\nimport { DatePicker } from \"@material-ui/pickers\";\nimport React, { useEffect, useState } from \"react\";\nimport SimpleReactValidator from \"simple-react-validator\";\nimport { showErrorToast, showSuccessToast } from \"../../../components/common\";\nimport { CommonController } from \"../../../_redux/controller/common.controller\";\nimport { SimpleTable } from \"../../../components/basic-table\";\nimport useForceUpdate from \"use-force-update\";\nimport moment from \"moment\";\nimport { useSelector } from \"react-redux\";\nimport { Loader } from \"../../../components/loader\";\n\nconst AddComboMLFB = ({ onClose }) => {\n  const [loading, setLoading] = useState(false);\n  const [dataLoading, setDataLoading] = useState(false);\n  const [validator, setValidator] = useState(new SimpleReactValidator());\n  const selectedComboMLFBIdResponse = useSelector(\n    (state) => state.AllReducersMaster.comboMLFBId\n  );\n\n  const forceUpdate = useForceUpdate();\n  const [mlfbProductList, setProductList] = useState([]);\n  const [insertParams, setInsertParams] = useState({\n    tran_id: \"0\",\n    date: null,\n    product_id: \"\",\n    remarks: \"\",\n    user_id: localStorage.getItem(\"userId\"),\n    user_name: localStorage.getItem(\"userName\"),\n    mlfbItems: [],\n  });\n\n  const [selectedParams, setSelectedParams] = useState({\n    date: null,\n    selectedProduct: \"\",\n    selectedMlfb: \"\",\n  });\n\n  useEffect(async () => {\n    if (selectedComboMLFBIdResponse && mlfbProductList.length > 0) {\n      setDataLoading(true);\n      await CommonController.commonApiCallFilter(\"ComboMlfb/ComboMlfbPreview\", {\n        tran_id: selectedComboMLFBIdResponse,\n      }).then((data) => {\n        setSelectedParams({\n          ...selectedParams,\n          date: new Date(\n            data.date.split(\"/\")[1] +\n              \"/\" +\n              data.date.split(\"/\")[0] +\n              \"/\" +\n              data.date.split(\"/\")[2]\n          ),\n          selectedMlfb: mlfbProductList.filter(\n            (x) => x.value === data.mlfb_no\n          )[0],\n        });\n        setInsertParams({\n          ...insertParams,\n          remarks: data.remarks,\n          product_id: data.product_id,\n          mlfbItems: data.mlfbItems,\n          date: data.date,\n          tran_id: data.tran_id,\n        });\n      });\n      setDataLoading(false);\n    }\n  }, [selectedComboMLFBIdResponse, mlfbProductList]);\n\n  const onProductChoose = async () => {\n    const tempList = [...insertParams.mlfbItems];\n    const indx = tempList.findIndex(\n      (x) => x.product_id === selectedParams.selectedProduct?.id\n    );\n    if (indx > -1) {\n      showErrorToast(\"Already selected\");\n    } else {\n      setLoading(true);\n      await CommonController.commonApiCallFilter(\n        \"ComboMlfb/ComboMlfbPreviewDetails\",\n        {\n          product_id: selectedParams.selectedProduct?.id,\n        }\n      ).then((data) => {\n        tempList.push(data);\n      });\n      setInsertParams({ ...insertParams, mlfbItems: tempList });\n      setLoading(false);\n      setSelectedParams({ ...selectedParams, selectedProduct: \"\" });\n    }\n  };\n\n  const insertCombo = async () => {\n    if (validator.allValid()) {\n      if (insertParams.mlfbItems.length > 0) {\n        CommonController.commonApiCallFilter(\n          \"ComboMlfb/ComboMlfbInsert\",\n          insertParams\n        ).then((data) => {\n          if (data.valid) {\n            showSuccessToast(\"Successfully Saved\");\n          } else {\n            showErrorToast(\"Something went wrong\");\n          }\n        });\n      } else {\n        showErrorToast(\"Please select MLFB Products\");\n      }\n    } else {\n      validator.showMessages();\n      // rerender to show messages for the first time\n      // you can use the autoForceUpdate option to do this automatically`\n      forceUpdate();\n    }\n  };\n\n  const getProductList = async () => {\n    await CommonController.commonApiCallFilter(\n      \"Dropdown/GetProductMlfb\",\n      {}\n    ).then((data) => setProductList(data));\n  };\n\n  useEffect(() => {\n    getProductList();\n  }, []);\n\n  //   const handleDataChange = () => {};\n\n  const handleDateChange = (key, date) => {\n    setInsertParams({\n      ...insertParams,\n      [key]: moment(date).format(\"DD-MM-YYYY\"),\n    });\n    setSelectedParams({ ...selectedParams, date: date });\n  };\n\n  const mlfbColumns = [\n    {\n      id: \"mlfb_no\",\n      label: \"MLFB No\",\n    },\n    {\n      id: \"product_code\",\n      label: \"Product Code\",\n    },\n    {\n      id: \"category_name\",\n      label: \"Category Name\",\n    },\n    {\n      id: \"p_group_name\",\n      label: \"Group Name\",\n    },\n  ];\n\n  const handleDelete = (row) => {\n    const tempList = [...insertParams.mlfbItems];\n    const indx = tempList.findIndex((x) => x.product_id === row.product_id);\n    if (indx > -1) {\n      tempList.splice(indx, 1);\n    }\n    setInsertParams({ ...insertParams, mlfbItems: tempList });\n  };\n\n  return (\n    <div className=\"container-fluid mt-5 pt-5\">\n      {dataLoading && <Loader />}\n      <div className=\"row\">\n        <div className=\"col-md-3\">\n          <DatePicker\n            label=\"Date*\"\n            value={selectedParams.date}\n            format=\"dd-MM-yyyy\"\n            onChange={(date) => {\n              handleDateChange(\"date\", date);\n              setSelectedParams({ ...selectedParams, date: date });\n            }}\n            animateYearScrolling\n            inputVariant=\"outlined\"\n            size=\"small\"\n            fullWidth\n          />\n          <p className=\"text-danger\">\n            {validator.message(\"Date\", selectedParams.date, \"required\")}\n          </p>\n        </div>\n        <div className=\"col-md-3\">\n          <Autocomplete\n            disablePortal\n            id=\"combo-box-demo\"\n            options={mlfbProductList}\n            getOptionLabel={(options) => options.value}\n            fullWidth\n            value={selectedParams.selectedMlfb}\n            onChange={(event, newValue) => {\n              setInsertParams({ ...insertParams, product_id: newValue?.id });\n              setSelectedParams({ ...selectedParams, selectedMlfb: newValue });\n            }}\n            size=\"small\"\n            renderInput={(params) => (\n              <TextField\n                variant=\"outlined\"\n                size=\"small\"\n                {...params}\n                label=\"MLFB No.*\"\n              />\n            )}\n          />\n          <p className=\"text-danger\">\n            {validator.message(\"MLFB\", insertParams.product_id, \"required\")}\n          </p>\n        </div>\n        <div className=\"col-md-6\">\n          <TextField\n            variant=\"outlined\"\n            fullWidth\n            size=\"small\"\n            multiline\n            label=\"Remarks\"\n            value={insertParams.remarks}\n            onChange={(event) => {\n              setInsertParams({ ...insertParams, remarks: event.target.value });\n            }}\n          />\n          <p className=\"text-danger\">\n            {validator.message(\"Remarks\", insertParams.remarks, \"required\")}\n          </p>\n        </div>\n        <div className=\"col-md-4 d-flex\">\n          <Autocomplete\n            disablePortal\n            id=\"combo-box-demo2\"\n            options={mlfbProductList}\n            getOptionLabel={(options) => options.value}\n            fullWidth\n            value={selectedParams.selectedProduct}\n            onChange={(event, newValue) => {\n              setSelectedParams({\n                ...selectedParams,\n                selectedProduct: newValue,\n              });\n            }}\n            size=\"small\"\n            className=\"mr-3\"\n            renderInput={(params) => (\n              <TextField\n                variant=\"outlined\"\n                size=\"small\"\n                {...params}\n                label=\"MLFB Product\"\n              />\n            )}\n          />\n\n          <Button\n            color=\"primary\"\n            disabled={loading}\n            onClick={onProductChoose}\n            disableElevation\n            variant=\"contained\"\n          >\n            {loading ? (\n              <i class=\"fas fa-circle-notch fa-spin text-white\"></i>\n            ) : (\n              \"Add\"\n            )}\n          </Button>\n        </div>\n      </div>\n      <SimpleTable\n        columns={mlfbColumns}\n        rows={insertParams.mlfbItems}\n        onDelete={handleDelete}\n      />\n      <div className=\"w-100 text-right mt-4\">\n        <Button\n          variant=\"contained\"\n          className=\"mr-2\"\n          color=\"primary\"\n          disableElevation\n          onClick={insertCombo}\n        >\n          Save\n        </Button>\n        <Button\n          onClick={() => onClose()}\n          variant=\"contained\"\n          color=\"primary\"\n          disableElevation\n        >\n          Cancel\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default AddComboMLFB;\n"]},"metadata":{},"sourceType":"module"}