{"ast":null,"code":"import _regeneratorRuntime from\"F:/React code/diagnostic/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"F:/React code/diagnostic/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _objectSpread from\"F:/React code/diagnostic/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"F:/React code/diagnostic/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from\"react\";import{TextField,Select,Button}from\"@material-ui/core\";import{Autocomplete}from\"@material-ui/lab\";import{DatePicker}from\"@material-ui/pickers\";import SimpleReactValidator from\"simple-react-validator\";import{buttonLoader,showErrorToast,showSuccessToast}from\"../../../../../components/common\";import{CommonController}from\"../../../../../_redux/controller/common.controller\";import{SimpleTable}from\"../../../../../components/basic-table\";import useForceUpdate from\"use-force-update\";import moment from\"moment\";import{useSelector}from\"react-redux\";import{Loader}from\"../../../../../components/loader\";import{selectedGGId}from\"../../../../../_redux/actions/masters/all.action\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var AddOrEditGG=function AddOrEditGG(_ref){var onClose=_ref.onClose;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),loading=_useState2[0],setLoading=_useState2[1];var selectedIdResponse=useSelector(function(state){return state.AllReducersMaster.ggId;});var _useState3=useState(new SimpleReactValidator()),_useState4=_slicedToArray(_useState3,2),validator=_useState4[0],setValidator=_useState4[1];var forceUpdate=useForceUpdate();var _useState5=useState({gg_id:\"0\",gg_name:\"\",qty_value:\"\",description:\"\",user_id:localStorage.getItem(\"userId\"),user_name:localStorage.getItem(\"userName\")}),_useState6=_slicedToArray(_useState5,2),insertParams=_useState6[0],setInsertParams=_useState6[1];useEffect(function(){if(selectedIdResponse){CommonController.commonApiCallFilter(\"Configuration/ConfigurationProductGGPreview\",{gg_id:selectedIdResponse}).then(function(data){if(data.gg_id){setInsertParams(_objectSpread(_objectSpread({},insertParams),{},{gg_id:data.gg_id,gg_name:data.gg_name,qty_value:data.qty_value,description:data.description}));}else{showErrorToast(\"Something went wrong\");}});}},[selectedIdResponse]);var insertCombo=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(validator.allValid()){setLoading(true);CommonController.commonApiCallFilter(\"Configuration/ConfigurationProductGGInsert\",insertParams).then(function(data){if(data.valid){showSuccessToast(\"Successfully Saved\");setLoading(false);onClose();}else{showErrorToast(\"Something went wrong\");}});}else{validator.showMessages();// rerender to show messages for the first time\n// you can use the autoForceUpdate option to do this automatically`\nforceUpdate();}case 1:case\"end\":return _context.stop();}}},_callee);}));return function insertCombo(){return _ref2.apply(this,arguments);};}();return/*#__PURE__*/_jsx(React.Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"container-fluid mt-5 pt-5\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"col-md-6\",children:[/*#__PURE__*/_jsx(TextField,{variant:\"outlined\",fullWidth:true,size:\"small\",label:\"GG Name*\",value:insertParams.gg_name,onChange:function onChange(event){setInsertParams(_objectSpread(_objectSpread({},insertParams),{},{gg_name:event.target.value}));}}),/*#__PURE__*/_jsx(\"p\",{className:\"text-danger\",children:validator.message(\"GG Name\",insertParams.gg_name,\"required\")})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"col-md-6\",children:[/*#__PURE__*/_jsxs(Select,{variant:\"outlined\",fullWidth:true,size:\"small\",label:\"Qty/Value*\",value:insertParams.qty_value,onChange:function onChange(event){setInsertParams(_objectSpread(_objectSpread({},insertParams),{},{qty_value:event.target.value}));},children:[/*#__PURE__*/_jsx(\"option\",{value:\"\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Qty\",children:\"Qty\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Value\",children:\"Value\"})]}),/*#__PURE__*/_jsx(\"p\",{className:\"text-danger\",children:validator.message(\"Qty/Value\",insertParams.qty_value,\"required\")})]}),/*#__PURE__*/_jsx(\"div\",{className:\"col-md-6\",children:/*#__PURE__*/_jsx(TextField,{variant:\"outlined\",fullWidth:true,size:\"small\",multiline:true,label:\"Description\",value:insertParams.description,onChange:function onChange(event){setInsertParams(_objectSpread(_objectSpread({},insertParams),{},{description:event.target.value}));}})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"w-100 text-right mt-4\",children:[/*#__PURE__*/_jsx(Button,{onClick:function onClick(){return onClose();},variant:\"contained\",className:\"mr-2\",color:\"primary\",disableElevation:true,children:\"Cancel\"}),buttonLoader(loading,\"Save\",insertCombo,\"primary\")]})]})});};export default AddOrEditGG;","map":{"version":3,"sources":["F:/React code/diagnostic/src/pages/Master/Configuration/product/gg/form.js"],"names":["React","useEffect","useState","TextField","Select","Button","Autocomplete","DatePicker","SimpleReactValidator","buttonLoader","showErrorToast","showSuccessToast","CommonController","SimpleTable","useForceUpdate","moment","useSelector","Loader","selectedGGId","AddOrEditGG","onClose","loading","setLoading","selectedIdResponse","state","AllReducersMaster","ggId","validator","setValidator","forceUpdate","gg_id","gg_name","qty_value","description","user_id","localStorage","getItem","user_name","insertParams","setInsertParams","commonApiCallFilter","then","data","insertCombo","allValid","valid","showMessages","event","target","value","message"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { TextField, Select, Button } from \"@material-ui/core\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport { DatePicker } from \"@material-ui/pickers\";\r\nimport SimpleReactValidator from \"simple-react-validator\";\r\n\r\nimport {\r\n  buttonLoader,\r\n  showErrorToast,\r\n  showSuccessToast,\r\n} from \"../../../../../components/common\";\r\nimport { CommonController } from \"../../../../../_redux/controller/common.controller\";\r\nimport { SimpleTable } from \"../../../../../components/basic-table\";\r\nimport useForceUpdate from \"use-force-update\";\r\nimport moment from \"moment\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Loader } from \"../../../../../components/loader\";\r\nimport { selectedGGId } from \"../../../../../_redux/actions/masters/all.action\";\r\n\r\nconst AddOrEditGG = ({ onClose }) => {\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const selectedIdResponse = useSelector(\r\n    (state) => state.AllReducersMaster.ggId\r\n  );\r\n\r\n  const [validator, setValidator] = useState(new SimpleReactValidator());\r\n\r\n  const forceUpdate = useForceUpdate();\r\n\r\n  const [insertParams, setInsertParams] = useState({\r\n    gg_id: \"0\",\r\n    gg_name: \"\",\r\n    qty_value: \"\",\r\n    description: \"\",\r\n    user_id: localStorage.getItem(\"userId\"),\r\n    user_name: localStorage.getItem(\"userName\"),\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (selectedIdResponse) {\r\n      CommonController.commonApiCallFilter(\r\n        \"Configuration/ConfigurationProductGGPreview\",\r\n        {\r\n          gg_id: selectedIdResponse,\r\n        }\r\n      ).then((data) => {\r\n        if (data.gg_id) {\r\n          setInsertParams({\r\n            ...insertParams,\r\n            gg_id: data.gg_id,\r\n            gg_name: data.gg_name,\r\n            qty_value: data.qty_value,\r\n            description: data.description,\r\n          });\r\n        } else {\r\n          showErrorToast(\"Something went wrong\");\r\n        }\r\n      });\r\n    }\r\n  }, [selectedIdResponse]);\r\n\r\n  const insertCombo = async () => {\r\n    if (validator.allValid()) {\r\n      setLoading(true);\r\n      CommonController.commonApiCallFilter(\r\n        \"Configuration/ConfigurationProductGGInsert\",\r\n        insertParams\r\n      ).then((data) => {\r\n        if (data.valid) {\r\n          showSuccessToast(\"Successfully Saved\");\r\n          setLoading(false);\r\n          onClose();\r\n        } else {\r\n          showErrorToast(\"Something went wrong\");\r\n        }\r\n      });\r\n    } else {\r\n      validator.showMessages();\r\n      // rerender to show messages for the first time\r\n      // you can use the autoForceUpdate option to do this automatically`\r\n      forceUpdate();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"container-fluid mt-5 pt-5\">\r\n        {/* {loading && <Loader />} */}\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\">\r\n            <TextField\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              size=\"small\"\r\n              label=\"GG Name*\"\r\n              value={insertParams.gg_name}\r\n              onChange={(event) => {\r\n                setInsertParams({\r\n                  ...insertParams,\r\n                  gg_name: event.target.value,\r\n                });\r\n              }}\r\n            />\r\n            <p className=\"text-danger\">\r\n              {validator.message(\"GG Name\", insertParams.gg_name, \"required\")}\r\n            </p>\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            <Select\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              size=\"small\"\r\n              label=\"Qty/Value*\"\r\n              value={insertParams.qty_value}\r\n              onChange={(event) => {\r\n                setInsertParams({\r\n                  ...insertParams,\r\n                  qty_value: event.target.value,\r\n                });\r\n              }}\r\n            >\r\n              <option value=\"\"></option>\r\n              <option value=\"Qty\">Qty</option>\r\n              <option value=\"Value\">Value</option>\r\n            </Select>\r\n            <p className=\"text-danger\">\r\n              {validator.message(\r\n                \"Qty/Value\",\r\n                insertParams.qty_value,\r\n                \"required\"\r\n              )}\r\n            </p>\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            <TextField\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              size=\"small\"\r\n              multiline\r\n              label=\"Description\"\r\n              value={insertParams.description}\r\n              onChange={(event) => {\r\n                setInsertParams({\r\n                  ...insertParams,\r\n                  description: event.target.value,\r\n                });\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"w-100 text-right mt-4\">\r\n          <Button\r\n            onClick={() => onClose()}\r\n            variant=\"contained\"\r\n            className=\"mr-2\"\r\n            color=\"primary\"\r\n            disableElevation\r\n          >\r\n            Cancel\r\n          </Button>\r\n          {buttonLoader(loading, \"Save\", insertCombo, \"primary\")}\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default AddOrEditGG;\r\n"]},"metadata":{},"sourceType":"module"}