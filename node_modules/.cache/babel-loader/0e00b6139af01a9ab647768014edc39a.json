{"ast":null,"code":"var _jsxFileName = \"F:\\\\React code\\\\diagnostic\\\\src\\\\pages\\\\Stock\\\\serialLedgerBrowse.js\",\n    _s = $RefreshSig$();\n\nimport { TextField } from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport { Autocomplete } from \"@material-ui/lab\";\nimport { CommonController } from \"../../_redux/controller/common.controller\";\nimport { DataGrid } from \"@mui/x-data-grid\";\nimport CustomPagination from \"../../components/CustomPagination\";\nimport CustomNoRowsOverlay from \"../../components/customRowComponent\";\nimport { showErrorToast } from \"../../components/common\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst user_id = {\n  user_id: localStorage.getItem(\"userId\")\n};\n\nconst SerialLedgerBrowse = () => {\n  _s();\n\n  const [bodyParam, setBodyParam] = useState({\n    product_id: \"\",\n    serial_no: \"\",\n    category_id: \"\"\n  });\n  const [categoryList, setCategoryList] = useState([]);\n  const [browseListData, setBrowseListData] = useState([]);\n  const [totalRecord, setTotalRecords] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [params, setParams] = useState({\n    pageNo: 1,\n    pageSize: 10,\n    filter_value: \"\",\n    sort_column: \"\",\n    sort_order: \"\"\n  });\n  const [mlfbList, setMLFBList] = useState([]);\n  const [selectedValue, setSelectedValue] = useState({\n    category: \"\",\n    mlfb: \"\"\n  });\n\n  const handlePageSizeChange = param => {\n    setParams({ ...params,\n      pageSize: param\n    });\n  };\n\n  const handlePageChange = param => {\n    setParams({ ...params,\n      pageNo: param\n    });\n  };\n\n  const getMLFBList = async id => {\n    await CommonController.commonApiCallFilter(`Dropdown/GetMlfbListInStock`, {\n      category_id: id\n    }, \"get\").then(data => setMLFBList(data));\n  };\n\n  const getCategoryList = async () => {\n    await CommonController.commonApiCallFilter(\"Dropdown/GetCategoryList\").then(data => setCategoryList(data));\n  };\n\n  useEffect(() => {\n    getCategoryList();\n    getBrowseListData();\n  }, []);\n  useEffect(() => {\n    getBrowseListData();\n  }, [bodyParam]);\n\n  const handleAutoChange = (name, value) => {\n    setBodyParam({ ...bodyParam,\n      [name]: value\n    });\n  };\n\n  const getBrowseListData = async () => {\n    setLoading(true);\n\n    try {\n      await CommonController.commonApiCall(\"Stock/ProductLedgerSerialNoReport\", params, bodyParam, user_id).then(data => {\n        setBrowseListData(data.data);\n        setTotalRecords(data.recordsFiltered);\n      });\n    } catch (err) {\n      showErrorToast(err);\n    }\n\n    setLoading(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card card-custom gutter-b  px-7 py-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter_box mb-5\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-1 d-flex align-items-center\",\n            children: /*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"mb-0\",\n              children: \"Filters\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-2 mb-5 mb-md-0\",\n            children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n              disablePortal: true,\n              id: \"combo-box-demo\",\n              options: categoryList,\n              onChange: (event, value) => {\n                setSelectedValue({ ...selectedValue,\n                  category: value\n                });\n                handleAutoChange(\"category_id\", value ? value.id : null);\n\n                if (value) {\n                  getMLFBList(value.id);\n                }\n              },\n              fullWidth: true,\n              getOptionLabel: option => option.value,\n              value: selectedValue.category,\n              renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                variant: \"outlined\",\n                size: \"small\",\n                label: \"Category\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-2 mb-5 mb-md-0\",\n            children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n              disablePortal: true,\n              id: \"combo-box-demo2\",\n              options: mlfbList,\n              fullWidth: true,\n              getOptionLabel: option => option.value,\n              value: selectedValue.mlfb,\n              onChange: (event, value) => {\n                handleAutoChange(\"product_id\", value ? value.id : null);\n                setSelectedValue({ ...selectedValue,\n                  mlfb: value\n                });\n              },\n              renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                variant: \"outlined\",\n                size: \"small\",\n                label: \"MLFB No.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-2\",\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              variant: \"outlined\",\n              size: \"small\",\n              name: \"serial_no\",\n              label: \"Serial No\",\n              onChange: e => setBodyParam({ ...bodyParam,\n                serial_no: e.target.value\n              }),\n              value: bodyParam.serial_no\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: 400,\n          width: \"100%\"\n        },\n        children: /*#__PURE__*/_jsxDEV(DataGrid, {\n          columns: [{\n            field: \"id\",\n            headerName: \"Sr. no\",\n            flex: 0,\n            hide: true\n          }, {\n            field: \"entry_type\",\n            headerName: \"Entry Type\",\n            flex: 0.1\n          }, {\n            field: \"tran_no\",\n            headerName: \"Tran No\",\n            flex: 0.1\n          }, {\n            field: \"date\",\n            headerName: \"Date\",\n            flex: 0.1\n          }, {\n            field: \"party\",\n            headerName: \"Party\",\n            flex: 0.1\n          }, {\n            field: \"mlfb_no\",\n            headerName: \"In Qty\",\n            flex: 0.1\n          }, {\n            field: \"serial_no\",\n            headerName: \"Out Qty\",\n            flex: 0.1,\n            align: \"right\"\n          }],\n          pagination: true,\n          disableColumnFilter: true,\n          pageSize: params.pageSize,\n          page: params.pageNo,\n          rowsPerPageOptions: [10, 15, 25, 100],\n          rowCount: totalRecord,\n          paginationMode: \"server\",\n          onPageSizeChange: handlePageSizeChange,\n          onPageChange: handlePageChange,\n          loading: loading,\n          rowHeight: 30,\n          components: browseListData.length > 0 ? {\n            Pagination: CustomPagination,\n            NoRowsOverlay: CustomNoRowsOverlay\n          } : {},\n          onSortModelChange: sort => {\n            if (sort.length > 0) {\n              setParams({ ...params,\n                sort_column: sort[0].field,\n                sort_order: sort[0].sort\n              });\n            }\n          },\n          rows: []\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(SerialLedgerBrowse, \"pJ3YDSDdHWydBM0nM760nGKC2O8=\");\n\n_c = SerialLedgerBrowse;\nexport default SerialLedgerBrowse;\n\nvar _c;\n\n$RefreshReg$(_c, \"SerialLedgerBrowse\");","map":{"version":3,"sources":["F:/React code/diagnostic/src/pages/Stock/serialLedgerBrowse.js"],"names":["TextField","React","useEffect","useState","Autocomplete","CommonController","DataGrid","CustomPagination","CustomNoRowsOverlay","showErrorToast","user_id","localStorage","getItem","SerialLedgerBrowse","bodyParam","setBodyParam","product_id","serial_no","category_id","categoryList","setCategoryList","browseListData","setBrowseListData","totalRecord","setTotalRecords","loading","setLoading","params","setParams","pageNo","pageSize","filter_value","sort_column","sort_order","mlfbList","setMLFBList","selectedValue","setSelectedValue","category","mlfb","handlePageSizeChange","param","handlePageChange","getMLFBList","id","commonApiCallFilter","then","data","getCategoryList","getBrowseListData","handleAutoChange","name","value","commonApiCall","recordsFiltered","err","event","option","e","target","height","width","field","headerName","flex","hide","align","length","Pagination","NoRowsOverlay","sort"],"mappings":"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","sourcesContent":["import { TextField } from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport { Autocomplete } from \"@material-ui/lab\";\n\nimport { CommonController } from \"../../_redux/controller/common.controller\";\nimport { DataGrid } from \"@mui/x-data-grid\";\nimport CustomPagination from \"../../components/CustomPagination\";\nimport CustomNoRowsOverlay from \"../../components/customRowComponent\";\nimport { showErrorToast } from \"../../components/common\";\n\nconst user_id = {\n  user_id: localStorage.getItem(\"userId\"),\n};\n\nconst SerialLedgerBrowse = () => {\n  const [bodyParam, setBodyParam] = useState({\n    product_id: \"\",\n    serial_no: \"\",\n    category_id: \"\",\n  });\n  const [categoryList, setCategoryList] = useState([]);\n  const [browseListData, setBrowseListData] = useState([]);\n  const [totalRecord, setTotalRecords] = useState(0);\n  const [loading, setLoading] = useState(false);\n\n  const [params, setParams] = useState({\n    pageNo: 1,\n    pageSize: 10,\n    filter_value: \"\",\n    sort_column: \"\",\n    sort_order: \"\",\n  });\n\n  const [mlfbList, setMLFBList] = useState([]);\n  const [selectedValue, setSelectedValue] = useState({\n    category: \"\",\n    mlfb: \"\",\n  });\n\n  const handlePageSizeChange = (param) => {\n    setParams({ ...params, pageSize: param });\n  };\n  const handlePageChange = (param) => {\n    setParams({ ...params, pageNo: param });\n  };\n  const getMLFBList = async (id) => {\n    await CommonController.commonApiCallFilter(\n      `Dropdown/GetMlfbListInStock`,\n      {\n        category_id: id,\n      },\n      \"get\"\n    ).then((data) => setMLFBList(data));\n  };\n\n  const getCategoryList = async () => {\n    await CommonController.commonApiCallFilter(\"Dropdown/GetCategoryList\").then(\n      (data) => setCategoryList(data)\n    );\n  };\n\n  useEffect(() => {\n    getCategoryList();\n    getBrowseListData();\n  }, []);\n\n  useEffect(() => {\n    getBrowseListData();\n  }, [bodyParam]);\n\n  const handleAutoChange = (name, value) => {\n    setBodyParam({ ...bodyParam, [name]: value });\n  };\n\n  const getBrowseListData = async () => {\n    setLoading(true);\n    try {\n      await CommonController.commonApiCall(\n        \"Stock/ProductLedgerSerialNoReport\",\n        params,\n        bodyParam,\n        user_id\n      ).then((data) => {\n        setBrowseListData(data.data);\n        setTotalRecords(data.recordsFiltered);\n      });\n    } catch (err) {\n      showErrorToast(err);\n    }\n    setLoading(false);\n  };\n\n  return (\n    <>\n      <div className=\"card card-custom gutter-b  px-7 py-3\">\n        <div className=\"filter_box mb-5\">\n          <div className=\"row\">\n            <div className=\"col-md-1 d-flex align-items-center\">\n              <h4 className=\"mb-0\">Filters</h4>\n            </div>\n            <div className=\"col-md-2 mb-5 mb-md-0\">\n              <Autocomplete\n                disablePortal\n                id=\"combo-box-demo\"\n                options={categoryList}\n                onChange={(event, value) => {\n                  setSelectedValue({ ...selectedValue, category: value });\n                  handleAutoChange(\"category_id\", value ? value.id : null);\n                  if (value) {\n                    getMLFBList(value.id);\n                  }\n                }}\n                fullWidth\n                getOptionLabel={(option) => option.value}\n                value={selectedValue.category}\n                renderInput={(params) => (\n                  <TextField\n                    {...params}\n                    variant=\"outlined\"\n                    size=\"small\"\n                    label=\"Category\"\n                  />\n                )}\n              />\n            </div>\n            <div className=\"col-md-2 mb-5 mb-md-0\">\n              <Autocomplete\n                disablePortal\n                id=\"combo-box-demo2\"\n                options={mlfbList}\n                fullWidth\n                getOptionLabel={(option) => option.value}\n                value={selectedValue.mlfb}\n                onChange={(event, value) => {\n                  handleAutoChange(\"product_id\", value ? value.id : null);\n                  setSelectedValue({ ...selectedValue, mlfb: value });\n                }}\n                renderInput={(params) => (\n                  <TextField\n                    {...params}\n                    variant=\"outlined\"\n                    size=\"small\"\n                    label=\"MLFB No.\"\n                  />\n                )}\n              />\n            </div>\n            <div className=\"col-md-2\">\n              <TextField\n                variant=\"outlined\"\n                size=\"small\"\n                name=\"serial_no\"\n                label=\"Serial No\"\n                onChange={(e) =>\n                  setBodyParam({ ...bodyParam, serial_no: e.target.value })\n                }\n                value={bodyParam.serial_no}\n              />\n            </div>\n          </div>\n        </div>\n        <div style={{ height: 400, width: \"100%\" }}>\n          <DataGrid\n            columns={[\n              {\n                field: \"id\",\n                headerName: \"Sr. no\",\n                flex: 0,\n                hide: true,\n              },\n              {\n                field: \"entry_type\",\n                headerName: \"Entry Type\",\n                flex: 0.1,\n              },\n\n              {\n                field: \"tran_no\",\n                headerName: \"Tran No\",\n                flex: 0.1,\n              },\n              {\n                field: \"date\",\n                headerName: \"Date\",\n                flex: 0.1,\n              },\n              {\n                field: \"party\",\n                headerName: \"Party\",\n                flex: 0.1,\n              },\n              {\n                field: \"mlfb_no\",\n                headerName: \"In Qty\",\n                flex: 0.1,\n              },\n\n              {\n                field: \"serial_no\",\n                headerName: \"Out Qty\",\n                flex: 0.1,\n                align: \"right\",\n              },\n            ]}\n            pagination\n            disableColumnFilter\n            pageSize={params.pageSize}\n            page={params.pageNo}\n            rowsPerPageOptions={[10, 15, 25, 100]}\n            rowCount={totalRecord}\n            paginationMode=\"server\"\n            onPageSizeChange={handlePageSizeChange}\n            onPageChange={handlePageChange}\n            loading={loading}\n            rowHeight={30}\n            components={\n              browseListData.length > 0\n                ? {\n                    Pagination: CustomPagination,\n                    NoRowsOverlay: CustomNoRowsOverlay,\n                  }\n                : {}\n            }\n            onSortModelChange={(sort) => {\n              if (sort.length > 0) {\n                setParams({\n                  ...params,\n                  sort_column: sort[0].field,\n                  sort_order: sort[0].sort,\n                });\n              }\n            }}\n            rows={[]}\n          />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default SerialLedgerBrowse;\n"]},"metadata":{},"sourceType":"module"}