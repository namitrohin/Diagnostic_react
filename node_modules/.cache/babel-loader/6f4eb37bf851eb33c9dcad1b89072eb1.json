{"ast":null,"code":"var _jsxFileName = \"F:\\\\React code\\\\diagnostic\\\\src\\\\pages\\\\Master\\\\Configuration\\\\costing\\\\tabs\\\\form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { TextField, Button } from \"@material-ui/core\";\nimport { Autocomplete } from \"@material-ui/lab\";\nimport { DatePicker } from \"@material-ui/pickers\";\nimport SimpleReactValidator from \"simple-react-validator\";\nimport { buttonLoader, showErrorToast, showSuccessToast } from \"../../../../../components/common\";\nimport { CommonController } from \"../../../../../_redux/controller/common.controller\";\nimport { SimpleTable } from \"../../../../../components/basic-table\";\nimport useForceUpdate from \"use-force-update\";\nimport moment from \"moment\";\nimport { useSelector } from \"react-redux\";\nimport { Loader } from \"../../../../../components/loader\";\nimport { selectedCostingTabsId } from \"../../../../../_redux/actions/masters/all.action\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddOrEditCostingTabs = ({\n  onClose\n}) => {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  const selectedIdResponse = useSelector(state => state.AllReducersMaster.costingTabsId);\n  const [validator, setValidator] = useState(new SimpleReactValidator());\n  const forceUpdate = useForceUpdate();\n  const [insertParams, setInsertParams] = useState({\n    tab_id: \"0\",\n    mtab_id: \"\",\n    mtab_name: \"\",\n    description: \"\",\n    user_id: localStorage.getItem(\"userId\"),\n    user_name: localStorage.getItem(\"userName\")\n  });\n  useEffect(() => {\n    if (selectedIdResponse) {\n      CommonController.commonApiCallFilter(\"Configuration/ConfigurationCostingTabsPreview\", {\n        mtab_id: selectedIdResponse\n      }).then(data => {\n        if (data.mtab_id) {\n          setInsertParams({ ...insertParams,\n            tab_id: data.tab_id,\n            mtab_id: data.mtab_id,\n            mtab_name: data.mtab_name,\n            description: data.description\n          });\n        } else {\n          showErrorToast(\"Something went wrong\");\n        }\n      });\n    }\n  }, [selectedIdResponse]);\n\n  const insertCombo = async () => {\n    if (validator.allValid()) {\n      setLoading(true);\n      CommonController.commonApiCallFilter(\"Configuration/ConfigurationCostingTabsInsert\", insertParams).then(data => {\n        if (data.valid) {\n          showSuccessToast(\"Successfully Saved\");\n          setLoading(false);\n          onClose();\n        } else {\n          showErrorToast(\"Something went wrong\");\n        }\n      });\n    } else {\n      validator.showMessages(); // rerender to show messages for the first time\n      // you can use the autoForceUpdate option to do this automatically`\n\n      forceUpdate();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid mt-5 pt-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-6\",\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            variant: \"outlined\",\n            fullWidth: true,\n            size: \"small\",\n            label: \"Tabs Name*\",\n            value: insertParams.mtab_name,\n            onChange: event => {\n              setInsertParams({ ...insertParams,\n                mtab_name: event.target.value\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-danger\",\n            children: validator.message(\"Tabs Name\", insertParams.mtab_name, \"required\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-6\",\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            variant: \"outlined\",\n            fullWidth: true,\n            size: \"small\",\n            multiline: true,\n            label: \"Description\",\n            value: insertParams.description,\n            onChange: event => {\n              setInsertParams({ ...insertParams,\n                description: event.target.value\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-100 text-right mt-4\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => onClose(),\n          variant: \"contained\",\n          className: \"mr-2\",\n          color: \"primary\",\n          disableElevation: true,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), buttonLoader(loading, \"Save\", insertCombo, \"primary\")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddOrEditCostingTabs, \"nIWXLnlfCh4VG+SZk8xJuRIIigk=\", false, function () {\n  return [useSelector, useForceUpdate];\n});\n\n_c = AddOrEditCostingTabs;\nexport default AddOrEditCostingTabs;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddOrEditCostingTabs\");","map":{"version":3,"sources":["F:/React code/diagnostic/src/pages/Master/Configuration/costing/tabs/form.js"],"names":["React","useEffect","useState","TextField","Button","Autocomplete","DatePicker","SimpleReactValidator","buttonLoader","showErrorToast","showSuccessToast","CommonController","SimpleTable","useForceUpdate","moment","useSelector","Loader","selectedCostingTabsId","AddOrEditCostingTabs","onClose","loading","setLoading","selectedIdResponse","state","AllReducersMaster","costingTabsId","validator","setValidator","forceUpdate","insertParams","setInsertParams","tab_id","mtab_id","mtab_name","description","user_id","localStorage","getItem","user_name","commonApiCallFilter","then","data","insertCombo","allValid","valid","showMessages","event","target","value","message"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { TextField, Button } from \"@material-ui/core\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport { DatePicker } from \"@material-ui/pickers\";\r\nimport SimpleReactValidator from \"simple-react-validator\";\r\n\r\nimport {\r\n  buttonLoader,\r\n  showErrorToast,\r\n  showSuccessToast,\r\n} from \"../../../../../components/common\";\r\nimport { CommonController } from \"../../../../../_redux/controller/common.controller\";\r\nimport { SimpleTable } from \"../../../../../components/basic-table\";\r\nimport useForceUpdate from \"use-force-update\";\r\nimport moment from \"moment\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Loader } from \"../../../../../components/loader\";\r\nimport { selectedCostingTabsId } from \"../../../../../_redux/actions/masters/all.action\";\r\n\r\nconst AddOrEditCostingTabs = ({ onClose }) => {\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const selectedIdResponse = useSelector(\r\n    (state) => state.AllReducersMaster.costingTabsId\r\n  );\r\n\r\n  const [validator, setValidator] = useState(new SimpleReactValidator());\r\n\r\n  const forceUpdate = useForceUpdate();\r\n\r\n  const [insertParams, setInsertParams] = useState({\r\n    tab_id: \"0\",\r\n    mtab_id: \"\",\r\n    mtab_name: \"\",\r\n    description: \"\",\r\n    user_id: localStorage.getItem(\"userId\"),\r\n    user_name: localStorage.getItem(\"userName\"),\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (selectedIdResponse) {\r\n      CommonController.commonApiCallFilter(\r\n        \"Configuration/ConfigurationCostingTabsPreview\",\r\n        {\r\n          mtab_id: selectedIdResponse,\r\n        }\r\n      ).then((data) => {\r\n        if (data.mtab_id) {\r\n          setInsertParams({\r\n            ...insertParams,\r\n            tab_id: data.tab_id,\r\n            mtab_id: data.mtab_id,\r\n            mtab_name: data.mtab_name,\r\n            description: data.description,\r\n          });\r\n        } else {\r\n          showErrorToast(\"Something went wrong\");\r\n        }\r\n      });\r\n    }\r\n  }, [selectedIdResponse]);\r\n\r\n  const insertCombo = async () => {\r\n    if (validator.allValid()) {\r\n      setLoading(true);\r\n      CommonController.commonApiCallFilter(\r\n        \"Configuration/ConfigurationCostingTabsInsert\",\r\n        insertParams\r\n      ).then((data) => {\r\n        if (data.valid) {\r\n          showSuccessToast(\"Successfully Saved\");\r\n          setLoading(false);\r\n          onClose();\r\n        } else {\r\n          showErrorToast(\"Something went wrong\");\r\n        }\r\n      });\r\n    } else {\r\n      validator.showMessages();\r\n      // rerender to show messages for the first time\r\n      // you can use the autoForceUpdate option to do this automatically`\r\n      forceUpdate();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"container-fluid mt-5 pt-5\">\r\n        {/* {loading && <Loader />} */}\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\">\r\n            <TextField\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              size=\"small\"\r\n              label=\"Tabs Name*\"\r\n              value={insertParams.mtab_name}\r\n              onChange={(event) => {\r\n                setInsertParams({\r\n                  ...insertParams,\r\n                  mtab_name: event.target.value,\r\n                });\r\n              }}\r\n            />\r\n            <p className=\"text-danger\">\r\n              {validator.message(\r\n                \"Tabs Name\",\r\n                insertParams.mtab_name,\r\n                \"required\"\r\n              )}\r\n            </p>\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            <TextField\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              size=\"small\"\r\n              multiline\r\n              label=\"Description\"\r\n              value={insertParams.description}\r\n              onChange={(event) => {\r\n                setInsertParams({\r\n                  ...insertParams,\r\n                  description: event.target.value,\r\n                });\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"w-100 text-right mt-4\">\r\n          <Button\r\n            onClick={() => onClose()}\r\n            variant=\"contained\"\r\n            className=\"mr-2\"\r\n            color=\"primary\"\r\n            disableElevation\r\n          >\r\n            Cancel\r\n          </Button>\r\n          {buttonLoader(loading, \"Save\", insertCombo, \"primary\")}\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default AddOrEditCostingTabs;\r\n"]},"metadata":{},"sourceType":"module"}