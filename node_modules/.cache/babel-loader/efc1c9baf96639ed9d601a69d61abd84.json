{"ast":null,"code":"import { userService } from \"../../../services\";\nexport const ConfigurationMasterController = {\n  searchAccountGroupBrowse,\n  updateAccountGroupInfo,\n  searchPincodeBrowse,\n  updatePincodeInfo,\n  deleteSelectedPincode\n};\n\nasync function searchAccountGroupBrowse(params) {\n  try {\n    let apiEndpoint = `Configuration/ConfigurationMasterBrowse?filter_value=${params.filter_value}&page_number=${params.pageNo}&page_size=${params.pageSize}&sort_column=${params.sort_column}&sort_order=${params.sort_order}`;\n    let response = await userService.post(apiEndpoint);\n\n    if (response) {\n      return response.data;\n    } else {\n      if (response.data.status !== 500) {\n        alert(response.data);\n      }\n\n      return null;\n    }\n  } catch (error) {\n    console.log(\"error\", error);\n    return null;\n  }\n}\n\nasync function updateAccountGroupInfo(params) {\n  try {\n    let apiEndpoint = `Configuration/ConfigurationGroupInsert`;\n    let response = await userService.post(apiEndpoint, params);\n\n    if (response) {\n      return response.data;\n    } else {\n      if (response.data.status !== 500) {\n        alert(response.data);\n      }\n\n      return null;\n    }\n  } catch (error) {\n    console.log(\"error\", error);\n    return null;\n  }\n}\n\nasync function searchPincodeBrowse(params) {\n  try {\n    let apiEndpoint = `Configuration/ConfigurationPincodeBrowse?filter_value=${params.filter_value}&page_number=${params.pageNo}&page_size=${params.pageSize}&sort_column=${params.sort_column}&sort_order=${params.sort_order}`;\n    let response = await userService.post(apiEndpoint);\n\n    if (response) {\n      return response.data;\n    } else {\n      if (response.data.status !== 500) {\n        alert(response.data);\n      }\n\n      return null;\n    }\n  } catch (error) {\n    console.log(\"error\", error);\n    return null;\n  }\n}\n\nasync function updatePincodeInfo(params) {\n  try {\n    let apiEndpoint = `Configuration/ConfigurationPincodeInsert`;\n    let response = await userService.post(apiEndpoint, params);\n\n    if (response) {\n      return response.data;\n    } else {\n      if (response.data.status !== 500) {\n        alert(response.data);\n      }\n\n      return null;\n    }\n  } catch (error) {\n    console.log(\"error\", error);\n    return null;\n  }\n}\n\nasync function deleteSelectedPincode(params) {\n  try {\n    let apiEndpoint = `Configuration/ConfigurationPincodeDelete`;\n    let response = await userService.post(apiEndpoint, params);\n\n    if (response) {\n      return response.data;\n    } else {\n      if (response.data.status !== 500) {\n        alert(response.data);\n      }\n\n      return null;\n    }\n  } catch (error) {\n    console.log(\"error\", error);\n    return null;\n  }\n}","map":{"version":3,"sources":["F:/React code/diagnostic/src/_redux/controller/Masters/configuration.controller.js"],"names":["userService","ConfigurationMasterController","searchAccountGroupBrowse","updateAccountGroupInfo","searchPincodeBrowse","updatePincodeInfo","deleteSelectedPincode","params","apiEndpoint","filter_value","pageNo","pageSize","sort_column","sort_order","response","post","data","status","alert","error","console","log"],"mappings":"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","sourcesContent":["import { userService } from \"../../../services\";\r\n\r\nexport const ConfigurationMasterController = {\r\n    searchAccountGroupBrowse,\r\n    updateAccountGroupInfo,\r\n    searchPincodeBrowse,\r\n    updatePincodeInfo,\r\n    deleteSelectedPincode\r\n}\r\n\r\n\r\nasync function searchAccountGroupBrowse(params) {\r\n    try {\r\n        let apiEndpoint = `Configuration/ConfigurationMasterBrowse?filter_value=${params.filter_value}&page_number=${params.pageNo}&page_size=${params.pageSize}&sort_column=${params.sort_column}&sort_order=${params.sort_order}`;\r\n        let response = await userService.post(apiEndpoint);\r\n        \r\n        if (response) {\r\n            return (response.data);\r\n        }\r\n        else {\r\n            if (response.data.status !== 500) {\r\n                alert(response.data);\r\n            }\r\n            return null;\r\n        }\r\n    }\r\n    catch (error) {\r\n        console.log(\"error\", error);\r\n        return null;\r\n    }\r\n}\r\n\r\nasync function updateAccountGroupInfo(params) {\r\n    try {\r\n        let apiEndpoint = `Configuration/ConfigurationGroupInsert`;\r\n        let response = await userService.post(apiEndpoint,params);\r\n        \r\n        if (response) {\r\n            return (response.data);\r\n        }\r\n        else {\r\n            if (response.data.status !== 500) {\r\n                alert(response.data);\r\n            }\r\n            return null;\r\n        }\r\n    }\r\n    catch (error) {\r\n        console.log(\"error\", error);\r\n        return null;\r\n    }\r\n}\r\n\r\n\r\nasync function searchPincodeBrowse(params) {\r\n    try {\r\n        let apiEndpoint = `Configuration/ConfigurationPincodeBrowse?filter_value=${params.filter_value}&page_number=${params.pageNo}&page_size=${params.pageSize}&sort_column=${params.sort_column}&sort_order=${params.sort_order}`;\r\n        let response = await userService.post(apiEndpoint);\r\n        \r\n        if (response) {\r\n            return (response.data);\r\n        }\r\n        else {\r\n            if (response.data.status !== 500) {\r\n                alert(response.data);\r\n            }\r\n            return null;\r\n        }\r\n    }\r\n    catch (error) {\r\n        console.log(\"error\", error);\r\n        return null;\r\n    }\r\n}\r\n \r\n\r\nasync function updatePincodeInfo(params) {\r\n    try {\r\n        let apiEndpoint = `Configuration/ConfigurationPincodeInsert`;\r\n        let response = await userService.post(apiEndpoint,params);\r\n        \r\n        if (response) {\r\n            return (response.data);\r\n        }\r\n        else {\r\n            if (response.data.status !== 500) {\r\n                alert(response.data);\r\n            }\r\n            return null;\r\n        }\r\n    }\r\n    catch (error) {\r\n        console.log(\"error\", error);\r\n        return null;\r\n    }\r\n}\r\n\r\n\r\nasync function deleteSelectedPincode(params) {\r\n    try {\r\n        let apiEndpoint = `Configuration/ConfigurationPincodeDelete`;\r\n        let response = await userService.post(apiEndpoint,params);\r\n        \r\n        if (response) {\r\n            return (response.data);\r\n        }\r\n        else {\r\n            if (response.data.status !== 500) {\r\n                alert(response.data);\r\n            }\r\n            return null;\r\n        }\r\n    }\r\n    catch (error) {\r\n        console.log(\"error\", error);\r\n        return null;\r\n    }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}